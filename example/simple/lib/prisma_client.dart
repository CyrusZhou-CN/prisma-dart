library prisma.client; // ignore_for_file: no_leading_underscores_for_library_prefixes

import 'package:orm/orm.dart' as _i1;
import 'package:orm/configure.dart' as _i2;
import 'prisma_configurator.dart' as _i3;
import 'package:orm/dmmf.dart' as _i4;
import 'dart:convert' as _i5;
export 'package:orm/orm.dart' show Datasource, PrismaClient, PrismaNull;
import 'package:orm/orm.dart' show PrismaNull;
import 'package:freezed_annotation/freezed_annotation.dart';
export 'package:orm/orm.dart' show TransactionIsolationLevel;

part 'prisma_client.g.dart';
part 'prisma_client.freezed.dart';
// GENERATED CODE - DO NOT MODIFY BY HAND
//
// ignore_for_file: camel_case_types, constant_identifier_names, depend_on_referenced_packages, invalid_annotation_target, non_constant_identifier_names, unnecessary_import, unused_import, unused_shown_name
//
//******************************************************************************
// This file was generated by Prisma
// GitHub: https://github.com/odroe/prisma-dart
//******************************************************************************

enum SaySomethingScalarFieldEnum { id, createdAt, updatedAt, text }

enum SortOrder { asc, desc }

@freezed
class SaySomethingWhereInput_AND
    with _$SaySomethingWhereInput_AND
    implements _i1.JsonSerializable {
  const factory SaySomethingWhereInput_AND.withSaySomethingWhereInput(
          SaySomethingWhereInput value) =
      SaySomethingWhereInput_AND_withSaySomethingWhereInput;

  const factory SaySomethingWhereInput_AND.withSaySomethingWhereInputList(
          List<SaySomethingWhereInput> value) =
      SaySomethingWhereInput_AND_withSaySomethingWhereInputList;

  factory SaySomethingWhereInput_AND.fromJson(Map<String, dynamic> json) =>
      _$SaySomethingWhereInput_ANDFromJson(json);
}

@freezed
class SaySomethingWhereInput_NOT
    with _$SaySomethingWhereInput_NOT
    implements _i1.JsonSerializable {
  const factory SaySomethingWhereInput_NOT.withSaySomethingWhereInput(
          SaySomethingWhereInput value) =
      SaySomethingWhereInput_NOT_withSaySomethingWhereInput;

  const factory SaySomethingWhereInput_NOT.withSaySomethingWhereInputList(
          List<SaySomethingWhereInput> value) =
      SaySomethingWhereInput_NOT_withSaySomethingWhereInputList;

  factory SaySomethingWhereInput_NOT.fromJson(Map<String, dynamic> json) =>
      _$SaySomethingWhereInput_NOTFromJson(json);
}

@freezed
class SaySomethingWhereInput_id
    with _$SaySomethingWhereInput_id
    implements _i1.JsonSerializable {
  const factory SaySomethingWhereInput_id.withIntFilter(IntFilter value) =
      SaySomethingWhereInput_id_withIntFilter;

  const factory SaySomethingWhereInput_id.withInt(int value) =
      SaySomethingWhereInput_id_withInt;

  factory SaySomethingWhereInput_id.fromJson(Map<String, dynamic> json) =>
      _$SaySomethingWhereInput_idFromJson(json);
}

@freezed
class SaySomethingWhereInput_createdAt
    with _$SaySomethingWhereInput_createdAt
    implements _i1.JsonSerializable {
  const factory SaySomethingWhereInput_createdAt.withDateTimeFilter(
          DateTimeFilter value) =
      SaySomethingWhereInput_createdAt_withDateTimeFilter;

  const factory SaySomethingWhereInput_createdAt.withDateTime(DateTime value) =
      SaySomethingWhereInput_createdAt_withDateTime;

  factory SaySomethingWhereInput_createdAt.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingWhereInput_createdAtFromJson(json);
}

@freezed
class SaySomethingWhereInput_updatedAt
    with _$SaySomethingWhereInput_updatedAt
    implements _i1.JsonSerializable {
  const factory SaySomethingWhereInput_updatedAt.withDateTimeFilter(
          DateTimeFilter value) =
      SaySomethingWhereInput_updatedAt_withDateTimeFilter;

  const factory SaySomethingWhereInput_updatedAt.withDateTime(DateTime value) =
      SaySomethingWhereInput_updatedAt_withDateTime;

  factory SaySomethingWhereInput_updatedAt.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingWhereInput_updatedAtFromJson(json);
}

@freezed
class SaySomethingWhereInput_text
    with _$SaySomethingWhereInput_text
    implements _i1.JsonSerializable {
  const factory SaySomethingWhereInput_text.withStringFilter(
      StringFilter value) = SaySomethingWhereInput_text_withStringFilter;

  const factory SaySomethingWhereInput_text.withString(String value) =
      SaySomethingWhereInput_text_withString;

  factory SaySomethingWhereInput_text.fromJson(Map<String, dynamic> json) =>
      _$SaySomethingWhereInput_textFromJson(json);
}

@freezed
class SaySomethingWhereInput
    with _$SaySomethingWhereInput
    implements _i1.JsonSerializable {
  factory SaySomethingWhereInput.fromJson(Map<String, dynamic> json) =>
      _$SaySomethingWhereInputFromJson(json);

  const factory SaySomethingWhereInput({
    @JsonKey(name: 'AND') SaySomethingWhereInput_AND? AND,
    @JsonKey(name: 'OR') _i1.PrismaNullable<List<SaySomethingWhereInput>> OR,
    @JsonKey(name: 'NOT') SaySomethingWhereInput_NOT? NOT,
    @JsonKey(name: 'id') SaySomethingWhereInput_id? id,
    @JsonKey(name: 'createdAt') SaySomethingWhereInput_createdAt? createdAt,
    @JsonKey(name: 'updatedAt') SaySomethingWhereInput_updatedAt? updatedAt,
    @JsonKey(name: 'text') SaySomethingWhereInput_text? text,
  }) = _SaySomethingWhereInput;
}

@freezed
class SaySomethingOrderByWithRelationInput
    with _$SaySomethingOrderByWithRelationInput
    implements _i1.JsonSerializable {
  factory SaySomethingOrderByWithRelationInput.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingOrderByWithRelationInputFromJson(json);

  const factory SaySomethingOrderByWithRelationInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'createdAt') _i1.PrismaNullable<SortOrder> createdAt,
    @JsonKey(name: 'updatedAt') _i1.PrismaNullable<SortOrder> updatedAt,
    @JsonKey(name: 'text') _i1.PrismaNullable<SortOrder> text,
  }) = _SaySomethingOrderByWithRelationInput;
}

@freezed
class SaySomethingWhereUniqueInput
    with _$SaySomethingWhereUniqueInput
    implements _i1.JsonSerializable {
  factory SaySomethingWhereUniqueInput.fromJson(Map<String, dynamic> json) =>
      _$SaySomethingWhereUniqueInputFromJson(json);

  const factory SaySomethingWhereUniqueInput(
          {@JsonKey(name: 'id') _i1.PrismaNullable<int> id}) =
      _SaySomethingWhereUniqueInput;
}

@freezed
class SaySomethingOrderByWithAggregationInput
    with _$SaySomethingOrderByWithAggregationInput
    implements _i1.JsonSerializable {
  factory SaySomethingOrderByWithAggregationInput.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingOrderByWithAggregationInputFromJson(json);

  const factory SaySomethingOrderByWithAggregationInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'createdAt') _i1.PrismaNullable<SortOrder> createdAt,
    @JsonKey(name: 'updatedAt') _i1.PrismaNullable<SortOrder> updatedAt,
    @JsonKey(name: 'text') _i1.PrismaNullable<SortOrder> text,
    @JsonKey(name: '_count')
        _i1.PrismaNullable<SaySomethingCountOrderByAggregateInput>
            prisma__count,
    @JsonKey(name: '_avg')
        _i1.PrismaNullable<SaySomethingAvgOrderByAggregateInput> prisma__avg,
    @JsonKey(name: '_max')
        _i1.PrismaNullable<SaySomethingMaxOrderByAggregateInput> prisma__max,
    @JsonKey(name: '_min')
        _i1.PrismaNullable<SaySomethingMinOrderByAggregateInput> prisma__min,
    @JsonKey(name: '_sum')
        _i1.PrismaNullable<SaySomethingSumOrderByAggregateInput> prisma__sum,
  }) = _SaySomethingOrderByWithAggregationInput;
}

@freezed
class SaySomethingScalarWhereWithAggregatesInput_AND
    with _$SaySomethingScalarWhereWithAggregatesInput_AND
    implements _i1.JsonSerializable {
  const factory SaySomethingScalarWhereWithAggregatesInput_AND.withSaySomethingScalarWhereWithAggregatesInput(
          SaySomethingScalarWhereWithAggregatesInput value) =
      SaySomethingScalarWhereWithAggregatesInput_AND_withSaySomethingScalarWhereWithAggregatesInput;

  const factory SaySomethingScalarWhereWithAggregatesInput_AND.withSaySomethingScalarWhereWithAggregatesInputList(
          List<SaySomethingScalarWhereWithAggregatesInput> value) =
      SaySomethingScalarWhereWithAggregatesInput_AND_withSaySomethingScalarWhereWithAggregatesInputList;

  factory SaySomethingScalarWhereWithAggregatesInput_AND.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingScalarWhereWithAggregatesInput_ANDFromJson(json);
}

@freezed
class SaySomethingScalarWhereWithAggregatesInput_NOT
    with _$SaySomethingScalarWhereWithAggregatesInput_NOT
    implements _i1.JsonSerializable {
  const factory SaySomethingScalarWhereWithAggregatesInput_NOT.withSaySomethingScalarWhereWithAggregatesInput(
          SaySomethingScalarWhereWithAggregatesInput value) =
      SaySomethingScalarWhereWithAggregatesInput_NOT_withSaySomethingScalarWhereWithAggregatesInput;

  const factory SaySomethingScalarWhereWithAggregatesInput_NOT.withSaySomethingScalarWhereWithAggregatesInputList(
          List<SaySomethingScalarWhereWithAggregatesInput> value) =
      SaySomethingScalarWhereWithAggregatesInput_NOT_withSaySomethingScalarWhereWithAggregatesInputList;

  factory SaySomethingScalarWhereWithAggregatesInput_NOT.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingScalarWhereWithAggregatesInput_NOTFromJson(json);
}

@freezed
class SaySomethingScalarWhereWithAggregatesInput_id
    with _$SaySomethingScalarWhereWithAggregatesInput_id
    implements _i1.JsonSerializable {
  const factory SaySomethingScalarWhereWithAggregatesInput_id.withIntWithAggregatesFilter(
          IntWithAggregatesFilter value) =
      SaySomethingScalarWhereWithAggregatesInput_id_withIntWithAggregatesFilter;

  const factory SaySomethingScalarWhereWithAggregatesInput_id.withInt(
      int value) = SaySomethingScalarWhereWithAggregatesInput_id_withInt;

  factory SaySomethingScalarWhereWithAggregatesInput_id.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingScalarWhereWithAggregatesInput_idFromJson(json);
}

@freezed
class SaySomethingScalarWhereWithAggregatesInput_createdAt
    with _$SaySomethingScalarWhereWithAggregatesInput_createdAt
    implements _i1.JsonSerializable {
  const factory SaySomethingScalarWhereWithAggregatesInput_createdAt.withDateTimeWithAggregatesFilter(
          DateTimeWithAggregatesFilter value) =
      SaySomethingScalarWhereWithAggregatesInput_createdAt_withDateTimeWithAggregatesFilter;

  const factory SaySomethingScalarWhereWithAggregatesInput_createdAt.withDateTime(
          DateTime value) =
      SaySomethingScalarWhereWithAggregatesInput_createdAt_withDateTime;

  factory SaySomethingScalarWhereWithAggregatesInput_createdAt.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingScalarWhereWithAggregatesInput_createdAtFromJson(json);
}

@freezed
class SaySomethingScalarWhereWithAggregatesInput_updatedAt
    with _$SaySomethingScalarWhereWithAggregatesInput_updatedAt
    implements _i1.JsonSerializable {
  const factory SaySomethingScalarWhereWithAggregatesInput_updatedAt.withDateTimeWithAggregatesFilter(
          DateTimeWithAggregatesFilter value) =
      SaySomethingScalarWhereWithAggregatesInput_updatedAt_withDateTimeWithAggregatesFilter;

  const factory SaySomethingScalarWhereWithAggregatesInput_updatedAt.withDateTime(
          DateTime value) =
      SaySomethingScalarWhereWithAggregatesInput_updatedAt_withDateTime;

  factory SaySomethingScalarWhereWithAggregatesInput_updatedAt.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingScalarWhereWithAggregatesInput_updatedAtFromJson(json);
}

@freezed
class SaySomethingScalarWhereWithAggregatesInput_text
    with _$SaySomethingScalarWhereWithAggregatesInput_text
    implements _i1.JsonSerializable {
  const factory SaySomethingScalarWhereWithAggregatesInput_text.withStringWithAggregatesFilter(
          StringWithAggregatesFilter value) =
      SaySomethingScalarWhereWithAggregatesInput_text_withStringWithAggregatesFilter;

  const factory SaySomethingScalarWhereWithAggregatesInput_text.withString(
          String value) =
      SaySomethingScalarWhereWithAggregatesInput_text_withString;

  factory SaySomethingScalarWhereWithAggregatesInput_text.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingScalarWhereWithAggregatesInput_textFromJson(json);
}

@freezed
class SaySomethingScalarWhereWithAggregatesInput
    with _$SaySomethingScalarWhereWithAggregatesInput
    implements _i1.JsonSerializable {
  factory SaySomethingScalarWhereWithAggregatesInput.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingScalarWhereWithAggregatesInputFromJson(json);

  const factory SaySomethingScalarWhereWithAggregatesInput({
    @JsonKey(name: 'AND') SaySomethingScalarWhereWithAggregatesInput_AND? AND,
    @JsonKey(name: 'OR')
        _i1.PrismaNullable<List<SaySomethingScalarWhereWithAggregatesInput>> OR,
    @JsonKey(name: 'NOT') SaySomethingScalarWhereWithAggregatesInput_NOT? NOT,
    @JsonKey(name: 'id') SaySomethingScalarWhereWithAggregatesInput_id? id,
    @JsonKey(name: 'createdAt')
        SaySomethingScalarWhereWithAggregatesInput_createdAt? createdAt,
    @JsonKey(name: 'updatedAt')
        SaySomethingScalarWhereWithAggregatesInput_updatedAt? updatedAt,
    @JsonKey(name: 'text')
        SaySomethingScalarWhereWithAggregatesInput_text? text,
  }) = _SaySomethingScalarWhereWithAggregatesInput;
}

@freezed
class SaySomethingCreateInput
    with _$SaySomethingCreateInput
    implements _i1.JsonSerializable {
  factory SaySomethingCreateInput.fromJson(Map<String, dynamic> json) =>
      _$SaySomethingCreateInputFromJson(json);

  const factory SaySomethingCreateInput({
    @JsonKey(name: 'createdAt') _i1.PrismaNullable<DateTime> createdAt,
    @JsonKey(name: 'updatedAt') _i1.PrismaNullable<DateTime> updatedAt,
    @JsonKey(name: 'text') required String text,
  }) = _SaySomethingCreateInput;
}

@freezed
class SaySomethingUncheckedCreateInput
    with _$SaySomethingUncheckedCreateInput
    implements _i1.JsonSerializable {
  factory SaySomethingUncheckedCreateInput.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUncheckedCreateInputFromJson(json);

  const factory SaySomethingUncheckedCreateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<int> id,
    @JsonKey(name: 'createdAt') _i1.PrismaNullable<DateTime> createdAt,
    @JsonKey(name: 'updatedAt') _i1.PrismaNullable<DateTime> updatedAt,
    @JsonKey(name: 'text') required String text,
  }) = _SaySomethingUncheckedCreateInput;
}

@freezed
class SaySomethingUpdateInput_createdAt
    with _$SaySomethingUpdateInput_createdAt
    implements _i1.JsonSerializable {
  const factory SaySomethingUpdateInput_createdAt.withDateTime(DateTime value) =
      SaySomethingUpdateInput_createdAt_withDateTime;

  const factory SaySomethingUpdateInput_createdAt.withDateTimeFieldUpdateOperationsInput(
          DateTimeFieldUpdateOperationsInput value) =
      SaySomethingUpdateInput_createdAt_withDateTimeFieldUpdateOperationsInput;

  factory SaySomethingUpdateInput_createdAt.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUpdateInput_createdAtFromJson(json);
}

@freezed
class SaySomethingUpdateInput_updatedAt
    with _$SaySomethingUpdateInput_updatedAt
    implements _i1.JsonSerializable {
  const factory SaySomethingUpdateInput_updatedAt.withDateTime(DateTime value) =
      SaySomethingUpdateInput_updatedAt_withDateTime;

  const factory SaySomethingUpdateInput_updatedAt.withDateTimeFieldUpdateOperationsInput(
          DateTimeFieldUpdateOperationsInput value) =
      SaySomethingUpdateInput_updatedAt_withDateTimeFieldUpdateOperationsInput;

  factory SaySomethingUpdateInput_updatedAt.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUpdateInput_updatedAtFromJson(json);
}

@freezed
class SaySomethingUpdateInput_text
    with _$SaySomethingUpdateInput_text
    implements _i1.JsonSerializable {
  const factory SaySomethingUpdateInput_text.withString(String value) =
      SaySomethingUpdateInput_text_withString;

  const factory SaySomethingUpdateInput_text.withStringFieldUpdateOperationsInput(
          StringFieldUpdateOperationsInput value) =
      SaySomethingUpdateInput_text_withStringFieldUpdateOperationsInput;

  factory SaySomethingUpdateInput_text.fromJson(Map<String, dynamic> json) =>
      _$SaySomethingUpdateInput_textFromJson(json);
}

@freezed
class SaySomethingUpdateInput
    with _$SaySomethingUpdateInput
    implements _i1.JsonSerializable {
  factory SaySomethingUpdateInput.fromJson(Map<String, dynamic> json) =>
      _$SaySomethingUpdateInputFromJson(json);

  const factory SaySomethingUpdateInput({
    @JsonKey(name: 'createdAt') SaySomethingUpdateInput_createdAt? createdAt,
    @JsonKey(name: 'updatedAt') SaySomethingUpdateInput_updatedAt? updatedAt,
    @JsonKey(name: 'text') SaySomethingUpdateInput_text? text,
  }) = _SaySomethingUpdateInput;
}

@freezed
class SaySomethingUncheckedUpdateInput_id
    with _$SaySomethingUncheckedUpdateInput_id
    implements _i1.JsonSerializable {
  const factory SaySomethingUncheckedUpdateInput_id.withInt(int value) =
      SaySomethingUncheckedUpdateInput_id_withInt;

  const factory SaySomethingUncheckedUpdateInput_id.withIntFieldUpdateOperationsInput(
          IntFieldUpdateOperationsInput value) =
      SaySomethingUncheckedUpdateInput_id_withIntFieldUpdateOperationsInput;

  factory SaySomethingUncheckedUpdateInput_id.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUncheckedUpdateInput_idFromJson(json);
}

@freezed
class SaySomethingUncheckedUpdateInput_createdAt
    with _$SaySomethingUncheckedUpdateInput_createdAt
    implements _i1.JsonSerializable {
  const factory SaySomethingUncheckedUpdateInput_createdAt.withDateTime(
      DateTime value) = SaySomethingUncheckedUpdateInput_createdAt_withDateTime;

  const factory SaySomethingUncheckedUpdateInput_createdAt.withDateTimeFieldUpdateOperationsInput(
          DateTimeFieldUpdateOperationsInput value) =
      SaySomethingUncheckedUpdateInput_createdAt_withDateTimeFieldUpdateOperationsInput;

  factory SaySomethingUncheckedUpdateInput_createdAt.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUncheckedUpdateInput_createdAtFromJson(json);
}

@freezed
class SaySomethingUncheckedUpdateInput_updatedAt
    with _$SaySomethingUncheckedUpdateInput_updatedAt
    implements _i1.JsonSerializable {
  const factory SaySomethingUncheckedUpdateInput_updatedAt.withDateTime(
      DateTime value) = SaySomethingUncheckedUpdateInput_updatedAt_withDateTime;

  const factory SaySomethingUncheckedUpdateInput_updatedAt.withDateTimeFieldUpdateOperationsInput(
          DateTimeFieldUpdateOperationsInput value) =
      SaySomethingUncheckedUpdateInput_updatedAt_withDateTimeFieldUpdateOperationsInput;

  factory SaySomethingUncheckedUpdateInput_updatedAt.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUncheckedUpdateInput_updatedAtFromJson(json);
}

@freezed
class SaySomethingUncheckedUpdateInput_text
    with _$SaySomethingUncheckedUpdateInput_text
    implements _i1.JsonSerializable {
  const factory SaySomethingUncheckedUpdateInput_text.withString(String value) =
      SaySomethingUncheckedUpdateInput_text_withString;

  const factory SaySomethingUncheckedUpdateInput_text.withStringFieldUpdateOperationsInput(
          StringFieldUpdateOperationsInput value) =
      SaySomethingUncheckedUpdateInput_text_withStringFieldUpdateOperationsInput;

  factory SaySomethingUncheckedUpdateInput_text.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUncheckedUpdateInput_textFromJson(json);
}

@freezed
class SaySomethingUncheckedUpdateInput
    with _$SaySomethingUncheckedUpdateInput
    implements _i1.JsonSerializable {
  factory SaySomethingUncheckedUpdateInput.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUncheckedUpdateInputFromJson(json);

  const factory SaySomethingUncheckedUpdateInput({
    @JsonKey(name: 'id') SaySomethingUncheckedUpdateInput_id? id,
    @JsonKey(name: 'createdAt')
        SaySomethingUncheckedUpdateInput_createdAt? createdAt,
    @JsonKey(name: 'updatedAt')
        SaySomethingUncheckedUpdateInput_updatedAt? updatedAt,
    @JsonKey(name: 'text') SaySomethingUncheckedUpdateInput_text? text,
  }) = _SaySomethingUncheckedUpdateInput;
}

@freezed
class SaySomethingUpdateManyMutationInput_createdAt
    with _$SaySomethingUpdateManyMutationInput_createdAt
    implements _i1.JsonSerializable {
  const factory SaySomethingUpdateManyMutationInput_createdAt.withDateTime(
          DateTime value) =
      SaySomethingUpdateManyMutationInput_createdAt_withDateTime;

  const factory SaySomethingUpdateManyMutationInput_createdAt.withDateTimeFieldUpdateOperationsInput(
          DateTimeFieldUpdateOperationsInput value) =
      SaySomethingUpdateManyMutationInput_createdAt_withDateTimeFieldUpdateOperationsInput;

  factory SaySomethingUpdateManyMutationInput_createdAt.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUpdateManyMutationInput_createdAtFromJson(json);
}

@freezed
class SaySomethingUpdateManyMutationInput_updatedAt
    with _$SaySomethingUpdateManyMutationInput_updatedAt
    implements _i1.JsonSerializable {
  const factory SaySomethingUpdateManyMutationInput_updatedAt.withDateTime(
          DateTime value) =
      SaySomethingUpdateManyMutationInput_updatedAt_withDateTime;

  const factory SaySomethingUpdateManyMutationInput_updatedAt.withDateTimeFieldUpdateOperationsInput(
          DateTimeFieldUpdateOperationsInput value) =
      SaySomethingUpdateManyMutationInput_updatedAt_withDateTimeFieldUpdateOperationsInput;

  factory SaySomethingUpdateManyMutationInput_updatedAt.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUpdateManyMutationInput_updatedAtFromJson(json);
}

@freezed
class SaySomethingUpdateManyMutationInput_text
    with _$SaySomethingUpdateManyMutationInput_text
    implements _i1.JsonSerializable {
  const factory SaySomethingUpdateManyMutationInput_text.withString(
      String value) = SaySomethingUpdateManyMutationInput_text_withString;

  const factory SaySomethingUpdateManyMutationInput_text.withStringFieldUpdateOperationsInput(
          StringFieldUpdateOperationsInput value) =
      SaySomethingUpdateManyMutationInput_text_withStringFieldUpdateOperationsInput;

  factory SaySomethingUpdateManyMutationInput_text.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUpdateManyMutationInput_textFromJson(json);
}

@freezed
class SaySomethingUpdateManyMutationInput
    with _$SaySomethingUpdateManyMutationInput
    implements _i1.JsonSerializable {
  factory SaySomethingUpdateManyMutationInput.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUpdateManyMutationInputFromJson(json);

  const factory SaySomethingUpdateManyMutationInput({
    @JsonKey(name: 'createdAt')
        SaySomethingUpdateManyMutationInput_createdAt? createdAt,
    @JsonKey(name: 'updatedAt')
        SaySomethingUpdateManyMutationInput_updatedAt? updatedAt,
    @JsonKey(name: 'text') SaySomethingUpdateManyMutationInput_text? text,
  }) = _SaySomethingUpdateManyMutationInput;
}

@freezed
class SaySomethingUncheckedUpdateManyInput_id
    with _$SaySomethingUncheckedUpdateManyInput_id
    implements _i1.JsonSerializable {
  const factory SaySomethingUncheckedUpdateManyInput_id.withInt(int value) =
      SaySomethingUncheckedUpdateManyInput_id_withInt;

  const factory SaySomethingUncheckedUpdateManyInput_id.withIntFieldUpdateOperationsInput(
          IntFieldUpdateOperationsInput value) =
      SaySomethingUncheckedUpdateManyInput_id_withIntFieldUpdateOperationsInput;

  factory SaySomethingUncheckedUpdateManyInput_id.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUncheckedUpdateManyInput_idFromJson(json);
}

@freezed
class SaySomethingUncheckedUpdateManyInput_createdAt
    with _$SaySomethingUncheckedUpdateManyInput_createdAt
    implements _i1.JsonSerializable {
  const factory SaySomethingUncheckedUpdateManyInput_createdAt.withDateTime(
          DateTime value) =
      SaySomethingUncheckedUpdateManyInput_createdAt_withDateTime;

  const factory SaySomethingUncheckedUpdateManyInput_createdAt.withDateTimeFieldUpdateOperationsInput(
          DateTimeFieldUpdateOperationsInput value) =
      SaySomethingUncheckedUpdateManyInput_createdAt_withDateTimeFieldUpdateOperationsInput;

  factory SaySomethingUncheckedUpdateManyInput_createdAt.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUncheckedUpdateManyInput_createdAtFromJson(json);
}

@freezed
class SaySomethingUncheckedUpdateManyInput_updatedAt
    with _$SaySomethingUncheckedUpdateManyInput_updatedAt
    implements _i1.JsonSerializable {
  const factory SaySomethingUncheckedUpdateManyInput_updatedAt.withDateTime(
          DateTime value) =
      SaySomethingUncheckedUpdateManyInput_updatedAt_withDateTime;

  const factory SaySomethingUncheckedUpdateManyInput_updatedAt.withDateTimeFieldUpdateOperationsInput(
          DateTimeFieldUpdateOperationsInput value) =
      SaySomethingUncheckedUpdateManyInput_updatedAt_withDateTimeFieldUpdateOperationsInput;

  factory SaySomethingUncheckedUpdateManyInput_updatedAt.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUncheckedUpdateManyInput_updatedAtFromJson(json);
}

@freezed
class SaySomethingUncheckedUpdateManyInput_text
    with _$SaySomethingUncheckedUpdateManyInput_text
    implements _i1.JsonSerializable {
  const factory SaySomethingUncheckedUpdateManyInput_text.withString(
      String value) = SaySomethingUncheckedUpdateManyInput_text_withString;

  const factory SaySomethingUncheckedUpdateManyInput_text.withStringFieldUpdateOperationsInput(
          StringFieldUpdateOperationsInput value) =
      SaySomethingUncheckedUpdateManyInput_text_withStringFieldUpdateOperationsInput;

  factory SaySomethingUncheckedUpdateManyInput_text.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUncheckedUpdateManyInput_textFromJson(json);
}

@freezed
class SaySomethingUncheckedUpdateManyInput
    with _$SaySomethingUncheckedUpdateManyInput
    implements _i1.JsonSerializable {
  factory SaySomethingUncheckedUpdateManyInput.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingUncheckedUpdateManyInputFromJson(json);

  const factory SaySomethingUncheckedUpdateManyInput({
    @JsonKey(name: 'id') SaySomethingUncheckedUpdateManyInput_id? id,
    @JsonKey(name: 'createdAt')
        SaySomethingUncheckedUpdateManyInput_createdAt? createdAt,
    @JsonKey(name: 'updatedAt')
        SaySomethingUncheckedUpdateManyInput_updatedAt? updatedAt,
    @JsonKey(name: 'text') SaySomethingUncheckedUpdateManyInput_text? text,
  }) = _SaySomethingUncheckedUpdateManyInput;
}

@freezed
class IntFilter_not with _$IntFilter_not implements _i1.JsonSerializable {
  const factory IntFilter_not.withInt(int value) = IntFilter_not_withInt;

  const factory IntFilter_not.withNestedIntFilter(NestedIntFilter value) =
      IntFilter_not_withNestedIntFilter;

  factory IntFilter_not.fromJson(Map<String, dynamic> json) =>
      _$IntFilter_notFromJson(json);
}

@freezed
class IntFilter with _$IntFilter implements _i1.JsonSerializable {
  factory IntFilter.fromJson(Map<String, dynamic> json) =>
      _$IntFilterFromJson(json);

  const factory IntFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<int> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<int>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<int>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<int> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<int> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<int> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<int> gte,
    @JsonKey(name: 'not') IntFilter_not? not,
  }) = _IntFilter;
}

@freezed
class DateTimeFilter_not
    with _$DateTimeFilter_not
    implements _i1.JsonSerializable {
  const factory DateTimeFilter_not.withDateTime(DateTime value) =
      DateTimeFilter_not_withDateTime;

  const factory DateTimeFilter_not.withNestedDateTimeFilter(
      NestedDateTimeFilter value) = DateTimeFilter_not_withNestedDateTimeFilter;

  factory DateTimeFilter_not.fromJson(Map<String, dynamic> json) =>
      _$DateTimeFilter_notFromJson(json);
}

@freezed
class DateTimeFilter with _$DateTimeFilter implements _i1.JsonSerializable {
  factory DateTimeFilter.fromJson(Map<String, dynamic> json) =>
      _$DateTimeFilterFromJson(json);

  const factory DateTimeFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<DateTime> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<DateTime>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<DateTime>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<DateTime> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<DateTime> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<DateTime> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<DateTime> gte,
    @JsonKey(name: 'not') DateTimeFilter_not? not,
  }) = _DateTimeFilter;
}

@freezed
class StringFilter_not with _$StringFilter_not implements _i1.JsonSerializable {
  const factory StringFilter_not.withString(String value) =
      StringFilter_not_withString;

  const factory StringFilter_not.withNestedStringFilter(
      NestedStringFilter value) = StringFilter_not_withNestedStringFilter;

  factory StringFilter_not.fromJson(Map<String, dynamic> json) =>
      _$StringFilter_notFromJson(json);
}

@freezed
class StringFilter with _$StringFilter implements _i1.JsonSerializable {
  factory StringFilter.fromJson(Map<String, dynamic> json) =>
      _$StringFilterFromJson(json);

  const factory StringFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<String> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<String>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<String>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<String> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<String> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<String> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<String> gte,
    @JsonKey(name: 'contains') _i1.PrismaNullable<String> contains,
    @JsonKey(name: 'startsWith') _i1.PrismaNullable<String> startsWith,
    @JsonKey(name: 'endsWith') _i1.PrismaNullable<String> endsWith,
    @JsonKey(name: 'not') StringFilter_not? not,
  }) = _StringFilter;
}

@freezed
class SaySomethingCountOrderByAggregateInput
    with _$SaySomethingCountOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory SaySomethingCountOrderByAggregateInput.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingCountOrderByAggregateInputFromJson(json);

  const factory SaySomethingCountOrderByAggregateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'createdAt') _i1.PrismaNullable<SortOrder> createdAt,
    @JsonKey(name: 'updatedAt') _i1.PrismaNullable<SortOrder> updatedAt,
    @JsonKey(name: 'text') _i1.PrismaNullable<SortOrder> text,
  }) = _SaySomethingCountOrderByAggregateInput;
}

@freezed
class SaySomethingAvgOrderByAggregateInput
    with _$SaySomethingAvgOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory SaySomethingAvgOrderByAggregateInput.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingAvgOrderByAggregateInputFromJson(json);

  const factory SaySomethingAvgOrderByAggregateInput(
          {@JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id}) =
      _SaySomethingAvgOrderByAggregateInput;
}

@freezed
class SaySomethingMaxOrderByAggregateInput
    with _$SaySomethingMaxOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory SaySomethingMaxOrderByAggregateInput.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingMaxOrderByAggregateInputFromJson(json);

  const factory SaySomethingMaxOrderByAggregateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'createdAt') _i1.PrismaNullable<SortOrder> createdAt,
    @JsonKey(name: 'updatedAt') _i1.PrismaNullable<SortOrder> updatedAt,
    @JsonKey(name: 'text') _i1.PrismaNullable<SortOrder> text,
  }) = _SaySomethingMaxOrderByAggregateInput;
}

@freezed
class SaySomethingMinOrderByAggregateInput
    with _$SaySomethingMinOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory SaySomethingMinOrderByAggregateInput.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingMinOrderByAggregateInputFromJson(json);

  const factory SaySomethingMinOrderByAggregateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'createdAt') _i1.PrismaNullable<SortOrder> createdAt,
    @JsonKey(name: 'updatedAt') _i1.PrismaNullable<SortOrder> updatedAt,
    @JsonKey(name: 'text') _i1.PrismaNullable<SortOrder> text,
  }) = _SaySomethingMinOrderByAggregateInput;
}

@freezed
class SaySomethingSumOrderByAggregateInput
    with _$SaySomethingSumOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory SaySomethingSumOrderByAggregateInput.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingSumOrderByAggregateInputFromJson(json);

  const factory SaySomethingSumOrderByAggregateInput(
          {@JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id}) =
      _SaySomethingSumOrderByAggregateInput;
}

@freezed
class IntWithAggregatesFilter_not
    with _$IntWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory IntWithAggregatesFilter_not.withInt(int value) =
      IntWithAggregatesFilter_not_withInt;

  const factory IntWithAggregatesFilter_not.withNestedIntWithAggregatesFilter(
          NestedIntWithAggregatesFilter value) =
      IntWithAggregatesFilter_not_withNestedIntWithAggregatesFilter;

  factory IntWithAggregatesFilter_not.fromJson(Map<String, dynamic> json) =>
      _$IntWithAggregatesFilter_notFromJson(json);
}

@freezed
class IntWithAggregatesFilter
    with _$IntWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory IntWithAggregatesFilter.fromJson(Map<String, dynamic> json) =>
      _$IntWithAggregatesFilterFromJson(json);

  const factory IntWithAggregatesFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<int> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<int>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<int>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<int> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<int> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<int> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<int> gte,
    @JsonKey(name: 'not') IntWithAggregatesFilter_not? not,
    @JsonKey(name: '_count') _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_avg') _i1.PrismaNullable<NestedFloatFilter> prisma__avg,
    @JsonKey(name: '_sum') _i1.PrismaNullable<NestedIntFilter> prisma__sum,
    @JsonKey(name: '_min') _i1.PrismaNullable<NestedIntFilter> prisma__min,
    @JsonKey(name: '_max') _i1.PrismaNullable<NestedIntFilter> prisma__max,
  }) = _IntWithAggregatesFilter;
}

@freezed
class DateTimeWithAggregatesFilter_not
    with _$DateTimeWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory DateTimeWithAggregatesFilter_not.withDateTime(DateTime value) =
      DateTimeWithAggregatesFilter_not_withDateTime;

  const factory DateTimeWithAggregatesFilter_not.withNestedDateTimeWithAggregatesFilter(
          NestedDateTimeWithAggregatesFilter value) =
      DateTimeWithAggregatesFilter_not_withNestedDateTimeWithAggregatesFilter;

  factory DateTimeWithAggregatesFilter_not.fromJson(
          Map<String, dynamic> json) =>
      _$DateTimeWithAggregatesFilter_notFromJson(json);
}

@freezed
class DateTimeWithAggregatesFilter
    with _$DateTimeWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory DateTimeWithAggregatesFilter.fromJson(Map<String, dynamic> json) =>
      _$DateTimeWithAggregatesFilterFromJson(json);

  const factory DateTimeWithAggregatesFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<DateTime> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<DateTime>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<DateTime>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<DateTime> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<DateTime> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<DateTime> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<DateTime> gte,
    @JsonKey(name: 'not') DateTimeWithAggregatesFilter_not? not,
    @JsonKey(name: '_count') _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_min') _i1.PrismaNullable<NestedDateTimeFilter> prisma__min,
    @JsonKey(name: '_max') _i1.PrismaNullable<NestedDateTimeFilter> prisma__max,
  }) = _DateTimeWithAggregatesFilter;
}

@freezed
class StringWithAggregatesFilter_not
    with _$StringWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory StringWithAggregatesFilter_not.withString(String value) =
      StringWithAggregatesFilter_not_withString;

  const factory StringWithAggregatesFilter_not.withNestedStringWithAggregatesFilter(
          NestedStringWithAggregatesFilter value) =
      StringWithAggregatesFilter_not_withNestedStringWithAggregatesFilter;

  factory StringWithAggregatesFilter_not.fromJson(Map<String, dynamic> json) =>
      _$StringWithAggregatesFilter_notFromJson(json);
}

@freezed
class StringWithAggregatesFilter
    with _$StringWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory StringWithAggregatesFilter.fromJson(Map<String, dynamic> json) =>
      _$StringWithAggregatesFilterFromJson(json);

  const factory StringWithAggregatesFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<String> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<String>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<String>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<String> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<String> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<String> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<String> gte,
    @JsonKey(name: 'contains') _i1.PrismaNullable<String> contains,
    @JsonKey(name: 'startsWith') _i1.PrismaNullable<String> startsWith,
    @JsonKey(name: 'endsWith') _i1.PrismaNullable<String> endsWith,
    @JsonKey(name: 'not') StringWithAggregatesFilter_not? not,
    @JsonKey(name: '_count') _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_min') _i1.PrismaNullable<NestedStringFilter> prisma__min,
    @JsonKey(name: '_max') _i1.PrismaNullable<NestedStringFilter> prisma__max,
  }) = _StringWithAggregatesFilter;
}

@freezed
class DateTimeFieldUpdateOperationsInput
    with _$DateTimeFieldUpdateOperationsInput
    implements _i1.JsonSerializable {
  factory DateTimeFieldUpdateOperationsInput.fromJson(
          Map<String, dynamic> json) =>
      _$DateTimeFieldUpdateOperationsInputFromJson(json);

  const factory DateTimeFieldUpdateOperationsInput(
          {@JsonKey(name: 'set') _i1.PrismaNullable<DateTime> dart__set}) =
      _DateTimeFieldUpdateOperationsInput;
}

@freezed
class StringFieldUpdateOperationsInput
    with _$StringFieldUpdateOperationsInput
    implements _i1.JsonSerializable {
  factory StringFieldUpdateOperationsInput.fromJson(
          Map<String, dynamic> json) =>
      _$StringFieldUpdateOperationsInputFromJson(json);

  const factory StringFieldUpdateOperationsInput(
          {@JsonKey(name: 'set') _i1.PrismaNullable<String> dart__set}) =
      _StringFieldUpdateOperationsInput;
}

@freezed
class IntFieldUpdateOperationsInput
    with _$IntFieldUpdateOperationsInput
    implements _i1.JsonSerializable {
  factory IntFieldUpdateOperationsInput.fromJson(Map<String, dynamic> json) =>
      _$IntFieldUpdateOperationsInputFromJson(json);

  const factory IntFieldUpdateOperationsInput({
    @JsonKey(name: 'set') _i1.PrismaNullable<int> dart__set,
    @JsonKey(name: 'increment') _i1.PrismaNullable<int> increment,
    @JsonKey(name: 'decrement') _i1.PrismaNullable<int> decrement,
    @JsonKey(name: 'multiply') _i1.PrismaNullable<int> multiply,
    @JsonKey(name: 'divide') _i1.PrismaNullable<int> divide,
  }) = _IntFieldUpdateOperationsInput;
}

@freezed
class NestedIntFilter_not
    with _$NestedIntFilter_not
    implements _i1.JsonSerializable {
  const factory NestedIntFilter_not.withInt(int value) =
      NestedIntFilter_not_withInt;

  const factory NestedIntFilter_not.withNestedIntFilter(NestedIntFilter value) =
      NestedIntFilter_not_withNestedIntFilter;

  factory NestedIntFilter_not.fromJson(Map<String, dynamic> json) =>
      _$NestedIntFilter_notFromJson(json);
}

@freezed
class NestedIntFilter with _$NestedIntFilter implements _i1.JsonSerializable {
  factory NestedIntFilter.fromJson(Map<String, dynamic> json) =>
      _$NestedIntFilterFromJson(json);

  const factory NestedIntFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<int> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<int>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<int>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<int> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<int> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<int> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<int> gte,
    @JsonKey(name: 'not') NestedIntFilter_not? not,
  }) = _NestedIntFilter;
}

@freezed
class NestedDateTimeFilter_not
    with _$NestedDateTimeFilter_not
    implements _i1.JsonSerializable {
  const factory NestedDateTimeFilter_not.withDateTime(DateTime value) =
      NestedDateTimeFilter_not_withDateTime;

  const factory NestedDateTimeFilter_not.withNestedDateTimeFilter(
          NestedDateTimeFilter value) =
      NestedDateTimeFilter_not_withNestedDateTimeFilter;

  factory NestedDateTimeFilter_not.fromJson(Map<String, dynamic> json) =>
      _$NestedDateTimeFilter_notFromJson(json);
}

@freezed
class NestedDateTimeFilter
    with _$NestedDateTimeFilter
    implements _i1.JsonSerializable {
  factory NestedDateTimeFilter.fromJson(Map<String, dynamic> json) =>
      _$NestedDateTimeFilterFromJson(json);

  const factory NestedDateTimeFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<DateTime> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<DateTime>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<DateTime>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<DateTime> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<DateTime> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<DateTime> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<DateTime> gte,
    @JsonKey(name: 'not') NestedDateTimeFilter_not? not,
  }) = _NestedDateTimeFilter;
}

@freezed
class NestedStringFilter_not
    with _$NestedStringFilter_not
    implements _i1.JsonSerializable {
  const factory NestedStringFilter_not.withString(String value) =
      NestedStringFilter_not_withString;

  const factory NestedStringFilter_not.withNestedStringFilter(
      NestedStringFilter value) = NestedStringFilter_not_withNestedStringFilter;

  factory NestedStringFilter_not.fromJson(Map<String, dynamic> json) =>
      _$NestedStringFilter_notFromJson(json);
}

@freezed
class NestedStringFilter
    with _$NestedStringFilter
    implements _i1.JsonSerializable {
  factory NestedStringFilter.fromJson(Map<String, dynamic> json) =>
      _$NestedStringFilterFromJson(json);

  const factory NestedStringFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<String> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<String>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<String>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<String> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<String> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<String> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<String> gte,
    @JsonKey(name: 'contains') _i1.PrismaNullable<String> contains,
    @JsonKey(name: 'startsWith') _i1.PrismaNullable<String> startsWith,
    @JsonKey(name: 'endsWith') _i1.PrismaNullable<String> endsWith,
    @JsonKey(name: 'not') NestedStringFilter_not? not,
  }) = _NestedStringFilter;
}

@freezed
class NestedIntWithAggregatesFilter_not
    with _$NestedIntWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory NestedIntWithAggregatesFilter_not.withInt(int value) =
      NestedIntWithAggregatesFilter_not_withInt;

  const factory NestedIntWithAggregatesFilter_not.withNestedIntWithAggregatesFilter(
          NestedIntWithAggregatesFilter value) =
      NestedIntWithAggregatesFilter_not_withNestedIntWithAggregatesFilter;

  factory NestedIntWithAggregatesFilter_not.fromJson(
          Map<String, dynamic> json) =>
      _$NestedIntWithAggregatesFilter_notFromJson(json);
}

@freezed
class NestedIntWithAggregatesFilter
    with _$NestedIntWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory NestedIntWithAggregatesFilter.fromJson(Map<String, dynamic> json) =>
      _$NestedIntWithAggregatesFilterFromJson(json);

  const factory NestedIntWithAggregatesFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<int> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<int>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<int>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<int> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<int> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<int> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<int> gte,
    @JsonKey(name: 'not') NestedIntWithAggregatesFilter_not? not,
    @JsonKey(name: '_count') _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_avg') _i1.PrismaNullable<NestedFloatFilter> prisma__avg,
    @JsonKey(name: '_sum') _i1.PrismaNullable<NestedIntFilter> prisma__sum,
    @JsonKey(name: '_min') _i1.PrismaNullable<NestedIntFilter> prisma__min,
    @JsonKey(name: '_max') _i1.PrismaNullable<NestedIntFilter> prisma__max,
  }) = _NestedIntWithAggregatesFilter;
}

@freezed
class NestedFloatFilter_not
    with _$NestedFloatFilter_not
    implements _i1.JsonSerializable {
  const factory NestedFloatFilter_not.withFloat(double value) =
      NestedFloatFilter_not_withFloat;

  const factory NestedFloatFilter_not.withNestedFloatFilter(
      NestedFloatFilter value) = NestedFloatFilter_not_withNestedFloatFilter;

  factory NestedFloatFilter_not.fromJson(Map<String, dynamic> json) =>
      _$NestedFloatFilter_notFromJson(json);
}

@freezed
class NestedFloatFilter
    with _$NestedFloatFilter
    implements _i1.JsonSerializable {
  factory NestedFloatFilter.fromJson(Map<String, dynamic> json) =>
      _$NestedFloatFilterFromJson(json);

  const factory NestedFloatFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<double> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<double>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<double>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<double> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<double> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<double> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<double> gte,
    @JsonKey(name: 'not') NestedFloatFilter_not? not,
  }) = _NestedFloatFilter;
}

@freezed
class NestedDateTimeWithAggregatesFilter_not
    with _$NestedDateTimeWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory NestedDateTimeWithAggregatesFilter_not.withDateTime(
      DateTime value) = NestedDateTimeWithAggregatesFilter_not_withDateTime;

  const factory NestedDateTimeWithAggregatesFilter_not.withNestedDateTimeWithAggregatesFilter(
          NestedDateTimeWithAggregatesFilter value) =
      NestedDateTimeWithAggregatesFilter_not_withNestedDateTimeWithAggregatesFilter;

  factory NestedDateTimeWithAggregatesFilter_not.fromJson(
          Map<String, dynamic> json) =>
      _$NestedDateTimeWithAggregatesFilter_notFromJson(json);
}

@freezed
class NestedDateTimeWithAggregatesFilter
    with _$NestedDateTimeWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory NestedDateTimeWithAggregatesFilter.fromJson(
          Map<String, dynamic> json) =>
      _$NestedDateTimeWithAggregatesFilterFromJson(json);

  const factory NestedDateTimeWithAggregatesFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<DateTime> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<DateTime>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<DateTime>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<DateTime> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<DateTime> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<DateTime> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<DateTime> gte,
    @JsonKey(name: 'not') NestedDateTimeWithAggregatesFilter_not? not,
    @JsonKey(name: '_count') _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_min') _i1.PrismaNullable<NestedDateTimeFilter> prisma__min,
    @JsonKey(name: '_max') _i1.PrismaNullable<NestedDateTimeFilter> prisma__max,
  }) = _NestedDateTimeWithAggregatesFilter;
}

@freezed
class NestedStringWithAggregatesFilter_not
    with _$NestedStringWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory NestedStringWithAggregatesFilter_not.withString(String value) =
      NestedStringWithAggregatesFilter_not_withString;

  const factory NestedStringWithAggregatesFilter_not.withNestedStringWithAggregatesFilter(
          NestedStringWithAggregatesFilter value) =
      NestedStringWithAggregatesFilter_not_withNestedStringWithAggregatesFilter;

  factory NestedStringWithAggregatesFilter_not.fromJson(
          Map<String, dynamic> json) =>
      _$NestedStringWithAggregatesFilter_notFromJson(json);
}

@freezed
class NestedStringWithAggregatesFilter
    with _$NestedStringWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory NestedStringWithAggregatesFilter.fromJson(
          Map<String, dynamic> json) =>
      _$NestedStringWithAggregatesFilterFromJson(json);

  const factory NestedStringWithAggregatesFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<String> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<String>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<String>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<String> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<String> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<String> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<String> gte,
    @JsonKey(name: 'contains') _i1.PrismaNullable<String> contains,
    @JsonKey(name: 'startsWith') _i1.PrismaNullable<String> startsWith,
    @JsonKey(name: 'endsWith') _i1.PrismaNullable<String> endsWith,
    @JsonKey(name: 'not') NestedStringWithAggregatesFilter_not? not,
    @JsonKey(name: '_count') _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_min') _i1.PrismaNullable<NestedStringFilter> prisma__min,
    @JsonKey(name: '_max') _i1.PrismaNullable<NestedStringFilter> prisma__max,
  }) = _NestedStringWithAggregatesFilter;
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateSaySomething implements _i1.JsonSerializable {
  const AggregateSaySomething({
    this.prisma__count,
    this.prisma__avg,
    this.prisma__sum,
    this.prisma__min,
    this.prisma__max,
  });

  factory AggregateSaySomething.fromJson(Map<String, dynamic> json) =>
      _$AggregateSaySomethingFromJson(json);

  @JsonKey(name: '_count')
  final _i1.PrismaNullable<SaySomethingCountAggregateOutputType> prisma__count;

  @JsonKey(name: '_avg')
  final _i1.PrismaNullable<SaySomethingAvgAggregateOutputType> prisma__avg;

  @JsonKey(name: '_sum')
  final _i1.PrismaNullable<SaySomethingSumAggregateOutputType> prisma__sum;

  @JsonKey(name: '_min')
  final _i1.PrismaNullable<SaySomethingMinAggregateOutputType> prisma__min;

  @JsonKey(name: '_max')
  final _i1.PrismaNullable<SaySomethingMaxAggregateOutputType> prisma__max;

  @override
  Map<String, dynamic> toJson() => _$AggregateSaySomethingToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class SaySomethingGroupByOutputType implements _i1.JsonSerializable {
  const SaySomethingGroupByOutputType({
    required this.id,
    required this.createdAt,
    required this.updatedAt,
    required this.text,
    this.prisma__count,
    this.prisma__avg,
    this.prisma__sum,
    this.prisma__min,
    this.prisma__max,
  });

  factory SaySomethingGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$SaySomethingGroupByOutputTypeFromJson(json);

  final int id;

  final DateTime createdAt;

  final DateTime updatedAt;

  final String text;

  @JsonKey(name: '_count')
  final _i1.PrismaNullable<SaySomethingCountAggregateOutputType> prisma__count;

  @JsonKey(name: '_avg')
  final _i1.PrismaNullable<SaySomethingAvgAggregateOutputType> prisma__avg;

  @JsonKey(name: '_sum')
  final _i1.PrismaNullable<SaySomethingSumAggregateOutputType> prisma__sum;

  @JsonKey(name: '_min')
  final _i1.PrismaNullable<SaySomethingMinAggregateOutputType> prisma__min;

  @JsonKey(name: '_max')
  final _i1.PrismaNullable<SaySomethingMaxAggregateOutputType> prisma__max;

  @override
  Map<String, dynamic> toJson() => _$SaySomethingGroupByOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AffectedRowsOutput implements _i1.JsonSerializable {
  const AffectedRowsOutput({required this.count});

  factory AffectedRowsOutput.fromJson(Map<String, dynamic> json) =>
      _$AffectedRowsOutputFromJson(json);

  final int count;

  @override
  Map<String, dynamic> toJson() => _$AffectedRowsOutputToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class SaySomethingCountAggregateOutputType implements _i1.JsonSerializable {
  const SaySomethingCountAggregateOutputType({
    required this.id,
    required this.createdAt,
    required this.updatedAt,
    required this.text,
    required this.prisma__all,
  });

  factory SaySomethingCountAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingCountAggregateOutputTypeFromJson(json);

  final int id;

  final int createdAt;

  final int updatedAt;

  final int text;

  @JsonKey(name: '_all')
  final int prisma__all;

  @override
  Map<String, dynamic> toJson() =>
      _$SaySomethingCountAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class SaySomethingAvgAggregateOutputType implements _i1.JsonSerializable {
  const SaySomethingAvgAggregateOutputType({this.id});

  factory SaySomethingAvgAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingAvgAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<double> id;

  @override
  Map<String, dynamic> toJson() =>
      _$SaySomethingAvgAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class SaySomethingSumAggregateOutputType implements _i1.JsonSerializable {
  const SaySomethingSumAggregateOutputType({this.id});

  factory SaySomethingSumAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingSumAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  @override
  Map<String, dynamic> toJson() =>
      _$SaySomethingSumAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class SaySomethingMinAggregateOutputType implements _i1.JsonSerializable {
  const SaySomethingMinAggregateOutputType({
    this.id,
    this.createdAt,
    this.updatedAt,
    this.text,
  });

  factory SaySomethingMinAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingMinAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<DateTime> createdAt;

  final _i1.PrismaNullable<DateTime> updatedAt;

  final _i1.PrismaNullable<String> text;

  @override
  Map<String, dynamic> toJson() =>
      _$SaySomethingMinAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class SaySomethingMaxAggregateOutputType implements _i1.JsonSerializable {
  const SaySomethingMaxAggregateOutputType({
    this.id,
    this.createdAt,
    this.updatedAt,
    this.text,
  });

  factory SaySomethingMaxAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$SaySomethingMaxAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<DateTime> createdAt;

  final _i1.PrismaNullable<DateTime> updatedAt;

  final _i1.PrismaNullable<String> text;

  @override
  Map<String, dynamic> toJson() =>
      _$SaySomethingMaxAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class SaySomething implements _i1.JsonSerializable {
  const SaySomething({
    required this.id,
    required this.createdAt,
    required this.updatedAt,
    required this.text,
  });

  factory SaySomething.fromJson(Map<String, dynamic> json) =>
      _$SaySomethingFromJson(json);

  final int id;

  final DateTime createdAt;

  final DateTime updatedAt;

  final String text;

  @override
  Map<String, dynamic> toJson() => _$SaySomethingToJson(this);
}

@freezed
class FindFirstSaySomethingOrderBy
    with _$FindFirstSaySomethingOrderBy
    implements _i1.JsonSerializable {
  const factory FindFirstSaySomethingOrderBy.withSaySomethingOrderByWithRelationInputList(
          List<SaySomethingOrderByWithRelationInput> value) =
      _FindFirstSaySomethingOrderByWithSaySomethingOrderByWithRelationInputList;

  const factory FindFirstSaySomethingOrderBy.withSaySomethingOrderByWithRelationInput(
          SaySomethingOrderByWithRelationInput value) =
      _FindFirstSaySomethingOrderByWithSaySomethingOrderByWithRelationInput;

  factory FindFirstSaySomethingOrderBy.fromJson(Map<String, dynamic> json) =>
      _$FindFirstSaySomethingOrderByFromJson(json);
}

@freezed
class FindFirstSaySomethingOrThrowOrderBy
    with _$FindFirstSaySomethingOrThrowOrderBy
    implements _i1.JsonSerializable {
  const factory FindFirstSaySomethingOrThrowOrderBy.withSaySomethingOrderByWithRelationInputList(
          List<SaySomethingOrderByWithRelationInput> value) =
      _FindFirstSaySomethingOrThrowOrderByWithSaySomethingOrderByWithRelationInputList;

  const factory FindFirstSaySomethingOrThrowOrderBy.withSaySomethingOrderByWithRelationInput(
          SaySomethingOrderByWithRelationInput value) =
      _FindFirstSaySomethingOrThrowOrderByWithSaySomethingOrderByWithRelationInput;

  factory FindFirstSaySomethingOrThrowOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$FindFirstSaySomethingOrThrowOrderByFromJson(json);
}

@freezed
class FindManySaySomethingOrderBy
    with _$FindManySaySomethingOrderBy
    implements _i1.JsonSerializable {
  const factory FindManySaySomethingOrderBy.withSaySomethingOrderByWithRelationInputList(
          List<SaySomethingOrderByWithRelationInput> value) =
      _FindManySaySomethingOrderByWithSaySomethingOrderByWithRelationInputList;

  const factory FindManySaySomethingOrderBy.withSaySomethingOrderByWithRelationInput(
          SaySomethingOrderByWithRelationInput value) =
      _FindManySaySomethingOrderByWithSaySomethingOrderByWithRelationInput;

  factory FindManySaySomethingOrderBy.fromJson(Map<String, dynamic> json) =>
      _$FindManySaySomethingOrderByFromJson(json);
}

@freezed
class CreateOneSaySomethingData
    with _$CreateOneSaySomethingData
    implements _i1.JsonSerializable {
  const factory CreateOneSaySomethingData.withSaySomethingCreateInput(
          SaySomethingCreateInput value) =
      _CreateOneSaySomethingDataWithSaySomethingCreateInput;

  const factory CreateOneSaySomethingData.withSaySomethingUncheckedCreateInput(
          SaySomethingUncheckedCreateInput value) =
      _CreateOneSaySomethingDataWithSaySomethingUncheckedCreateInput;

  factory CreateOneSaySomethingData.fromJson(Map<String, dynamic> json) =>
      _$CreateOneSaySomethingDataFromJson(json);
}

@freezed
class UpdateOneSaySomethingData
    with _$UpdateOneSaySomethingData
    implements _i1.JsonSerializable {
  const factory UpdateOneSaySomethingData.withSaySomethingUpdateInput(
          SaySomethingUpdateInput value) =
      _UpdateOneSaySomethingDataWithSaySomethingUpdateInput;

  const factory UpdateOneSaySomethingData.withSaySomethingUncheckedUpdateInput(
          SaySomethingUncheckedUpdateInput value) =
      _UpdateOneSaySomethingDataWithSaySomethingUncheckedUpdateInput;

  factory UpdateOneSaySomethingData.fromJson(Map<String, dynamic> json) =>
      _$UpdateOneSaySomethingDataFromJson(json);
}

@freezed
class UpdateManySaySomethingData
    with _$UpdateManySaySomethingData
    implements _i1.JsonSerializable {
  const factory UpdateManySaySomethingData.withSaySomethingUpdateManyMutationInput(
          SaySomethingUpdateManyMutationInput value) =
      _UpdateManySaySomethingDataWithSaySomethingUpdateManyMutationInput;

  const factory UpdateManySaySomethingData.withSaySomethingUncheckedUpdateManyInput(
          SaySomethingUncheckedUpdateManyInput value) =
      _UpdateManySaySomethingDataWithSaySomethingUncheckedUpdateManyInput;

  factory UpdateManySaySomethingData.fromJson(Map<String, dynamic> json) =>
      _$UpdateManySaySomethingDataFromJson(json);
}

@freezed
class UpsertOneSaySomethingCreate
    with _$UpsertOneSaySomethingCreate
    implements _i1.JsonSerializable {
  const factory UpsertOneSaySomethingCreate.withSaySomethingCreateInput(
          SaySomethingCreateInput value) =
      _UpsertOneSaySomethingCreateWithSaySomethingCreateInput;

  const factory UpsertOneSaySomethingCreate.withSaySomethingUncheckedCreateInput(
          SaySomethingUncheckedCreateInput value) =
      _UpsertOneSaySomethingCreateWithSaySomethingUncheckedCreateInput;

  factory UpsertOneSaySomethingCreate.fromJson(Map<String, dynamic> json) =>
      _$UpsertOneSaySomethingCreateFromJson(json);
}

@freezed
class UpsertOneSaySomethingUpdate
    with _$UpsertOneSaySomethingUpdate
    implements _i1.JsonSerializable {
  const factory UpsertOneSaySomethingUpdate.withSaySomethingUpdateInput(
          SaySomethingUpdateInput value) =
      _UpsertOneSaySomethingUpdateWithSaySomethingUpdateInput;

  const factory UpsertOneSaySomethingUpdate.withSaySomethingUncheckedUpdateInput(
          SaySomethingUncheckedUpdateInput value) =
      _UpsertOneSaySomethingUpdateWithSaySomethingUncheckedUpdateInput;

  factory UpsertOneSaySomethingUpdate.fromJson(Map<String, dynamic> json) =>
      _$UpsertOneSaySomethingUpdateFromJson(json);
}

@freezed
class AggregateSaySomethingOrderBy
    with _$AggregateSaySomethingOrderBy
    implements _i1.JsonSerializable {
  const factory AggregateSaySomethingOrderBy.withSaySomethingOrderByWithRelationInputList(
          List<SaySomethingOrderByWithRelationInput> value) =
      _AggregateSaySomethingOrderByWithSaySomethingOrderByWithRelationInputList;

  const factory AggregateSaySomethingOrderBy.withSaySomethingOrderByWithRelationInput(
          SaySomethingOrderByWithRelationInput value) =
      _AggregateSaySomethingOrderByWithSaySomethingOrderByWithRelationInput;

  factory AggregateSaySomethingOrderBy.fromJson(Map<String, dynamic> json) =>
      _$AggregateSaySomethingOrderByFromJson(json);
}

@freezed
class GroupBySaySomethingOrderBy
    with _$GroupBySaySomethingOrderBy
    implements _i1.JsonSerializable {
  const factory GroupBySaySomethingOrderBy.withSaySomethingOrderByWithAggregationInputList(
          List<SaySomethingOrderByWithAggregationInput> value) =
      _GroupBySaySomethingOrderByWithSaySomethingOrderByWithAggregationInputList;

  const factory GroupBySaySomethingOrderBy.withSaySomethingOrderByWithAggregationInput(
          SaySomethingOrderByWithAggregationInput value) =
      _GroupBySaySomethingOrderByWithSaySomethingOrderByWithAggregationInput;

  factory GroupBySaySomethingOrderBy.fromJson(Map<String, dynamic> json) =>
      _$GroupBySaySomethingOrderByFromJson(json);
}

@freezed
class GroupBySaySomethingBy
    with _$GroupBySaySomethingBy
    implements _i1.JsonSerializable {
  const factory GroupBySaySomethingBy.withSaySomethingScalarFieldEnumList(
          List<SaySomethingScalarFieldEnum> value) =
      _GroupBySaySomethingByWithSaySomethingScalarFieldEnumList;

  const factory GroupBySaySomethingBy.withSaySomethingScalarFieldEnum(
          SaySomethingScalarFieldEnum value) =
      _GroupBySaySomethingByWithSaySomethingScalarFieldEnum;

  factory GroupBySaySomethingBy.fromJson(Map<String, dynamic> json) =>
      _$GroupBySaySomethingByFromJson(json);
}

class SaySomethingDelegate {
  const SaySomethingDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<SaySomething>> findUnique(
      {required SaySomethingWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueSaySomething',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(SaySomethingScalarFieldEnum.values
              .map((SaySomethingScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniqueSaySomething'] == null
        ? null
        : SaySomething.fromJson(
            (result.data['findUniqueSaySomething'] as Map).cast());
  }

  Future<SaySomething> findUniqueOrThrow(
      {required SaySomethingWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueSaySomethingOrThrow',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(SaySomethingScalarFieldEnum.values
              .map((SaySomethingScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return SaySomething.fromJson(
        (result.data['findUniqueSaySomethingOrThrow'] as Map).cast());
  }

  Future<_i1.PrismaNullable<SaySomething>> findFirst({
    _i1.PrismaNullable<SaySomethingWhereInput> where,
    FindFirstSaySomethingOrderBy? orderBy,
    _i1.PrismaNullable<SaySomethingWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<SaySomethingScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstSaySomething',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(SaySomethingScalarFieldEnum.values
              .map((SaySomethingScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstSaySomething'] == null
        ? null
        : SaySomething.fromJson(
            (result.data['findFirstSaySomething'] as Map).cast());
  }

  Future<SaySomething> findFirstOrThrow({
    _i1.PrismaNullable<SaySomethingWhereInput> where,
    FindFirstSaySomethingOrThrowOrderBy? orderBy,
    _i1.PrismaNullable<SaySomethingWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<SaySomethingScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstSaySomethingOrThrow',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(SaySomethingScalarFieldEnum.values
              .map((SaySomethingScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return SaySomething.fromJson(
        (result.data['findFirstSaySomethingOrThrow'] as Map).cast());
  }

  Future<List<SaySomething>> findMany({
    _i1.PrismaNullable<SaySomethingWhereInput> where,
    FindManySaySomethingOrderBy? orderBy,
    _i1.PrismaNullable<SaySomethingWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<SaySomethingScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManySaySomething',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(SaySomethingScalarFieldEnum.values
              .map((SaySomethingScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManySaySomething'] as List)
        .whereType<Map>()
        .map((Map e) => SaySomething.fromJson(e.cast()))
        .toList();
  }

  Future<SaySomething> create({required CreateOneSaySomethingData data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOneSaySomething',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(SaySomethingScalarFieldEnum.values
              .map((SaySomethingScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return SaySomething.fromJson(
        (result.data['createOneSaySomething'] as Map).cast());
  }

  Future<_i1.PrismaNullable<SaySomething>> update({
    required UpdateOneSaySomethingData data,
    required SaySomethingWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOneSaySomething',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(SaySomethingScalarFieldEnum.values
              .map((SaySomethingScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOneSaySomething'] == null
        ? null
        : SaySomething.fromJson(
            (result.data['updateOneSaySomething'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required UpdateManySaySomethingData data,
    _i1.PrismaNullable<SaySomethingWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManySaySomething',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(SaySomethingScalarFieldEnum.values
              .map((SaySomethingScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManySaySomething'] as Map).cast());
  }

  Future<SaySomething> upsert({
    required SaySomethingWhereUniqueInput where,
    required UpsertOneSaySomethingCreate create,
    required UpsertOneSaySomethingUpdate update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOneSaySomething',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(SaySomethingScalarFieldEnum.values
              .map((SaySomethingScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return SaySomething.fromJson(
        (result.data['upsertOneSaySomething'] as Map).cast());
  }

  Future<_i1.PrismaNullable<SaySomething>> delete(
      {required SaySomethingWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOneSaySomething',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(SaySomethingScalarFieldEnum.values
              .map((SaySomethingScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOneSaySomething'] == null
        ? null
        : SaySomething.fromJson(
            (result.data['deleteOneSaySomething'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<SaySomethingWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManySaySomething',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(SaySomethingScalarFieldEnum.values
              .map((SaySomethingScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManySaySomething'] as Map).cast());
  }

  Future<AggregateSaySomething> aggregate({
    _i1.PrismaNullable<SaySomethingWhereInput> where,
    AggregateSaySomethingOrderBy? orderBy,
    _i1.PrismaNullable<SaySomethingWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregateSaySomething',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(SaySomethingScalarFieldEnum.values
              .map((SaySomethingScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateSaySomething.fromJson(
        (result.data['aggregateSaySomething'] as Map).cast());
  }

  Future<List<SaySomethingGroupByOutputType>> groupBy({
    _i1.PrismaNullable<SaySomethingWhereInput> where,
    GroupBySaySomethingOrderBy? orderBy,
    required GroupBySaySomethingBy by,
    _i1.PrismaNullable<SaySomethingScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupBySaySomething',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(SaySomethingScalarFieldEnum.values
              .map((SaySomethingScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupBySaySomething'] as List)
        .whereType<Map>()
        .map((Map e) => SaySomethingGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

final environment = Future<_i2.PrismaEnvironment>(() async =>
    _i2.PrismaEnvironment(includePlatformEnvironment: true)
        .call(_i3.configurePrisma));
final _i4.Document dmmf = _i4.Document.fromJson(<String, dynamic>{
  'datamodel': {
    'models': [
      {
        'name': 'SaySomething',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'createdAt',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'DateTime',
            'default': {
              'name': 'now',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'createdAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'DateTime',
              'default': {
                'name': 'now',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'updatedAt',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'DateTime',
            'isGenerated': false,
            'isUpdatedAt': true,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'updatedAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'DateTime',
              'isGenerated': false,
              'isUpdatedAt': true,
            },
          },
          {
            'name': 'text',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'text',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'SaySomething',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'createdAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'DateTime',
              'default': {
                'name': 'now',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'updatedAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'DateTime',
              'isGenerated': false,
              'isUpdatedAt': true,
            },
            {
              'name': 'text',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      }
    ],
    'enums': [],
    'types': [],
  },
  'schema': {
    'rootQueryType': null,
    'rootMutationType': null,
    'inputObjectTypes': {
      'model': null,
      'prisma': [
        {
          'name': 'SaySomethingWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SaySomethingWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'SaySomethingWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'SaySomethingWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SaySomethingWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'SaySomethingWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'text',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'text',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'text',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SaySomethingCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SaySomethingAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SaySomethingMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SaySomethingMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SaySomethingSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SaySomethingScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'SaySomethingScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'SaySomethingScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SaySomethingScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'SaySomethingScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'text',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'text',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'text',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'text',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'text',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'text',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'text',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'DateTimeFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'text',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'text',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'text',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'DateTimeWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'DateTimeFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'increment',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'decrement',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'multiply',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'divide',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedDateTimeFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedFloatFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedDateTimeWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
    },
    'outputObjectTypes': {
      'model': [
        {
          'name': 'SaySomething',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'text',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        }
      ],
      'prisma': [
        {
          'name': 'Query',
          'fields': [
            {
              'name': 'findFirstSaySomething',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomething',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'SaySomethingOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'SaySomethingOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'SaySomethingScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstSaySomethingOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomething',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'SaySomethingOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'SaySomethingOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'SaySomethingScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManySaySomething',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'SaySomething',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'SaySomethingOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'SaySomethingOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'SaySomethingScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregateSaySomething',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateSaySomething',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'SaySomethingOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'SaySomethingOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupBySaySomething',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'SaySomethingGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'SaySomethingOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'SaySomethingOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'SaySomethingScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'SaySomethingScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueSaySomething',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomething',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueSaySomethingOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomething',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'Mutation',
          'fields': [
            {
              'name': 'createOneSaySomething',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'SaySomething',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'SaySomethingUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOneSaySomething',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'SaySomething',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'SaySomethingUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'SaySomethingUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOneSaySomething',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomething',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOneSaySomething',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomething',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'SaySomethingUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManySaySomething',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'SaySomethingUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManySaySomething',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'SaySomethingWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'executeRaw',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Json',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [
                {
                  'name': 'query',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'String',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'parameters',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Json',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'queryRaw',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Json',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [
                {
                  'name': 'query',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'String',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'parameters',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Json',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateSaySomething',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomethingCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomethingAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomethingSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomethingMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomethingMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'text',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomethingCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomethingAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomethingSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomethingMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'SaySomethingMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AffectedRowsOutput',
          'fields': [
            {
              'name': 'count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'text',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingSumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'text',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'SaySomethingMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'text',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
    },
    'enumTypes': {
      'model': null,
      'prisma': [
        {
          'name': 'SaySomethingScalarFieldEnum',
          'values': [
            'id',
            'createdAt',
            'updatedAt',
            'text',
          ],
        },
        {
          'name': 'SortOrder',
          'values': [
            'asc',
            'desc',
          ],
        },
        {
          'name': 'TransactionIsolationLevel',
          'values': ['Serializable'],
        },
      ],
    },
  },
  'mappings': {
    'modelOperations': [
      {
        'model': 'SaySomething',
        'findUnique': 'findUniqueSaySomething',
        'findUniqueOrThrow': 'findUniqueSaySomethingOrThrow',
        'findFirst': 'findFirstSaySomething',
        'findFirstOrThrow': 'findFirstSaySomethingOrThrow',
        'findMany': 'findManySaySomething',
        'create': 'createOneSaySomething',
        'createMany': null,
        'update': 'updateOneSaySomething',
        'updateMany': 'updateManySaySomething',
        'upsert': 'upsertOneSaySomething',
        'delete': 'deleteOneSaySomething',
        'deleteMany': 'deleteManySaySomething',
        'aggregate': 'aggregateSaySomething',
        'groupBy': 'groupBySaySomething',
        'findRaw': null,
        'aggregateRaw': null,
      }
    ],
    'otherOperations': {
      'read': [],
      'write': [
        'executeRaw',
        'queryRaw',
      ],
    },
  },
});
final String schema = _i5.utf8.decode(_i5.base64.decode(
    r'Ly8gVGhpcyBpcyB5b3VyIFByaXNtYSBzY2hlbWEgZmlsZSwKLy8gbGVhcm4gbW9yZSBhYm91dCBpdCBpbiB0aGUgZG9jczogaHR0cHM6Ly9wcmlzLmx5L2QvcHJpc21hLXNjaGVtYQoKZ2VuZXJhdG9yIGNsaWVudCB7CiAgcHJvdmlkZXIgICAgICAgID0gInByaXNtYS1jbGllbnQtZGFydCIKfQoKZGF0YXNvdXJjZSBkYiB7CiAgcHJvdmlkZXIgPSAic3FsaXRlIgogIHVybCAgICAgID0gZW52KCJEQVRBQkFTRV9VUkwiKQp9Cgptb2RlbCBTYXlTb21ldGhpbmcgewogIGlkICAgICAgICBJbnQgICAgICBAaWQgQGRlZmF1bHQoYXV0b2luY3JlbWVudCgpKQogIGNyZWF0ZWRBdCBEYXRlVGltZSBAZGVmYXVsdChub3coKSkKICB1cGRhdGVkQXQgRGF0ZVRpbWUgQHVwZGF0ZWRBdAogIHRleHQgICAgICBTdHJpbmcKfQo='));
const String _executable =
    r'/Users/seven/workspace/prisma-dart/example/simple/.dart_tool/prisma/query-engine';

class Datasources {
  Datasources({this.db});

  final _i1.PrismaNullable<_i1.Datasource> db;

  Map<String, _i1.Datasource> _toOverwrites() {
    final $overwrites = <String, _i1.PrismaNullable<_i1.Datasource>>{'db': db}
      ..removeWhere((
        _,
        v,
      ) =>
          v == null);
    return $overwrites.cast();
  }
}

extension ModelDelegateOnPrismaClientExtension on _i1.PrismaClient {
  SaySomethingDelegate get saySomething => SaySomethingDelegate._(
        $engine,
        $headers,
      );
}

_i1.PrismaClient createPrismaClient({
  Datasources? datasources,
  Iterable<_i1.PrismaLogDefinition> log = const <_i1.PrismaLogDefinition>[],
}) {
  final _i1.Engine engine = _i1.BinaryEngine(
    datasources: datasources?._toOverwrites() ?? <String, _i1.Datasource>{},
    dmmf: dmmf,
    schema: schema,
    environment: environment,
    logEmitter: _i1.PrismaLogEmitter(log),
    executable: _executable,
  );
  final _i1.PrismaClient client = _i1.PrismaClient.fromEngine(engine);
  return client;
}
