// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: camel_case_types, constant_identifier_names, depend_on_referenced_packages, non_constant_identifier_names

import 'dart:convert' as convert;
import 'package:orm/configure.dart';
import 'package:orm/orm.dart' as runtime;
import 'package:orm/dmmf.dart' as dmmf;
import 'package:json_annotation/json_annotation.dart' as json_annotation;

export 'package:orm/orm.dart'
    show Datasource, PrismaNull, PrismaUnion, TransactionIsolationLevel;

part 'prisma_client.g.dart';

//******************************************************************************
// This file was generated by Prisma ORM
// GitHub: https://github.com/odroe/prisma-dart
//******************************************************************************

enum PostScalarFieldEnum {
  id,
  title,
  authorId,
  content,
  published,
  created_at,
}

enum QueryMode {
  default$,
  insensitive,
}

enum SortOrder {
  asc,
  desc,
}

enum UserScalarFieldEnum {
  id,
  name,
  createdAt,
}

class UserWhereInput implements runtime.JsonSerializable {
  const UserWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.name,
    this.createdAt,
    this.posts,
  });

  final List<UserWhereInput>? AND;
  final List<UserWhereInput>? OR;
  final List<UserWhereInput>? NOT;
  final runtime.PrismaUnion<IntFilter, int>? id;
  final runtime.PrismaUnion<StringFilter, String>? name;
  final runtime.PrismaUnion<DateTimeFilter, DateTime>? createdAt;
  final PostListRelationFilter? posts;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'AND': AND,
        'OR': OR,
        'NOT': NOT,
        'id': id,
        'name': name,
        'createdAt': createdAt,
        'posts': posts
      };
}

class UserOrderByWithRelationInput implements runtime.JsonSerializable {
  const UserOrderByWithRelationInput({
    this.id,
    this.name,
    this.createdAt,
    this.posts,
  });

  final SortOrder? id;
  final SortOrder? name;
  final SortOrder? createdAt;
  final PostOrderByRelationAggregateInput? posts;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'name': name,
        'createdAt': createdAt,
        'posts': posts
      };
}

class UserWhereUniqueInput implements runtime.JsonSerializable {
  const UserWhereUniqueInput({
    this.id,
  });

  final int? id;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'id': id};
}

class UserOrderByWithAggregationInput implements runtime.JsonSerializable {
  const UserOrderByWithAggregationInput({
    this.id,
    this.name,
    this.createdAt,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final SortOrder? id;
  final SortOrder? name;
  final SortOrder? createdAt;
  final UserCountOrderByAggregateInput? $count;
  final UserAvgOrderByAggregateInput? $avg;
  final UserMaxOrderByAggregateInput? $max;
  final UserMinOrderByAggregateInput? $min;
  final UserSumOrderByAggregateInput? $sum;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'name': name,
        'createdAt': createdAt,
        '_count': $count,
        '_avg': $avg,
        '_max': $max,
        '_min': $min,
        '_sum': $sum
      };
}

class UserScalarWhereWithAggregatesInput implements runtime.JsonSerializable {
  const UserScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.name,
    this.createdAt,
  });

  final List<UserScalarWhereWithAggregatesInput>? AND;
  final List<UserScalarWhereWithAggregatesInput>? OR;
  final List<UserScalarWhereWithAggregatesInput>? NOT;
  final runtime.PrismaUnion<IntWithAggregatesFilter, int>? id;
  final runtime.PrismaUnion<StringWithAggregatesFilter, String>? name;
  final runtime.PrismaUnion<DateTimeWithAggregatesFilter, DateTime>? createdAt;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'AND': AND,
        'OR': OR,
        'NOT': NOT,
        'id': id,
        'name': name,
        'createdAt': createdAt
      };
}

class PostWhereInput implements runtime.JsonSerializable {
  const PostWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.title,
    this.authorId,
    this.content,
    this.published,
    this.created_at,
    this.author,
  });

  final List<PostWhereInput>? AND;
  final List<PostWhereInput>? OR;
  final List<PostWhereInput>? NOT;
  final runtime.PrismaUnion<IntFilter, int>? id;
  final runtime.PrismaUnion<StringFilter, String>? title;
  final runtime.PrismaUnion<IntFilter, int>? authorId;
  final runtime.PrismaUnion<StringFilter, String>? content;
  final runtime.PrismaUnion<BoolFilter, bool>? published;
  final runtime.PrismaUnion<DateTimeFilter, DateTime>? created_at;
  final runtime.PrismaUnion<UserRelationFilter, UserWhereInput>? author;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'AND': AND,
        'OR': OR,
        'NOT': NOT,
        'id': id,
        'title': title,
        'authorId': authorId,
        'content': content,
        'published': published,
        'created_at': created_at,
        'author': author
      };
}

class PostOrderByWithRelationInput implements runtime.JsonSerializable {
  const PostOrderByWithRelationInput({
    this.id,
    this.title,
    this.authorId,
    this.content,
    this.published,
    this.created_at,
    this.author,
  });

  final SortOrder? id;
  final SortOrder? title;
  final SortOrder? authorId;
  final SortOrder? content;
  final SortOrder? published;
  final SortOrder? created_at;
  final UserOrderByWithRelationInput? author;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'title': title,
        'authorId': authorId,
        'content': content,
        'published': published,
        'created_at': created_at,
        'author': author
      };
}

class PostWhereUniqueInput implements runtime.JsonSerializable {
  const PostWhereUniqueInput({
    this.id,
  });

  final int? id;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'id': id};
}

class PostOrderByWithAggregationInput implements runtime.JsonSerializable {
  const PostOrderByWithAggregationInput({
    this.id,
    this.title,
    this.authorId,
    this.content,
    this.published,
    this.created_at,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final SortOrder? id;
  final SortOrder? title;
  final SortOrder? authorId;
  final SortOrder? content;
  final SortOrder? published;
  final SortOrder? created_at;
  final PostCountOrderByAggregateInput? $count;
  final PostAvgOrderByAggregateInput? $avg;
  final PostMaxOrderByAggregateInput? $max;
  final PostMinOrderByAggregateInput? $min;
  final PostSumOrderByAggregateInput? $sum;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'title': title,
        'authorId': authorId,
        'content': content,
        'published': published,
        'created_at': created_at,
        '_count': $count,
        '_avg': $avg,
        '_max': $max,
        '_min': $min,
        '_sum': $sum
      };
}

class PostScalarWhereWithAggregatesInput implements runtime.JsonSerializable {
  const PostScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.title,
    this.authorId,
    this.content,
    this.published,
    this.created_at,
  });

  final List<PostScalarWhereWithAggregatesInput>? AND;
  final List<PostScalarWhereWithAggregatesInput>? OR;
  final List<PostScalarWhereWithAggregatesInput>? NOT;
  final runtime.PrismaUnion<IntWithAggregatesFilter, int>? id;
  final runtime.PrismaUnion<StringWithAggregatesFilter, String>? title;
  final runtime.PrismaUnion<IntWithAggregatesFilter, int>? authorId;
  final runtime.PrismaUnion<StringWithAggregatesFilter, String>? content;
  final runtime.PrismaUnion<BoolWithAggregatesFilter, bool>? published;
  final runtime.PrismaUnion<DateTimeWithAggregatesFilter, DateTime>? created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'AND': AND,
        'OR': OR,
        'NOT': NOT,
        'id': id,
        'title': title,
        'authorId': authorId,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

class UserCreateInput implements runtime.JsonSerializable {
  const UserCreateInput({
    required this.name,
    this.createdAt,
    this.posts,
  });

  final String name;
  final DateTime? createdAt;
  final PostCreateNestedManyWithoutAuthorInput? posts;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'name': name, 'createdAt': createdAt, 'posts': posts};
}

class UserUncheckedCreateInput implements runtime.JsonSerializable {
  const UserUncheckedCreateInput({
    this.id,
    required this.name,
    this.createdAt,
    this.posts,
  });

  final int? id;
  final String name;
  final DateTime? createdAt;
  final PostUncheckedCreateNestedManyWithoutAuthorInput? posts;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'name': name,
        'createdAt': createdAt,
        'posts': posts
      };
}

class UserUpdateInput implements runtime.JsonSerializable {
  const UserUpdateInput({
    this.name,
    this.createdAt,
    this.posts,
  });

  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? name;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      createdAt;
  final PostUpdateManyWithoutAuthorNestedInput? posts;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'name': name, 'createdAt': createdAt, 'posts': posts};
}

class UserUncheckedUpdateInput implements runtime.JsonSerializable {
  const UserUncheckedUpdateInput({
    this.id,
    this.name,
    this.createdAt,
    this.posts,
  });

  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? name;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      createdAt;
  final PostUncheckedUpdateManyWithoutAuthorNestedInput? posts;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'name': name,
        'createdAt': createdAt,
        'posts': posts
      };
}

class UserCreateManyInput implements runtime.JsonSerializable {
  const UserCreateManyInput({
    this.id,
    required this.name,
    this.createdAt,
  });

  final int? id;
  final String name;
  final DateTime? createdAt;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'id': id, 'name': name, 'createdAt': createdAt};
}

class UserUpdateManyMutationInput implements runtime.JsonSerializable {
  const UserUpdateManyMutationInput({
    this.name,
    this.createdAt,
  });

  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? name;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      createdAt;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'name': name, 'createdAt': createdAt};
}

class UserUncheckedUpdateManyInput implements runtime.JsonSerializable {
  const UserUncheckedUpdateManyInput({
    this.id,
    this.name,
    this.createdAt,
  });

  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? name;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      createdAt;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'id': id, 'name': name, 'createdAt': createdAt};
}

class PostCreateInput implements runtime.JsonSerializable {
  const PostCreateInput({
    required this.title,
    required this.content,
    required this.published,
    this.created_at,
    required this.author,
  });

  final String title;
  final String content;
  final bool published;
  final DateTime? created_at;
  final UserCreateNestedOneWithoutPostsInput author;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'title': title,
        'content': content,
        'published': published,
        'created_at': created_at,
        'author': author
      };
}

class PostUncheckedCreateInput implements runtime.JsonSerializable {
  const PostUncheckedCreateInput({
    this.id,
    required this.title,
    required this.authorId,
    required this.content,
    required this.published,
    this.created_at,
  });

  final int? id;
  final String title;
  final int authorId;
  final String content;
  final bool published;
  final DateTime? created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'title': title,
        'authorId': authorId,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

class PostUpdateInput implements runtime.JsonSerializable {
  const PostUpdateInput({
    this.title,
    this.content,
    this.published,
    this.created_at,
    this.author,
  });

  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? title;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? content;
  final runtime.PrismaUnion<bool, BoolFieldUpdateOperationsInput>? published;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      created_at;
  final UserUpdateOneRequiredWithoutPostsNestedInput? author;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'title': title,
        'content': content,
        'published': published,
        'created_at': created_at,
        'author': author
      };
}

class PostUncheckedUpdateInput implements runtime.JsonSerializable {
  const PostUncheckedUpdateInput({
    this.id,
    this.title,
    this.authorId,
    this.content,
    this.published,
    this.created_at,
  });

  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? title;
  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? authorId;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? content;
  final runtime.PrismaUnion<bool, BoolFieldUpdateOperationsInput>? published;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'title': title,
        'authorId': authorId,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

class PostCreateManyInput implements runtime.JsonSerializable {
  const PostCreateManyInput({
    this.id,
    required this.title,
    required this.authorId,
    required this.content,
    required this.published,
    this.created_at,
  });

  final int? id;
  final String title;
  final int authorId;
  final String content;
  final bool published;
  final DateTime? created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'title': title,
        'authorId': authorId,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

class PostUpdateManyMutationInput implements runtime.JsonSerializable {
  const PostUpdateManyMutationInput({
    this.title,
    this.content,
    this.published,
    this.created_at,
  });

  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? title;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? content;
  final runtime.PrismaUnion<bool, BoolFieldUpdateOperationsInput>? published;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'title': title,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

class PostUncheckedUpdateManyInput implements runtime.JsonSerializable {
  const PostUncheckedUpdateManyInput({
    this.id,
    this.title,
    this.authorId,
    this.content,
    this.published,
    this.created_at,
  });

  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? title;
  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? authorId;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? content;
  final runtime.PrismaUnion<bool, BoolFieldUpdateOperationsInput>? published;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'title': title,
        'authorId': authorId,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

class IntFilter implements runtime.JsonSerializable {
  const IntFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class StringFilter implements runtime.JsonSerializable {
  const StringFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.mode,
    this.not,
  });

  final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final QueryMode? mode;
  final runtime.PrismaUnion<String, NestedStringFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'mode': mode,
        'not': not
      };
}

class DateTimeFilter implements runtime.JsonSerializable {
  const DateTimeFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class PostListRelationFilter implements runtime.JsonSerializable {
  const PostListRelationFilter({
    this.every,
    this.some,
    this.none,
  });

  final PostWhereInput? every;
  final PostWhereInput? some;
  final PostWhereInput? none;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'every': every, 'some': some, 'none': none};
}

class PostOrderByRelationAggregateInput implements runtime.JsonSerializable {
  const PostOrderByRelationAggregateInput({
    this.$count,
  });

  final SortOrder? $count;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'_count': $count};
}

class UserCountOrderByAggregateInput implements runtime.JsonSerializable {
  const UserCountOrderByAggregateInput({
    this.id,
    this.name,
    this.createdAt,
  });

  final SortOrder? id;
  final SortOrder? name;
  final SortOrder? createdAt;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'id': id, 'name': name, 'createdAt': createdAt};
}

class UserAvgOrderByAggregateInput implements runtime.JsonSerializable {
  const UserAvgOrderByAggregateInput({
    this.id,
  });

  final SortOrder? id;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'id': id};
}

class UserMaxOrderByAggregateInput implements runtime.JsonSerializable {
  const UserMaxOrderByAggregateInput({
    this.id,
    this.name,
    this.createdAt,
  });

  final SortOrder? id;
  final SortOrder? name;
  final SortOrder? createdAt;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'id': id, 'name': name, 'createdAt': createdAt};
}

class UserMinOrderByAggregateInput implements runtime.JsonSerializable {
  const UserMinOrderByAggregateInput({
    this.id,
    this.name,
    this.createdAt,
  });

  final SortOrder? id;
  final SortOrder? name;
  final SortOrder? createdAt;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'id': id, 'name': name, 'createdAt': createdAt};
}

class UserSumOrderByAggregateInput implements runtime.JsonSerializable {
  const UserSumOrderByAggregateInput({
    this.id,
  });

  final SortOrder? id;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'id': id};
}

class IntWithAggregatesFilter implements runtime.JsonSerializable {
  const IntWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedFloatFilter? $avg;
  final NestedIntFilter? $sum;
  final NestedIntFilter? $min;
  final NestedIntFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not,
        '_count': $count,
        '_avg': $avg,
        '_sum': $sum,
        '_min': $min,
        '_max': $max
      };
}

class StringWithAggregatesFilter implements runtime.JsonSerializable {
  const StringWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.mode,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final QueryMode? mode;
  final runtime.PrismaUnion<String, NestedStringWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedStringFilter? $min;
  final NestedStringFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'mode': mode,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

class DateTimeWithAggregatesFilter implements runtime.JsonSerializable {
  const DateTimeWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedDateTimeFilter? $min;
  final NestedDateTimeFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

class BoolFilter implements runtime.JsonSerializable {
  const BoolFilter({
    this.equals,
    this.not,
  });

  final bool? equals;
  final runtime.PrismaUnion<bool, NestedBoolFilter>? not;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'equals': equals, 'not': not};
}

class UserRelationFilter implements runtime.JsonSerializable {
  const UserRelationFilter({
    this.is$,
    this.isNot,
  });

  final UserWhereInput? is$;
  final UserWhereInput? isNot;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'is': is$, 'isNot': isNot};
}

class PostCountOrderByAggregateInput implements runtime.JsonSerializable {
  const PostCountOrderByAggregateInput({
    this.id,
    this.title,
    this.authorId,
    this.content,
    this.published,
    this.created_at,
  });

  final SortOrder? id;
  final SortOrder? title;
  final SortOrder? authorId;
  final SortOrder? content;
  final SortOrder? published;
  final SortOrder? created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'title': title,
        'authorId': authorId,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

class PostAvgOrderByAggregateInput implements runtime.JsonSerializable {
  const PostAvgOrderByAggregateInput({
    this.id,
    this.authorId,
  });

  final SortOrder? id;
  final SortOrder? authorId;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'id': id, 'authorId': authorId};
}

class PostMaxOrderByAggregateInput implements runtime.JsonSerializable {
  const PostMaxOrderByAggregateInput({
    this.id,
    this.title,
    this.authorId,
    this.content,
    this.published,
    this.created_at,
  });

  final SortOrder? id;
  final SortOrder? title;
  final SortOrder? authorId;
  final SortOrder? content;
  final SortOrder? published;
  final SortOrder? created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'title': title,
        'authorId': authorId,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

class PostMinOrderByAggregateInput implements runtime.JsonSerializable {
  const PostMinOrderByAggregateInput({
    this.id,
    this.title,
    this.authorId,
    this.content,
    this.published,
    this.created_at,
  });

  final SortOrder? id;
  final SortOrder? title;
  final SortOrder? authorId;
  final SortOrder? content;
  final SortOrder? published;
  final SortOrder? created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'title': title,
        'authorId': authorId,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

class PostSumOrderByAggregateInput implements runtime.JsonSerializable {
  const PostSumOrderByAggregateInput({
    this.id,
    this.authorId,
  });

  final SortOrder? id;
  final SortOrder? authorId;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'id': id, 'authorId': authorId};
}

class BoolWithAggregatesFilter implements runtime.JsonSerializable {
  const BoolWithAggregatesFilter({
    this.equals,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final bool? equals;
  final runtime.PrismaUnion<bool, NestedBoolWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedBoolFilter? $min;
  final NestedBoolFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

class PostCreateNestedManyWithoutAuthorInput
    implements runtime.JsonSerializable {
  const PostCreateNestedManyWithoutAuthorInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final List<PostCreateWithoutAuthorInput>? create;
  final List<PostCreateOrConnectWithoutAuthorInput>? connectOrCreate;
  final PostCreateManyAuthorInputEnvelope? createMany;
  final List<PostWhereUniqueInput>? connect;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'create': create,
        'connectOrCreate': connectOrCreate,
        'createMany': createMany,
        'connect': connect
      };
}

class PostUncheckedCreateNestedManyWithoutAuthorInput
    implements runtime.JsonSerializable {
  const PostUncheckedCreateNestedManyWithoutAuthorInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final List<PostCreateWithoutAuthorInput>? create;
  final List<PostCreateOrConnectWithoutAuthorInput>? connectOrCreate;
  final PostCreateManyAuthorInputEnvelope? createMany;
  final List<PostWhereUniqueInput>? connect;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'create': create,
        'connectOrCreate': connectOrCreate,
        'createMany': createMany,
        'connect': connect
      };
}

class StringFieldUpdateOperationsInput implements runtime.JsonSerializable {
  const StringFieldUpdateOperationsInput({
    this.set$,
  });

  final String? set$;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'set': set$};
}

class DateTimeFieldUpdateOperationsInput implements runtime.JsonSerializable {
  const DateTimeFieldUpdateOperationsInput({
    this.set$,
  });

  final DateTime? set$;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'set': set$};
}

class PostUpdateManyWithoutAuthorNestedInput
    implements runtime.JsonSerializable {
  const PostUpdateManyWithoutAuthorNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final List<PostCreateWithoutAuthorInput>? create;
  final List<PostCreateOrConnectWithoutAuthorInput>? connectOrCreate;
  final List<PostUpsertWithWhereUniqueWithoutAuthorInput>? upsert;
  final PostCreateManyAuthorInputEnvelope? createMany;
  final List<PostWhereUniqueInput>? set$;
  final List<PostWhereUniqueInput>? disconnect;
  final List<PostWhereUniqueInput>? delete;
  final List<PostWhereUniqueInput>? connect;
  final List<PostUpdateWithWhereUniqueWithoutAuthorInput>? update;
  final List<PostUpdateManyWithWhereWithoutAuthorInput>? updateMany;
  final List<PostScalarWhereInput>? deleteMany;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'create': create,
        'connectOrCreate': connectOrCreate,
        'upsert': upsert,
        'createMany': createMany,
        'set': set$,
        'disconnect': disconnect,
        'delete': delete,
        'connect': connect,
        'update': update,
        'updateMany': updateMany,
        'deleteMany': deleteMany
      };
}

class IntFieldUpdateOperationsInput implements runtime.JsonSerializable {
  const IntFieldUpdateOperationsInput({
    this.set$,
    this.increment,
    this.decrement,
    this.multiply,
    this.divide,
  });

  final int? set$;
  final int? increment;
  final int? decrement;
  final int? multiply;
  final int? divide;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'set': set$,
        'increment': increment,
        'decrement': decrement,
        'multiply': multiply,
        'divide': divide
      };
}

class PostUncheckedUpdateManyWithoutAuthorNestedInput
    implements runtime.JsonSerializable {
  const PostUncheckedUpdateManyWithoutAuthorNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final List<PostCreateWithoutAuthorInput>? create;
  final List<PostCreateOrConnectWithoutAuthorInput>? connectOrCreate;
  final List<PostUpsertWithWhereUniqueWithoutAuthorInput>? upsert;
  final PostCreateManyAuthorInputEnvelope? createMany;
  final List<PostWhereUniqueInput>? set$;
  final List<PostWhereUniqueInput>? disconnect;
  final List<PostWhereUniqueInput>? delete;
  final List<PostWhereUniqueInput>? connect;
  final List<PostUpdateWithWhereUniqueWithoutAuthorInput>? update;
  final List<PostUpdateManyWithWhereWithoutAuthorInput>? updateMany;
  final List<PostScalarWhereInput>? deleteMany;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'create': create,
        'connectOrCreate': connectOrCreate,
        'upsert': upsert,
        'createMany': createMany,
        'set': set$,
        'disconnect': disconnect,
        'delete': delete,
        'connect': connect,
        'update': update,
        'updateMany': updateMany,
        'deleteMany': deleteMany
      };
}

class UserCreateNestedOneWithoutPostsInput implements runtime.JsonSerializable {
  const UserCreateNestedOneWithoutPostsInput({
    this.create,
    this.connectOrCreate,
    this.connect,
  });

  final runtime.PrismaUnion<UserCreateWithoutPostsInput,
      UserUncheckedCreateWithoutPostsInput>? create;
  final UserCreateOrConnectWithoutPostsInput? connectOrCreate;
  final UserWhereUniqueInput? connect;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'create': create,
        'connectOrCreate': connectOrCreate,
        'connect': connect
      };
}

class BoolFieldUpdateOperationsInput implements runtime.JsonSerializable {
  const BoolFieldUpdateOperationsInput({
    this.set$,
  });

  final bool? set$;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'set': set$};
}

class UserUpdateOneRequiredWithoutPostsNestedInput
    implements runtime.JsonSerializable {
  const UserUpdateOneRequiredWithoutPostsNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.connect,
    this.update,
  });

  final runtime.PrismaUnion<UserCreateWithoutPostsInput,
      UserUncheckedCreateWithoutPostsInput>? create;
  final UserCreateOrConnectWithoutPostsInput? connectOrCreate;
  final UserUpsertWithoutPostsInput? upsert;
  final UserWhereUniqueInput? connect;
  final runtime.PrismaUnion<UserUpdateWithoutPostsInput,
      UserUncheckedUpdateWithoutPostsInput>? update;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'create': create,
        'connectOrCreate': connectOrCreate,
        'upsert': upsert,
        'connect': connect,
        'update': update
      };
}

class NestedIntFilter implements runtime.JsonSerializable {
  const NestedIntFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class NestedStringFilter implements runtime.JsonSerializable {
  const NestedStringFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final runtime.PrismaUnion<String, NestedStringFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'not': not
      };
}

class NestedDateTimeFilter implements runtime.JsonSerializable {
  const NestedDateTimeFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class NestedIntWithAggregatesFilter implements runtime.JsonSerializable {
  const NestedIntWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedFloatFilter? $avg;
  final NestedIntFilter? $sum;
  final NestedIntFilter? $min;
  final NestedIntFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not,
        '_count': $count,
        '_avg': $avg,
        '_sum': $sum,
        '_min': $min,
        '_max': $max
      };
}

class NestedFloatFilter implements runtime.JsonSerializable {
  const NestedFloatFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final double? equals;
  final List<double>? in$;
  final List<double>? notIn;
  final double? lt;
  final double? lte;
  final double? gt;
  final double? gte;
  final runtime.PrismaUnion<double, NestedFloatFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class NestedStringWithAggregatesFilter implements runtime.JsonSerializable {
  const NestedStringWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final runtime.PrismaUnion<String, NestedStringWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedStringFilter? $min;
  final NestedStringFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

class NestedDateTimeWithAggregatesFilter implements runtime.JsonSerializable {
  const NestedDateTimeWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedDateTimeFilter? $min;
  final NestedDateTimeFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

class NestedBoolFilter implements runtime.JsonSerializable {
  const NestedBoolFilter({
    this.equals,
    this.not,
  });

  final bool? equals;
  final runtime.PrismaUnion<bool, NestedBoolFilter>? not;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'equals': equals, 'not': not};
}

class NestedBoolWithAggregatesFilter implements runtime.JsonSerializable {
  const NestedBoolWithAggregatesFilter({
    this.equals,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final bool? equals;
  final runtime.PrismaUnion<bool, NestedBoolWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedBoolFilter? $min;
  final NestedBoolFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

class PostCreateWithoutAuthorInput implements runtime.JsonSerializable {
  const PostCreateWithoutAuthorInput({
    required this.title,
    required this.content,
    required this.published,
    this.created_at,
  });

  final String title;
  final String content;
  final bool published;
  final DateTime? created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'title': title,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

class PostUncheckedCreateWithoutAuthorInput
    implements runtime.JsonSerializable {
  const PostUncheckedCreateWithoutAuthorInput({
    this.id,
    required this.title,
    required this.content,
    required this.published,
    this.created_at,
  });

  final int? id;
  final String title;
  final String content;
  final bool published;
  final DateTime? created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'title': title,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

class PostCreateOrConnectWithoutAuthorInput
    implements runtime.JsonSerializable {
  const PostCreateOrConnectWithoutAuthorInput({
    required this.where,
    required this.create,
  });

  final PostWhereUniqueInput where;
  final runtime.PrismaUnion<PostCreateWithoutAuthorInput,
      PostUncheckedCreateWithoutAuthorInput> create;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'where': where, 'create': create};
}

class PostCreateManyAuthorInputEnvelope implements runtime.JsonSerializable {
  const PostCreateManyAuthorInputEnvelope({
    required this.data,
    this.skipDuplicates,
  });

  final List<PostCreateManyAuthorInput> data;
  final bool? skipDuplicates;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'data': data, 'skipDuplicates': skipDuplicates};
}

class PostUpsertWithWhereUniqueWithoutAuthorInput
    implements runtime.JsonSerializable {
  const PostUpsertWithWhereUniqueWithoutAuthorInput({
    required this.where,
    required this.update,
    required this.create,
  });

  final PostWhereUniqueInput where;
  final runtime.PrismaUnion<PostUpdateWithoutAuthorInput,
      PostUncheckedUpdateWithoutAuthorInput> update;
  final runtime.PrismaUnion<PostCreateWithoutAuthorInput,
      PostUncheckedCreateWithoutAuthorInput> create;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'where': where, 'update': update, 'create': create};
}

class PostUpdateWithWhereUniqueWithoutAuthorInput
    implements runtime.JsonSerializable {
  const PostUpdateWithWhereUniqueWithoutAuthorInput({
    required this.where,
    required this.data,
  });

  final PostWhereUniqueInput where;
  final runtime.PrismaUnion<PostUpdateWithoutAuthorInput,
      PostUncheckedUpdateWithoutAuthorInput> data;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'where': where, 'data': data};
}

class PostUpdateManyWithWhereWithoutAuthorInput
    implements runtime.JsonSerializable {
  const PostUpdateManyWithWhereWithoutAuthorInput({
    required this.where,
    required this.data,
  });

  final PostScalarWhereInput where;
  final runtime.PrismaUnion<PostUpdateManyMutationInput,
      PostUncheckedUpdateManyWithoutPostsInput> data;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'where': where, 'data': data};
}

class PostScalarWhereInput implements runtime.JsonSerializable {
  const PostScalarWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.title,
    this.authorId,
    this.content,
    this.published,
    this.created_at,
  });

  final List<PostScalarWhereInput>? AND;
  final List<PostScalarWhereInput>? OR;
  final List<PostScalarWhereInput>? NOT;
  final runtime.PrismaUnion<IntFilter, int>? id;
  final runtime.PrismaUnion<StringFilter, String>? title;
  final runtime.PrismaUnion<IntFilter, int>? authorId;
  final runtime.PrismaUnion<StringFilter, String>? content;
  final runtime.PrismaUnion<BoolFilter, bool>? published;
  final runtime.PrismaUnion<DateTimeFilter, DateTime>? created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'AND': AND,
        'OR': OR,
        'NOT': NOT,
        'id': id,
        'title': title,
        'authorId': authorId,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

class UserCreateWithoutPostsInput implements runtime.JsonSerializable {
  const UserCreateWithoutPostsInput({
    required this.name,
    this.createdAt,
  });

  final String name;
  final DateTime? createdAt;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'name': name, 'createdAt': createdAt};
}

class UserUncheckedCreateWithoutPostsInput implements runtime.JsonSerializable {
  const UserUncheckedCreateWithoutPostsInput({
    this.id,
    required this.name,
    this.createdAt,
  });

  final int? id;
  final String name;
  final DateTime? createdAt;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'id': id, 'name': name, 'createdAt': createdAt};
}

class UserCreateOrConnectWithoutPostsInput implements runtime.JsonSerializable {
  const UserCreateOrConnectWithoutPostsInput({
    required this.where,
    required this.create,
  });

  final UserWhereUniqueInput where;
  final runtime.PrismaUnion<UserCreateWithoutPostsInput,
      UserUncheckedCreateWithoutPostsInput> create;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'where': where, 'create': create};
}

class UserUpsertWithoutPostsInput implements runtime.JsonSerializable {
  const UserUpsertWithoutPostsInput({
    required this.update,
    required this.create,
  });

  final runtime.PrismaUnion<UserUpdateWithoutPostsInput,
      UserUncheckedUpdateWithoutPostsInput> update;
  final runtime.PrismaUnion<UserCreateWithoutPostsInput,
      UserUncheckedCreateWithoutPostsInput> create;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'update': update, 'create': create};
}

class UserUpdateWithoutPostsInput implements runtime.JsonSerializable {
  const UserUpdateWithoutPostsInput({
    this.name,
    this.createdAt,
  });

  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? name;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      createdAt;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'name': name, 'createdAt': createdAt};
}

class UserUncheckedUpdateWithoutPostsInput implements runtime.JsonSerializable {
  const UserUncheckedUpdateWithoutPostsInput({
    this.id,
    this.name,
    this.createdAt,
  });

  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? name;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      createdAt;

  @override
  Map<String, dynamic> toJson() =>
      <String, dynamic>{'id': id, 'name': name, 'createdAt': createdAt};
}

class PostCreateManyAuthorInput implements runtime.JsonSerializable {
  const PostCreateManyAuthorInput({
    this.id,
    required this.title,
    required this.content,
    required this.published,
    this.created_at,
  });

  final int? id;
  final String title;
  final String content;
  final bool published;
  final DateTime? created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'title': title,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

class PostUpdateWithoutAuthorInput implements runtime.JsonSerializable {
  const PostUpdateWithoutAuthorInput({
    this.title,
    this.content,
    this.published,
    this.created_at,
  });

  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? title;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? content;
  final runtime.PrismaUnion<bool, BoolFieldUpdateOperationsInput>? published;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'title': title,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

class PostUncheckedUpdateWithoutAuthorInput
    implements runtime.JsonSerializable {
  const PostUncheckedUpdateWithoutAuthorInput({
    this.id,
    this.title,
    this.content,
    this.published,
    this.created_at,
  });

  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? title;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? content;
  final runtime.PrismaUnion<bool, BoolFieldUpdateOperationsInput>? published;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'title': title,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

class PostUncheckedUpdateManyWithoutPostsInput
    implements runtime.JsonSerializable {
  const PostUncheckedUpdateManyWithoutPostsInput({
    this.id,
    this.title,
    this.content,
    this.published,
    this.created_at,
  });

  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? title;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? content;
  final runtime.PrismaUnion<bool, BoolFieldUpdateOperationsInput>? published;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      created_at;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'title': title,
        'content': content,
        'published': published,
        'created_at': created_at
      };
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class AggregateUser {
  const AggregateUser({
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregateUser.fromJson(Map<String, dynamic> json) =>
      _$AggregateUserFromJson(json);

  @json_annotation.JsonKey(name: '_avg')
  final UserAvgAggregateOutputType? $avg;

  @json_annotation.JsonKey(name: '_sum')
  final UserSumAggregateOutputType? $sum;

  @json_annotation.JsonKey(name: '_min')
  final UserMinAggregateOutputType? $min;

  @json_annotation.JsonKey(name: '_max')
  final UserMaxAggregateOutputType? $max;

  Map<String, dynamic> toJson() => _$AggregateUserToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class UserGroupByOutputType {
  const UserGroupByOutputType({
    required this.id,
    required this.name,
    required this.createdAt,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory UserGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserGroupByOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int id;

  @json_annotation.JsonKey(name: 'name')
  final String name;

  @json_annotation.JsonKey(name: 'createdAt')
  final DateTime createdAt;

  @json_annotation.JsonKey(name: '_avg')
  final UserAvgAggregateOutputType? $avg;

  @json_annotation.JsonKey(name: '_sum')
  final UserSumAggregateOutputType? $sum;

  @json_annotation.JsonKey(name: '_min')
  final UserMinAggregateOutputType? $min;

  @json_annotation.JsonKey(name: '_max')
  final UserMaxAggregateOutputType? $max;

  Map<String, dynamic> toJson() => _$UserGroupByOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class AggregatePost {
  const AggregatePost({
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregatePost.fromJson(Map<String, dynamic> json) =>
      _$AggregatePostFromJson(json);

  @json_annotation.JsonKey(name: '_avg')
  final PostAvgAggregateOutputType? $avg;

  @json_annotation.JsonKey(name: '_sum')
  final PostSumAggregateOutputType? $sum;

  @json_annotation.JsonKey(name: '_min')
  final PostMinAggregateOutputType? $min;

  @json_annotation.JsonKey(name: '_max')
  final PostMaxAggregateOutputType? $max;

  Map<String, dynamic> toJson() => _$AggregatePostToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class PostGroupByOutputType {
  const PostGroupByOutputType({
    required this.id,
    required this.title,
    required this.authorId,
    required this.content,
    required this.published,
    required this.created_at,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory PostGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostGroupByOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int id;

  @json_annotation.JsonKey(name: 'title')
  final String title;

  @json_annotation.JsonKey(name: 'authorId')
  final int authorId;

  @json_annotation.JsonKey(name: 'content')
  final String content;

  @json_annotation.JsonKey(name: 'published')
  final bool published;

  @json_annotation.JsonKey(name: 'created_at')
  final DateTime created_at;

  @json_annotation.JsonKey(name: '_avg')
  final PostAvgAggregateOutputType? $avg;

  @json_annotation.JsonKey(name: '_sum')
  final PostSumAggregateOutputType? $sum;

  @json_annotation.JsonKey(name: '_min')
  final PostMinAggregateOutputType? $min;

  @json_annotation.JsonKey(name: '_max')
  final PostMaxAggregateOutputType? $max;

  Map<String, dynamic> toJson() => _$PostGroupByOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class AffectedRowsOutput {
  const AffectedRowsOutput({
    required this.count,
  });

  factory AffectedRowsOutput.fromJson(Map<String, dynamic> json) =>
      _$AffectedRowsOutputFromJson(json);

  @json_annotation.JsonKey(name: 'count')
  final int count;

  Map<String, dynamic> toJson() => _$AffectedRowsOutputToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class UserCountOutputType {
  const UserCountOutputType({
    required this.posts,
  });

  factory UserCountOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserCountOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'posts')
  final int posts;

  Map<String, dynamic> toJson() => _$UserCountOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class UserCountAggregateOutputType {
  const UserCountAggregateOutputType({
    required this.id,
    required this.name,
    required this.createdAt,
    required this.$all,
  });

  factory UserCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserCountAggregateOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int id;

  @json_annotation.JsonKey(name: 'name')
  final int name;

  @json_annotation.JsonKey(name: 'createdAt')
  final int createdAt;

  @json_annotation.JsonKey(name: '_all')
  final int $all;

  Map<String, dynamic> toJson() => _$UserCountAggregateOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class UserAvgAggregateOutputType {
  const UserAvgAggregateOutputType({
    this.id,
  });

  factory UserAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserAvgAggregateOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final double? id;

  Map<String, dynamic> toJson() => _$UserAvgAggregateOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class UserSumAggregateOutputType {
  const UserSumAggregateOutputType({
    this.id,
  });

  factory UserSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserSumAggregateOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int? id;

  Map<String, dynamic> toJson() => _$UserSumAggregateOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class UserMinAggregateOutputType {
  const UserMinAggregateOutputType({
    this.id,
    this.name,
    this.createdAt,
  });

  factory UserMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserMinAggregateOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int? id;

  @json_annotation.JsonKey(name: 'name')
  final String? name;

  @json_annotation.JsonKey(name: 'createdAt')
  final DateTime? createdAt;

  Map<String, dynamic> toJson() => _$UserMinAggregateOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class UserMaxAggregateOutputType {
  const UserMaxAggregateOutputType({
    this.id,
    this.name,
    this.createdAt,
  });

  factory UserMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserMaxAggregateOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int? id;

  @json_annotation.JsonKey(name: 'name')
  final String? name;

  @json_annotation.JsonKey(name: 'createdAt')
  final DateTime? createdAt;

  Map<String, dynamic> toJson() => _$UserMaxAggregateOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class PostCountAggregateOutputType {
  const PostCountAggregateOutputType({
    required this.id,
    required this.title,
    required this.authorId,
    required this.content,
    required this.published,
    required this.created_at,
    required this.$all,
  });

  factory PostCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostCountAggregateOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int id;

  @json_annotation.JsonKey(name: 'title')
  final int title;

  @json_annotation.JsonKey(name: 'authorId')
  final int authorId;

  @json_annotation.JsonKey(name: 'content')
  final int content;

  @json_annotation.JsonKey(name: 'published')
  final int published;

  @json_annotation.JsonKey(name: 'created_at')
  final int created_at;

  @json_annotation.JsonKey(name: '_all')
  final int $all;

  Map<String, dynamic> toJson() => _$PostCountAggregateOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class PostAvgAggregateOutputType {
  const PostAvgAggregateOutputType({
    this.id,
    this.authorId,
  });

  factory PostAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostAvgAggregateOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final double? id;

  @json_annotation.JsonKey(name: 'authorId')
  final double? authorId;

  Map<String, dynamic> toJson() => _$PostAvgAggregateOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class PostSumAggregateOutputType {
  const PostSumAggregateOutputType({
    this.id,
    this.authorId,
  });

  factory PostSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostSumAggregateOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int? id;

  @json_annotation.JsonKey(name: 'authorId')
  final int? authorId;

  Map<String, dynamic> toJson() => _$PostSumAggregateOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class PostMinAggregateOutputType {
  const PostMinAggregateOutputType({
    this.id,
    this.title,
    this.authorId,
    this.content,
    this.published,
    this.created_at,
  });

  factory PostMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostMinAggregateOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int? id;

  @json_annotation.JsonKey(name: 'title')
  final String? title;

  @json_annotation.JsonKey(name: 'authorId')
  final int? authorId;

  @json_annotation.JsonKey(name: 'content')
  final String? content;

  @json_annotation.JsonKey(name: 'published')
  final bool? published;

  @json_annotation.JsonKey(name: 'created_at')
  final DateTime? created_at;

  Map<String, dynamic> toJson() => _$PostMinAggregateOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class PostMaxAggregateOutputType {
  const PostMaxAggregateOutputType({
    this.id,
    this.title,
    this.authorId,
    this.content,
    this.published,
    this.created_at,
  });

  factory PostMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostMaxAggregateOutputTypeFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int? id;

  @json_annotation.JsonKey(name: 'title')
  final String? title;

  @json_annotation.JsonKey(name: 'authorId')
  final int? authorId;

  @json_annotation.JsonKey(name: 'content')
  final String? content;

  @json_annotation.JsonKey(name: 'published')
  final bool? published;

  @json_annotation.JsonKey(name: 'created_at')
  final DateTime? created_at;

  Map<String, dynamic> toJson() => _$PostMaxAggregateOutputTypeToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class User {
  const User({
    required this.id,
    required this.name,
    required this.createdAt,
    this.posts,
  });

  factory User.fromJson(Map<String, dynamic> json) => _$UserFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int id;

  @json_annotation.JsonKey(name: 'name')
  final String name;

  @json_annotation.JsonKey(name: 'createdAt')
  final DateTime createdAt;

  @json_annotation.JsonKey(name: 'posts')
  final List<Post>? posts;

  Map<String, dynamic> toJson() => _$UserToJson(this);
}

@json_annotation.JsonSerializable(
    createFactory: true, createToJson: true, explicitToJson: true)
class Post {
  const Post({
    required this.id,
    required this.title,
    required this.authorId,
    required this.content,
    required this.published,
    required this.created_at,
    required this.author,
  });

  factory Post.fromJson(Map<String, dynamic> json) => _$PostFromJson(json);

  @json_annotation.JsonKey(name: 'id')
  final int id;

  @json_annotation.JsonKey(name: 'title')
  final String title;

  @json_annotation.JsonKey(name: 'authorId')
  final int authorId;

  @json_annotation.JsonKey(name: 'content')
  final String content;

  @json_annotation.JsonKey(name: 'published')
  final bool published;

  @json_annotation.JsonKey(name: 'created_at')
  final DateTime created_at;

  @json_annotation.JsonKey(name: 'author')
  final User author;

  Map<String, dynamic> toJson() => _$PostToJson(this);
}

class UserDelegate {
  const UserDelegate({
    required runtime.Engine engine,
    runtime.QueryEngineRequestHeaders? headers,
  })  : _engine = engine,
        _headers = headers;

  final runtime.Engine _engine;
  final runtime.QueryEngineRequestHeaders? _headers;

  Future<User?> findUnique({
    required UserWhereUniqueInput where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'findUniqueUser',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('where', where, isRequired: true)]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['findUniqueUser'] == null) {
      return null;
    }

    return User.fromJson(result.data['findUniqueUser'] as Map<String, dynamic>);
  }

  Future<User?> findFirst({
    UserWhereInput? where,
    List<UserOrderByWithRelationInput>? orderBy,
    UserWhereUniqueInput? cursor,
    int? take,
    int? skip,
    List<UserScalarFieldEnum>? distinct,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'findFirstUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('cursor', cursor, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false),
            runtime.GraphQLArg('distinct', distinct, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['findFirstUser'] == null) {
      return null;
    }

    return User.fromJson(result.data['findFirstUser'] as Map<String, dynamic>);
  }

  Future<List<User>> findMany({
    UserWhereInput? where,
    List<UserOrderByWithRelationInput>? orderBy,
    UserWhereUniqueInput? cursor,
    int? take,
    int? skip,
    List<UserScalarFieldEnum>? distinct,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'findManyUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('cursor', cursor, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false),
            runtime.GraphQLArg('distinct', distinct, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return (result.data['findManyUser'] as List<dynamic>)
        .map<User>(
          (dynamic item) => User.fromJson(item as Map<String, dynamic>),
        )
        .toList();
  }

  Future<User> create({
    required runtime.PrismaUnion<UserCreateInput, UserUncheckedCreateInput>
        data,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'createOneUser',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('data', data, isRequired: true)]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return User.fromJson(result.data['createOneUser'] as Map<String, dynamic>);
  }

  Future<AffectedRowsOutput> createMany({
    required List<UserCreateManyInput> data,
    bool? skipDuplicates,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'createManyUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('data', data, isRequired: true),
            runtime.GraphQLArg('skipDuplicates', skipDuplicates,
                isRequired: false)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return AffectedRowsOutput.fromJson(
        result.data['createManyUser'] as Map<String, dynamic>);
  }

  Future<User?> update({
    required runtime.PrismaUnion<UserUpdateInput, UserUncheckedUpdateInput>
        data,
    required UserWhereUniqueInput where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'updateOneUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('data', data, isRequired: true),
            runtime.GraphQLArg('where', where, isRequired: true)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['updateOneUser'] == null) {
      return null;
    }

    return User.fromJson(result.data['updateOneUser'] as Map<String, dynamic>);
  }

  Future<AffectedRowsOutput> updateMany({
    required runtime.PrismaUnion<UserUpdateManyMutationInput,
            UserUncheckedUpdateManyInput>
        data,
    UserWhereInput? where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'updateManyUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('data', data, isRequired: true),
            runtime.GraphQLArg('where', where, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return AffectedRowsOutput.fromJson(
        result.data['updateManyUser'] as Map<String, dynamic>);
  }

  Future<User> upsert({
    required UserWhereUniqueInput where,
    required runtime.PrismaUnion<UserCreateInput, UserUncheckedCreateInput>
        create,
    required runtime.PrismaUnion<UserUpdateInput, UserUncheckedUpdateInput>
        update,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'upsertOneUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: true),
            runtime.GraphQLArg('create', create, isRequired: true),
            runtime.GraphQLArg('update', update, isRequired: true)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return User.fromJson(result.data['upsertOneUser'] as Map<String, dynamic>);
  }

  Future<User?> delete({
    required UserWhereUniqueInput where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'deleteOneUser',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('where', where, isRequired: true)]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['deleteOneUser'] == null) {
      return null;
    }

    return User.fromJson(result.data['deleteOneUser'] as Map<String, dynamic>);
  }

  Future<AffectedRowsOutput> deleteMany({
    UserWhereInput? where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'deleteManyUser',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('where', where, isRequired: false)]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return AffectedRowsOutput.fromJson(
        result.data['deleteManyUser'] as Map<String, dynamic>);
  }

  Future<AggregateUser> aggregate({
    UserWhereInput? where,
    List<UserOrderByWithRelationInput>? orderBy,
    UserWhereUniqueInput? cursor,
    int? take,
    int? skip,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'aggregateUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('cursor', cursor, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return AggregateUser.fromJson(
        result.data['aggregateUser'] as Map<String, dynamic>);
  }

  Future<List<UserGroupByOutputType>> groupBy({
    UserWhereInput? where,
    List<UserOrderByWithAggregationInput>? orderBy,
    required List<UserScalarFieldEnum> by,
    UserScalarWhereWithAggregatesInput? having,
    int? take,
    int? skip,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'groupByUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('by', by, isRequired: true),
            runtime.GraphQLArg('having', having, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return (result.data['groupByUser'] as List<dynamic>)
        .map<UserGroupByOutputType>(
          (dynamic item) =>
              UserGroupByOutputType.fromJson(item as Map<String, dynamic>),
        )
        .toList();
  }
}

class PostDelegate {
  const PostDelegate({
    required runtime.Engine engine,
    runtime.QueryEngineRequestHeaders? headers,
  })  : _engine = engine,
        _headers = headers;

  final runtime.Engine _engine;
  final runtime.QueryEngineRequestHeaders? _headers;

  Future<Post?> findUnique({
    required PostWhereUniqueInput where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'findUniquePost',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('where', where, isRequired: true)]),
          fields: runtime.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['findUniquePost'] == null) {
      return null;
    }

    return Post.fromJson(result.data['findUniquePost'] as Map<String, dynamic>);
  }

  Future<Post?> findFirst({
    PostWhereInput? where,
    List<PostOrderByWithRelationInput>? orderBy,
    PostWhereUniqueInput? cursor,
    int? take,
    int? skip,
    List<PostScalarFieldEnum>? distinct,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'findFirstPost',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('cursor', cursor, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false),
            runtime.GraphQLArg('distinct', distinct, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['findFirstPost'] == null) {
      return null;
    }

    return Post.fromJson(result.data['findFirstPost'] as Map<String, dynamic>);
  }

  Future<List<Post>> findMany({
    PostWhereInput? where,
    List<PostOrderByWithRelationInput>? orderBy,
    PostWhereUniqueInput? cursor,
    int? take,
    int? skip,
    List<PostScalarFieldEnum>? distinct,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'findManyPost',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('cursor', cursor, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false),
            runtime.GraphQLArg('distinct', distinct, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return (result.data['findManyPost'] as List<dynamic>)
        .map<Post>(
          (dynamic item) => Post.fromJson(item as Map<String, dynamic>),
        )
        .toList();
  }

  Future<Post> create({
    required runtime.PrismaUnion<PostCreateInput, PostUncheckedCreateInput>
        data,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'createOnePost',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('data', data, isRequired: true)]),
          fields: runtime.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return Post.fromJson(result.data['createOnePost'] as Map<String, dynamic>);
  }

  Future<AffectedRowsOutput> createMany({
    required List<PostCreateManyInput> data,
    bool? skipDuplicates,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'createManyPost',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('data', data, isRequired: true),
            runtime.GraphQLArg('skipDuplicates', skipDuplicates,
                isRequired: false)
          ]),
          fields: runtime.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return AffectedRowsOutput.fromJson(
        result.data['createManyPost'] as Map<String, dynamic>);
  }

  Future<Post?> update({
    required runtime.PrismaUnion<PostUpdateInput, PostUncheckedUpdateInput>
        data,
    required PostWhereUniqueInput where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'updateOnePost',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('data', data, isRequired: true),
            runtime.GraphQLArg('where', where, isRequired: true)
          ]),
          fields: runtime.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['updateOnePost'] == null) {
      return null;
    }

    return Post.fromJson(result.data['updateOnePost'] as Map<String, dynamic>);
  }

  Future<AffectedRowsOutput> updateMany({
    required runtime.PrismaUnion<PostUpdateManyMutationInput,
            PostUncheckedUpdateManyInput>
        data,
    PostWhereInput? where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'updateManyPost',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('data', data, isRequired: true),
            runtime.GraphQLArg('where', where, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return AffectedRowsOutput.fromJson(
        result.data['updateManyPost'] as Map<String, dynamic>);
  }

  Future<Post> upsert({
    required PostWhereUniqueInput where,
    required runtime.PrismaUnion<PostCreateInput, PostUncheckedCreateInput>
        create,
    required runtime.PrismaUnion<PostUpdateInput, PostUncheckedUpdateInput>
        update,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'upsertOnePost',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: true),
            runtime.GraphQLArg('create', create, isRequired: true),
            runtime.GraphQLArg('update', update, isRequired: true)
          ]),
          fields: runtime.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return Post.fromJson(result.data['upsertOnePost'] as Map<String, dynamic>);
  }

  Future<Post?> delete({
    required PostWhereUniqueInput where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'deleteOnePost',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('where', where, isRequired: true)]),
          fields: runtime.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['deleteOnePost'] == null) {
      return null;
    }

    return Post.fromJson(result.data['deleteOnePost'] as Map<String, dynamic>);
  }

  Future<AffectedRowsOutput> deleteMany({
    PostWhereInput? where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'deleteManyPost',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('where', where, isRequired: false)]),
          fields: runtime.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return AffectedRowsOutput.fromJson(
        result.data['deleteManyPost'] as Map<String, dynamic>);
  }

  Future<AggregatePost> aggregate({
    PostWhereInput? where,
    List<PostOrderByWithRelationInput>? orderBy,
    PostWhereUniqueInput? cursor,
    int? take,
    int? skip,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'aggregatePost',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('cursor', cursor, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return AggregatePost.fromJson(
        result.data['aggregatePost'] as Map<String, dynamic>);
  }

  Future<List<PostGroupByOutputType>> groupBy({
    PostWhereInput? where,
    List<PostOrderByWithAggregationInput>? orderBy,
    required List<PostScalarFieldEnum> by,
    PostScalarWhereWithAggregatesInput? having,
    int? take,
    int? skip,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'groupByPost',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('by', by, isRequired: true),
            runtime.GraphQLArg('having', having, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return (result.data['groupByPost'] as List<dynamic>)
        .map<PostGroupByOutputType>(
          (dynamic item) =>
              PostGroupByOutputType.fromJson(item as Map<String, dynamic>),
        )
        .toList();
  }
}

/// Prisma schema DMMF json string.
const String _dmmfStr =
    r'{"datamodel":{"models":[{"name":"User","dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false,"dbNames":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false}},{"name":"name","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"name","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false,"dbNames":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false}},{"name":"posts","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Post","relationName":"PostToUser","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationOnDelete":null,"documentation":null,"additionalProperties":{"name":"posts","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Post","relationName":"PostToUser","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false}}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false,"fieldsMap":null,"documentation":null,"extra":{"name":"User","dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"posts","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Post","relationName":"PostToUser","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false}},{"name":"Post","dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false,"dbNames":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false}},{"name":"title","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"title","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"authorId","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"Int","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"authorId","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}},{"name":"content","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"content","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"published","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"published","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false}},{"name":"created_at","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false,"dbNames":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"created_at","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false}},{"name":"author","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"User","relationName":"PostToUser","relationFromFields":["authorId"],"relationToFields":["id"],"isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationOnDelete":null,"documentation":null,"additionalProperties":{"name":"author","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"User","relationName":"PostToUser","relationFromFields":["authorId"],"relationToFields":["id"],"isGenerated":false,"isUpdatedAt":false}}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false,"fieldsMap":null,"documentation":null,"extra":{"name":"Post","dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"title","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"authorId","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"content","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"published","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"created_at","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"author","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"User","relationName":"PostToUser","relationFromFields":["authorId"],"relationToFields":["id"],"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false}}],"enums":[],"types":[]},"schema":{"rootQueryType":null,"rootMutationType":null,"inputObjectTypes":{"model":null,"prisma":[{"name":"UserWhereInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"AND","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"OR","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"NOT","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"posts","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostListRelationFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserOrderByWithRelationInput","constraints":{"maxNumFields":1,"minNumFields":0},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"posts","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostOrderByRelationAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserWhereUniqueInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserOrderByWithAggregationInput","constraints":{"maxNumFields":1,"minNumFields":0},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserCountOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_avg","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserAvgOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserMaxOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserMinOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_sum","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserSumOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserScalarWhereWithAggregatesInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"AND","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"OR","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"NOT","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"PostWhereInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"AND","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"OR","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"PostWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"NOT","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"authorId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"BoolFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"author","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserRelationFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostOrderByWithRelationInput","constraints":{"maxNumFields":1,"minNumFields":0},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"authorId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"author","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostWhereUniqueInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"PostOrderByWithAggregationInput","constraints":{"maxNumFields":1,"minNumFields":0},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"authorId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostCountOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_avg","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostAvgOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostMaxOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostMinOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_sum","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostSumOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostScalarWhereWithAggregatesInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"AND","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"OR","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"PostScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"NOT","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"authorId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"BoolWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserCreateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"name","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"posts","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostCreateNestedManyWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUncheckedCreateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"posts","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostUncheckedCreateNestedManyWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUpdateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"posts","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostUpdateManyWithoutAuthorNestedInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUncheckedUpdateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"posts","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostUncheckedUpdateManyWithoutAuthorNestedInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserCreateManyInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserUpdateManyMutationInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUncheckedUpdateManyInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostCreateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"title","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"author","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserCreateNestedOneWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostUncheckedCreateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"authorId","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"PostUpdateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"BoolFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"author","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserUpdateOneRequiredWithoutPostsNestedInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostUncheckedUpdateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"authorId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"BoolFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostCreateManyInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"authorId","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"PostUpdateManyMutationInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"BoolFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostUncheckedUpdateManyInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"authorId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"BoolFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"IntFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"StringFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"mode","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"QueryMode","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"DateTimeFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostListRelationFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"every","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"some","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"none","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostOrderByRelationAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserCountOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserAvgOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserMaxOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserMinOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserSumOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"IntWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_avg","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedFloatFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_sum","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"StringWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"mode","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"QueryMode","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"DateTimeWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"BoolFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"NestedBoolFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserRelationFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"is","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"isNot","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostCountOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"authorId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostAvgOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"authorId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostMaxOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"authorId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostMinOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"authorId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostSumOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"authorId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"BoolWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"NestedBoolWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedBoolFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedBoolFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostCreateNestedManyWithoutAuthorInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"create","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostUncheckedCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostUncheckedCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connectOrCreate","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostCreateOrConnectWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostCreateOrConnectWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostCreateManyAuthorInputEnvelope","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostUncheckedCreateNestedManyWithoutAuthorInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"create","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostUncheckedCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostUncheckedCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connectOrCreate","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostCreateOrConnectWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostCreateOrConnectWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostCreateManyAuthorInputEnvelope","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"StringFieldUpdateOperationsInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"DateTimeFieldUpdateOperationsInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"PostUpdateManyWithoutAuthorNestedInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"create","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostUncheckedCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostUncheckedCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connectOrCreate","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostCreateOrConnectWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostCreateOrConnectWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"upsert","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostUpsertWithWhereUniqueWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostUpsertWithWhereUniqueWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostCreateManyAuthorInputEnvelope","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"disconnect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"delete","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"update","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostUpdateWithWhereUniqueWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostUpdateWithWhereUniqueWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"updateMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostUpdateManyWithWhereWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostUpdateManyWithWhereWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"deleteMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"IntFieldUpdateOperationsInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"increment","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"decrement","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"multiply","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"divide","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"PostUncheckedUpdateManyWithoutAuthorNestedInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"create","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostUncheckedCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostUncheckedCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connectOrCreate","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostCreateOrConnectWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostCreateOrConnectWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"upsert","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostUpsertWithWhereUniqueWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostUpsertWithWhereUniqueWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostCreateManyAuthorInputEnvelope","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"disconnect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"delete","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"update","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostUpdateWithWhereUniqueWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostUpdateWithWhereUniqueWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"updateMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostUpdateManyWithWhereWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostUpdateManyWithWhereWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"deleteMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserCreateNestedOneWithoutPostsInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"create","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserCreateWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedCreateWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connectOrCreate","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserCreateOrConnectWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"BoolFieldUpdateOperationsInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserUpdateOneRequiredWithoutPostsNestedInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"create","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserCreateWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedCreateWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connectOrCreate","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserCreateOrConnectWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"upsert","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserUpsertWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"update","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserUpdateWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedUpdateWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedIntFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedStringFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedDateTimeFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedIntWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_avg","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedFloatFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_sum","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedFloatFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null},{"isList":false,"type":"NestedFloatFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedStringWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedDateTimeWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedBoolFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"NestedBoolFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedBoolWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"NestedBoolWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedBoolFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedBoolFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostCreateWithoutAuthorInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"title","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"PostUncheckedCreateWithoutAuthorInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"PostCreateOrConnectWithoutAuthorInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"create","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostUncheckedCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostCreateManyAuthorInputEnvelope","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":true,"type":"PostCreateManyAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"skipDuplicates","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"PostUpsertWithWhereUniqueWithoutAuthorInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"update","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostUpdateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostUncheckedUpdateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"create","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostUncheckedCreateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostUpdateWithWhereUniqueWithoutAuthorInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostUpdateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostUncheckedUpdateWithoutAuthorInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostUpdateManyWithWhereWithoutAuthorInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostUpdateManyMutationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostUncheckedUpdateManyWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostScalarWhereInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"AND","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"OR","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"PostScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"NOT","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"PostScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"authorId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"BoolFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserCreateWithoutPostsInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"name","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserUncheckedCreateWithoutPostsInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserCreateOrConnectWithoutPostsInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"create","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserCreateWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedCreateWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUpsertWithoutPostsInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"update","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserUpdateWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedUpdateWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"create","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserCreateWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedCreateWithoutPostsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUpdateWithoutPostsInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUncheckedUpdateWithoutPostsInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostCreateManyAuthorInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"PostUpdateWithoutAuthorInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"BoolFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostUncheckedUpdateWithoutAuthorInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"BoolFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"PostUncheckedUpdateManyWithoutPostsInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"content","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"published","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"BoolFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"created_at","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null}]},"outputObjectTypes":{"model":[{"name":"User","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"name","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":false,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"posts","isNullable":true,"outputType":{"isList":true,"type":"Post","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"PostOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"distinct","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"PostScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"_count","isNullable":false,"outputType":{"isList":false,"type":"UserCountOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"Post","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"title","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"authorId","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"content","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"published","isNullable":false,"outputType":{"isList":false,"type":"Boolean","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"created_at","isNullable":false,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"author","isNullable":false,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null}],"prisma":[{"name":"Query","fields":[{"name":"findFirstUser","isNullable":true,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"distinct","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"findManyUser","isNullable":false,"outputType":{"isList":true,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"distinct","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"aggregateUser","isNullable":false,"outputType":{"isList":false,"type":"AggregateUser","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"groupByUser","isNullable":false,"outputType":{"isList":true,"type":"UserGroupByOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserOrderByWithAggregationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserOrderByWithAggregationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"by","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":true,"type":"UserScalarFieldEnum","location":"enumTypes","namespace":"prisma"},{"isList":false,"type":"UserScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"having","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"findUniqueUser","isNullable":true,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"findFirstPost","isNullable":true,"outputType":{"isList":false,"type":"Post","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"PostOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"distinct","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"PostScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"findManyPost","isNullable":false,"outputType":{"isList":true,"type":"Post","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"PostOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"distinct","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"PostScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"aggregatePost","isNullable":false,"outputType":{"isList":false,"type":"AggregatePost","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"PostOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"groupByPost","isNullable":false,"outputType":{"isList":true,"type":"PostGroupByOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"PostOrderByWithAggregationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostOrderByWithAggregationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"by","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":true,"type":"PostScalarFieldEnum","location":"enumTypes","namespace":"prisma"},{"isList":false,"type":"PostScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"having","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"findUniquePost","isNullable":true,"outputType":{"isList":false,"type":"Post","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"Mutation","fields":[{"name":"createOneUser","isNullable":false,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserCreateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedCreateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"upsertOneUser","isNullable":false,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"create","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserCreateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedCreateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"update","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserUpdateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedUpdateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"createManyUser","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":true,"type":"UserCreateManyInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"skipDuplicates","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"deleteOneUser","isNullable":true,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"updateOneUser","isNullable":true,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserUpdateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedUpdateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"updateManyUser","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserUpdateManyMutationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedUpdateManyInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"deleteManyUser","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"createOnePost","isNullable":false,"outputType":{"isList":false,"type":"Post","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostCreateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostUncheckedCreateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"upsertOnePost","isNullable":false,"outputType":{"isList":false,"type":"Post","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"create","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostCreateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostUncheckedCreateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"update","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostUpdateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostUncheckedUpdateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"createManyPost","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":true,"type":"PostCreateManyInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"skipDuplicates","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"deleteOnePost","isNullable":true,"outputType":{"isList":false,"type":"Post","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"updateOnePost","isNullable":true,"outputType":{"isList":false,"type":"Post","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostUpdateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostUncheckedUpdateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"updateManyPost","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"PostUpdateManyMutationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"PostUncheckedUpdateManyInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"deleteManyPost","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"PostWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"executeRaw","isNullable":false,"outputType":{"isList":false,"type":"Json","location":"scalar","namespace":null},"args":[{"name":"query","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"parameters","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Json","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"queryRaw","isNullable":false,"outputType":{"isList":false,"type":"Json","location":"scalar","namespace":null},"args":[{"name":"query","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"parameters","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Json","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"AggregateUser","fields":[{"name":"_count","isNullable":true,"outputType":{"isList":false,"type":"UserCountAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_avg","isNullable":true,"outputType":{"isList":false,"type":"UserAvgAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_sum","isNullable":true,"outputType":{"isList":false,"type":"UserSumAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_min","isNullable":true,"outputType":{"isList":false,"type":"UserMinAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_max","isNullable":true,"outputType":{"isList":false,"type":"UserMaxAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserGroupByOutputType","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"name","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":false,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"_count","isNullable":true,"outputType":{"isList":false,"type":"UserCountAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_avg","isNullable":true,"outputType":{"isList":false,"type":"UserAvgAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_sum","isNullable":true,"outputType":{"isList":false,"type":"UserSumAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_min","isNullable":true,"outputType":{"isList":false,"type":"UserMinAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_max","isNullable":true,"outputType":{"isList":false,"type":"UserMaxAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"AggregatePost","fields":[{"name":"_count","isNullable":true,"outputType":{"isList":false,"type":"PostCountAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_avg","isNullable":true,"outputType":{"isList":false,"type":"PostAvgAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_sum","isNullable":true,"outputType":{"isList":false,"type":"PostSumAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_min","isNullable":true,"outputType":{"isList":false,"type":"PostMinAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_max","isNullable":true,"outputType":{"isList":false,"type":"PostMaxAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"PostGroupByOutputType","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"title","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"authorId","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"content","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"published","isNullable":false,"outputType":{"isList":false,"type":"Boolean","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"created_at","isNullable":false,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"_count","isNullable":true,"outputType":{"isList":false,"type":"PostCountAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_avg","isNullable":true,"outputType":{"isList":false,"type":"PostAvgAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_sum","isNullable":true,"outputType":{"isList":false,"type":"PostSumAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_min","isNullable":true,"outputType":{"isList":false,"type":"PostMinAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_max","isNullable":true,"outputType":{"isList":false,"type":"PostMaxAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"AffectedRowsOutput","fields":[{"name":"count","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserCountOutputType","fields":[{"name":"posts","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserCountAggregateOutputType","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"name","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"_all","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserAvgAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Float","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserSumAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserMinAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"name","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":true,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserMaxAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"name","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":true,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"PostCountAggregateOutputType","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"title","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"authorId","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"content","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"published","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"created_at","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"_all","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"PostAvgAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Float","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"authorId","isNullable":true,"outputType":{"isList":false,"type":"Float","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"PostSumAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"authorId","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"PostMinAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"title","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"authorId","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"content","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"published","isNullable":true,"outputType":{"isList":false,"type":"Boolean","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"created_at","isNullable":true,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"PostMaxAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"title","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"authorId","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"content","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"published","isNullable":true,"outputType":{"isList":false,"type":"Boolean","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"created_at","isNullable":true,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null}]},"enumTypes":{"model":null,"prisma":[{"name":"PostScalarFieldEnum","values":["id","title","authorId","content","published","created_at"]},{"name":"QueryMode","values":["default","insensitive"]},{"name":"SortOrder","values":["asc","desc"]},{"name":"TransactionIsolationLevel","values":["ReadUncommitted","ReadCommitted","RepeatableRead","Serializable"]},{"name":"UserScalarFieldEnum","values":["id","name","createdAt"]}]}},"mappings":{"modelOperations":[{"model":"User","findUnique":"findUniqueUser","findFirst":"findFirstUser","findMany":"findManyUser","create":"createOneUser","createMany":"createManyUser","update":"updateOneUser","updateMany":"updateManyUser","upsert":"upsertOneUser","delete":"deleteOneUser","deleteMany":"deleteManyUser","aggregate":"aggregateUser","groupBy":"groupByUser","findRaw":null,"aggregateRaw":null},{"model":"Post","findUnique":"findUniquePost","findFirst":"findFirstPost","findMany":"findManyPost","create":"createOnePost","createMany":"createManyPost","update":"updateOnePost","updateMany":"updateManyPost","upsert":"upsertOnePost","delete":"deleteOnePost","deleteMany":"deleteManyPost","aggregate":"aggregatePost","groupBy":"groupByPost","findRaw":null,"aggregateRaw":null}],"otherOperations":{"read":[],"write":["executeRaw","queryRaw"]}}}';

/// Prisma schema DMMF.
final dmmf.Document _dmmf =
    dmmf.Document.fromJson(convert.json.decode(_dmmfStr));

/// Prisma query engine executable.
const String _executable =
    '/Users/seven/workspace/prisma/example/.dart_tool/prisma/query-engine';

/// Prisma schema as string.
final String _schema =
    "generator client {\n  provider        = \"prisma-client-dart\"\n  output          = \"../lib/src/generated\"\n  previewFeatures = [\"interactiveTransactions\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id        Int      @id @default(autoincrement())\n  name      String\n  createdAt DateTime @default(now())\n  posts     Post[]\n}\n\nmodel Post {\n  id         Int      @id @default(autoincrement())\n  title      String\n  authorId   Int\n  content    String\n  published  Boolean\n  created_at DateTime @default(now())\n  author     User     @relation(fields: [authorId], references: [id])\n}\n";

class Datasources {
  final runtime.Datasource? db;

  const Datasources({this.db});

  Map<String, runtime.Datasource> toOverwrites() {
    final Map<String, runtime.Datasource> overwrites$ =
        <String, runtime.Datasource>{};
    if (db != null) {
      overwrites$['db'] = db!;
    } else {
      overwrites$['db'] = runtime.Datasource(url: 'env("DATABASE_URL")');
    }

    return overwrites$;
  }
}

/// Prisma client.
class PrismaClient {
  final runtime.Engine _engine;
  final runtime.QueryEngineRequestHeaders? _headers;

  const PrismaClient._(this._engine, this._headers);

  factory PrismaClient({
    Datasources? datasources,
  }) {
    final runtime.Engine engine = runtime.BinaryEngine(
      datasources:
          datasources?.toOverwrites() ?? const <String, runtime.Datasource>{},
      dmmf: _dmmf,
      schema: _schema,
      environment: configure.environment,
      executable: _executable,
    );

    return PrismaClient._(engine, null);
  }

  /// Connect client to database.
  Future<void> $connect() => _engine.start();

  /// Disconnect client from database.
  Future<void> $disconnect() => _engine.stop();

  /// Start transaction.
  ///
  /// Example:
  /// ```dart
  /// final User user = await prisma.$transaction((PrismaClient prisma) async {
  ///   final User user = await prisma.user.create(...);
  ///   final Post post = await prisma.post.create(...);
  ///
  ///   return user;
  /// });
  /// ```
  Future<T> $transaction<T>(Future<T> Function(PrismaClient) handler) async {
    // If current client is already in transaction, use it.
    if (_headers?.transactionId != null) return handler(this);

    // Create transcation common headers.
    final runtime.TransactionHeaders headers = runtime.TransactionHeaders();

    // Request transaction info, Start transaction.
    final runtime.TransactionInfo info =
        await _engine.startTransaction(headers: headers);

    // Create new client with transaction headers.
    final PrismaClient transactionClient = PrismaClient._(
      _engine,
      runtime.QueryEngineRequestHeaders(transactionId: info.id),
    );

    try {
      return handler(transactionClient).then<T>((T value) async {
        await _engine.commitTransaction(headers: headers, info: info);

        return value;
      });
    } catch (e) {
      await _engine.rollbackTransaction(headers: headers, info: info);
      rethrow;
    }
  }

  /// User model delegate.
  UserDelegate get user => UserDelegate(engine: _engine, headers: _headers);

  /// Post model delegate.
  PostDelegate get post => PostDelegate(engine: _engine, headers: _headers);
}
