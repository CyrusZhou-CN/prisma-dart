library prisma.client; // ignore_for_file: no_leading_underscores_for_library_prefixes

import 'dart:convert' as _i5;

import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:orm/configure.dart' as _i2;
import 'package:orm/dmmf.dart' as _i4;
import 'package:orm/orm.dart' as _i1;
import 'package:orm/orm.dart'
    show $PrismaNullCopyWith, PrismaNull, dateTimeToJson;

import 'prisma_configurator.dart' as _i3;

export 'package:orm/orm.dart' show Datasource, PrismaClient, PrismaNull;
export 'package:orm/orm.dart' show TransactionIsolationLevel;

part 'prisma_client.g.dart';
part 'prisma_client.freezed.dart';
// GENERATED CODE - DO NOT MODIFY BY HAND
//
// ignore_for_file: camel_case_types, constant_identifier_names, depend_on_referenced_packages, invalid_annotation_target, non_constant_identifier_names, unnecessary_import, unused_import, unused_shown_name
//
//******************************************************************************
// This file was generated by Prisma
// GitHub: https://github.com/odroe/prisma-dart
//******************************************************************************

enum QueryMode {
  @JsonValue('default')
  dart__default,
  insensitive
}

enum SortOrder { asc, desc }

enum UserScalarFieldEnum { id, name, createdAt }

@freezed
class UserWhereInput_AND
    with _$UserWhereInput_AND
    implements _i1.JsonSerializable {
  const factory UserWhereInput_AND.withUserWhereInput(UserWhereInput value) =
      UserWhereInput_AND_withUserWhereInput;

  const factory UserWhereInput_AND.withUserWhereInputList(
      List<UserWhereInput> value) = UserWhereInput_AND_withUserWhereInputList;

  factory UserWhereInput_AND.fromJson(Map<String, dynamic> json) =>
      _$UserWhereInput_ANDFromJson(json);
}

@freezed
class UserWhereInput_NOT
    with _$UserWhereInput_NOT
    implements _i1.JsonSerializable {
  const factory UserWhereInput_NOT.withUserWhereInput(UserWhereInput value) =
      UserWhereInput_NOT_withUserWhereInput;

  const factory UserWhereInput_NOT.withUserWhereInputList(
      List<UserWhereInput> value) = UserWhereInput_NOT_withUserWhereInputList;

  factory UserWhereInput_NOT.fromJson(Map<String, dynamic> json) =>
      _$UserWhereInput_NOTFromJson(json);
}

@freezed
class UserWhereInput_id
    with _$UserWhereInput_id
    implements _i1.JsonSerializable {
  const factory UserWhereInput_id.withIntFilter(IntFilter value) =
      UserWhereInput_id_withIntFilter;

  const factory UserWhereInput_id.withInt(int value) =
      UserWhereInput_id_withInt;

  factory UserWhereInput_id.fromJson(Map<String, dynamic> json) =>
      _$UserWhereInput_idFromJson(json);
}

@freezed
class UserWhereInput_name
    with _$UserWhereInput_name
    implements _i1.JsonSerializable {
  const factory UserWhereInput_name.withStringFilter(StringFilter value) =
      UserWhereInput_name_withStringFilter;

  const factory UserWhereInput_name.withString(String value) =
      UserWhereInput_name_withString;

  factory UserWhereInput_name.fromJson(Map<String, dynamic> json) =>
      _$UserWhereInput_nameFromJson(json);
}

@freezed
class UserWhereInput_createdAt
    with _$UserWhereInput_createdAt
    implements _i1.JsonSerializable {
  const factory UserWhereInput_createdAt.withDateTimeFilter(
      DateTimeFilter value) = UserWhereInput_createdAt_withDateTimeFilter;

  const factory UserWhereInput_createdAt.withDateTime(
          @JsonKey(toJson: dateTimeToJson) DateTime value) =
      UserWhereInput_createdAt_withDateTime;

  factory UserWhereInput_createdAt.fromJson(Map<String, dynamic> json) =>
      _$UserWhereInput_createdAtFromJson(json);
}

@freezed
class UserWhereInput with _$UserWhereInput implements _i1.JsonSerializable {
  factory UserWhereInput.fromJson(Map<String, dynamic> json) =>
      _$UserWhereInputFromJson(json);

  const factory UserWhereInput({
    @JsonKey(name: 'AND') UserWhereInput_AND? AND,
    @JsonKey(name: 'OR') _i1.PrismaNullable<List<UserWhereInput>> OR,
    @JsonKey(name: 'NOT') UserWhereInput_NOT? NOT,
    @JsonKey(name: 'id') UserWhereInput_id? id,
    @JsonKey(name: 'name') UserWhereInput_name? name,
    @JsonKey(name: 'createdAt') UserWhereInput_createdAt? createdAt,
  }) = _UserWhereInput;
}

@freezed
class UserOrderByWithRelationInput
    with _$UserOrderByWithRelationInput
    implements _i1.JsonSerializable {
  factory UserOrderByWithRelationInput.fromJson(Map<String, dynamic> json) =>
      _$UserOrderByWithRelationInputFromJson(json);

  const factory UserOrderByWithRelationInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'name') _i1.PrismaNullable<SortOrder> name,
    @JsonKey(name: 'createdAt') _i1.PrismaNullable<SortOrder> createdAt,
  }) = _UserOrderByWithRelationInput;
}

@freezed
class UserWhereUniqueInput
    with _$UserWhereUniqueInput
    implements _i1.JsonSerializable {
  factory UserWhereUniqueInput.fromJson(Map<String, dynamic> json) =>
      _$UserWhereUniqueInputFromJson(json);

  const factory UserWhereUniqueInput(
          {@JsonKey(name: 'id') _i1.PrismaNullable<int> id}) =
      _UserWhereUniqueInput;
}

@freezed
class UserOrderByWithAggregationInput
    with _$UserOrderByWithAggregationInput
    implements _i1.JsonSerializable {
  factory UserOrderByWithAggregationInput.fromJson(Map<String, dynamic> json) =>
      _$UserOrderByWithAggregationInputFromJson(json);

  const factory UserOrderByWithAggregationInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'name') _i1.PrismaNullable<SortOrder> name,
    @JsonKey(name: 'createdAt') _i1.PrismaNullable<SortOrder> createdAt,
    @JsonKey(name: '_count')
        _i1.PrismaNullable<UserCountOrderByAggregateInput> prisma__count,
    @JsonKey(name: '_avg')
        _i1.PrismaNullable<UserAvgOrderByAggregateInput> prisma__avg,
    @JsonKey(name: '_max')
        _i1.PrismaNullable<UserMaxOrderByAggregateInput> prisma__max,
    @JsonKey(name: '_min')
        _i1.PrismaNullable<UserMinOrderByAggregateInput> prisma__min,
    @JsonKey(name: '_sum')
        _i1.PrismaNullable<UserSumOrderByAggregateInput> prisma__sum,
  }) = _UserOrderByWithAggregationInput;
}

@freezed
class UserScalarWhereWithAggregatesInput_AND
    with _$UserScalarWhereWithAggregatesInput_AND
    implements _i1.JsonSerializable {
  const factory UserScalarWhereWithAggregatesInput_AND.withUserScalarWhereWithAggregatesInput(
          UserScalarWhereWithAggregatesInput value) =
      UserScalarWhereWithAggregatesInput_AND_withUserScalarWhereWithAggregatesInput;

  const factory UserScalarWhereWithAggregatesInput_AND.withUserScalarWhereWithAggregatesInputList(
          List<UserScalarWhereWithAggregatesInput> value) =
      UserScalarWhereWithAggregatesInput_AND_withUserScalarWhereWithAggregatesInputList;

  factory UserScalarWhereWithAggregatesInput_AND.fromJson(
          Map<String, dynamic> json) =>
      _$UserScalarWhereWithAggregatesInput_ANDFromJson(json);
}

@freezed
class UserScalarWhereWithAggregatesInput_NOT
    with _$UserScalarWhereWithAggregatesInput_NOT
    implements _i1.JsonSerializable {
  const factory UserScalarWhereWithAggregatesInput_NOT.withUserScalarWhereWithAggregatesInput(
          UserScalarWhereWithAggregatesInput value) =
      UserScalarWhereWithAggregatesInput_NOT_withUserScalarWhereWithAggregatesInput;

  const factory UserScalarWhereWithAggregatesInput_NOT.withUserScalarWhereWithAggregatesInputList(
          List<UserScalarWhereWithAggregatesInput> value) =
      UserScalarWhereWithAggregatesInput_NOT_withUserScalarWhereWithAggregatesInputList;

  factory UserScalarWhereWithAggregatesInput_NOT.fromJson(
          Map<String, dynamic> json) =>
      _$UserScalarWhereWithAggregatesInput_NOTFromJson(json);
}

@freezed
class UserScalarWhereWithAggregatesInput_id
    with _$UserScalarWhereWithAggregatesInput_id
    implements _i1.JsonSerializable {
  const factory UserScalarWhereWithAggregatesInput_id.withIntWithAggregatesFilter(
          IntWithAggregatesFilter value) =
      UserScalarWhereWithAggregatesInput_id_withIntWithAggregatesFilter;

  const factory UserScalarWhereWithAggregatesInput_id.withInt(int value) =
      UserScalarWhereWithAggregatesInput_id_withInt;

  factory UserScalarWhereWithAggregatesInput_id.fromJson(
          Map<String, dynamic> json) =>
      _$UserScalarWhereWithAggregatesInput_idFromJson(json);
}

@freezed
class UserScalarWhereWithAggregatesInput_name
    with _$UserScalarWhereWithAggregatesInput_name
    implements _i1.JsonSerializable {
  const factory UserScalarWhereWithAggregatesInput_name.withStringWithAggregatesFilter(
          StringWithAggregatesFilter value) =
      UserScalarWhereWithAggregatesInput_name_withStringWithAggregatesFilter;

  const factory UserScalarWhereWithAggregatesInput_name.withString(
      String value) = UserScalarWhereWithAggregatesInput_name_withString;

  factory UserScalarWhereWithAggregatesInput_name.fromJson(
          Map<String, dynamic> json) =>
      _$UserScalarWhereWithAggregatesInput_nameFromJson(json);
}

@freezed
class UserScalarWhereWithAggregatesInput_createdAt
    with _$UserScalarWhereWithAggregatesInput_createdAt
    implements _i1.JsonSerializable {
  const factory UserScalarWhereWithAggregatesInput_createdAt.withDateTimeWithAggregatesFilter(
          DateTimeWithAggregatesFilter value) =
      UserScalarWhereWithAggregatesInput_createdAt_withDateTimeWithAggregatesFilter;

  const factory UserScalarWhereWithAggregatesInput_createdAt.withDateTime(
          @JsonKey(toJson: dateTimeToJson) DateTime value) =
      UserScalarWhereWithAggregatesInput_createdAt_withDateTime;

  factory UserScalarWhereWithAggregatesInput_createdAt.fromJson(
          Map<String, dynamic> json) =>
      _$UserScalarWhereWithAggregatesInput_createdAtFromJson(json);
}

@freezed
class UserScalarWhereWithAggregatesInput
    with _$UserScalarWhereWithAggregatesInput
    implements _i1.JsonSerializable {
  factory UserScalarWhereWithAggregatesInput.fromJson(
          Map<String, dynamic> json) =>
      _$UserScalarWhereWithAggregatesInputFromJson(json);

  const factory UserScalarWhereWithAggregatesInput({
    @JsonKey(name: 'AND') UserScalarWhereWithAggregatesInput_AND? AND,
    @JsonKey(name: 'OR')
        _i1.PrismaNullable<List<UserScalarWhereWithAggregatesInput>> OR,
    @JsonKey(name: 'NOT') UserScalarWhereWithAggregatesInput_NOT? NOT,
    @JsonKey(name: 'id') UserScalarWhereWithAggregatesInput_id? id,
    @JsonKey(name: 'name') UserScalarWhereWithAggregatesInput_name? name,
    @JsonKey(name: 'createdAt')
        UserScalarWhereWithAggregatesInput_createdAt? createdAt,
  }) = _UserScalarWhereWithAggregatesInput;
}

@freezed
class UserCreateInput with _$UserCreateInput implements _i1.JsonSerializable {
  factory UserCreateInput.fromJson(Map<String, dynamic> json) =>
      _$UserCreateInputFromJson(json);

  const factory UserCreateInput({
    @JsonKey(name: 'name')
        required String name,
    @JsonKey(
      name: 'createdAt',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> createdAt,
  }) = _UserCreateInput;
}

@freezed
class UserUncheckedCreateInput
    with _$UserUncheckedCreateInput
    implements _i1.JsonSerializable {
  factory UserUncheckedCreateInput.fromJson(Map<String, dynamic> json) =>
      _$UserUncheckedCreateInputFromJson(json);

  const factory UserUncheckedCreateInput({
    @JsonKey(name: 'id')
        _i1.PrismaNullable<int> id,
    @JsonKey(name: 'name')
        required String name,
    @JsonKey(
      name: 'createdAt',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> createdAt,
  }) = _UserUncheckedCreateInput;
}

@freezed
class UserUpdateInput_name
    with _$UserUpdateInput_name
    implements _i1.JsonSerializable {
  const factory UserUpdateInput_name.withString(String value) =
      UserUpdateInput_name_withString;

  const factory UserUpdateInput_name.withStringFieldUpdateOperationsInput(
          StringFieldUpdateOperationsInput value) =
      UserUpdateInput_name_withStringFieldUpdateOperationsInput;

  factory UserUpdateInput_name.fromJson(Map<String, dynamic> json) =>
      _$UserUpdateInput_nameFromJson(json);
}

@freezed
class UserUpdateInput_createdAt
    with _$UserUpdateInput_createdAt
    implements _i1.JsonSerializable {
  const factory UserUpdateInput_createdAt.withDateTime(
          @JsonKey(toJson: dateTimeToJson) DateTime value) =
      UserUpdateInput_createdAt_withDateTime;

  const factory UserUpdateInput_createdAt.withDateTimeFieldUpdateOperationsInput(
          DateTimeFieldUpdateOperationsInput value) =
      UserUpdateInput_createdAt_withDateTimeFieldUpdateOperationsInput;

  factory UserUpdateInput_createdAt.fromJson(Map<String, dynamic> json) =>
      _$UserUpdateInput_createdAtFromJson(json);
}

@freezed
class UserUpdateInput with _$UserUpdateInput implements _i1.JsonSerializable {
  factory UserUpdateInput.fromJson(Map<String, dynamic> json) =>
      _$UserUpdateInputFromJson(json);

  const factory UserUpdateInput({
    @JsonKey(name: 'name') UserUpdateInput_name? name,
    @JsonKey(name: 'createdAt') UserUpdateInput_createdAt? createdAt,
  }) = _UserUpdateInput;
}

@freezed
class UserUncheckedUpdateInput_id
    with _$UserUncheckedUpdateInput_id
    implements _i1.JsonSerializable {
  const factory UserUncheckedUpdateInput_id.withInt(int value) =
      UserUncheckedUpdateInput_id_withInt;

  const factory UserUncheckedUpdateInput_id.withIntFieldUpdateOperationsInput(
          IntFieldUpdateOperationsInput value) =
      UserUncheckedUpdateInput_id_withIntFieldUpdateOperationsInput;

  factory UserUncheckedUpdateInput_id.fromJson(Map<String, dynamic> json) =>
      _$UserUncheckedUpdateInput_idFromJson(json);
}

@freezed
class UserUncheckedUpdateInput_name
    with _$UserUncheckedUpdateInput_name
    implements _i1.JsonSerializable {
  const factory UserUncheckedUpdateInput_name.withString(String value) =
      UserUncheckedUpdateInput_name_withString;

  const factory UserUncheckedUpdateInput_name.withStringFieldUpdateOperationsInput(
          StringFieldUpdateOperationsInput value) =
      UserUncheckedUpdateInput_name_withStringFieldUpdateOperationsInput;

  factory UserUncheckedUpdateInput_name.fromJson(Map<String, dynamic> json) =>
      _$UserUncheckedUpdateInput_nameFromJson(json);
}

@freezed
class UserUncheckedUpdateInput_createdAt
    with _$UserUncheckedUpdateInput_createdAt
    implements _i1.JsonSerializable {
  const factory UserUncheckedUpdateInput_createdAt.withDateTime(
          @JsonKey(toJson: dateTimeToJson) DateTime value) =
      UserUncheckedUpdateInput_createdAt_withDateTime;

  const factory UserUncheckedUpdateInput_createdAt.withDateTimeFieldUpdateOperationsInput(
          DateTimeFieldUpdateOperationsInput value) =
      UserUncheckedUpdateInput_createdAt_withDateTimeFieldUpdateOperationsInput;

  factory UserUncheckedUpdateInput_createdAt.fromJson(
          Map<String, dynamic> json) =>
      _$UserUncheckedUpdateInput_createdAtFromJson(json);
}

@freezed
class UserUncheckedUpdateInput
    with _$UserUncheckedUpdateInput
    implements _i1.JsonSerializable {
  factory UserUncheckedUpdateInput.fromJson(Map<String, dynamic> json) =>
      _$UserUncheckedUpdateInputFromJson(json);

  const factory UserUncheckedUpdateInput({
    @JsonKey(name: 'id') UserUncheckedUpdateInput_id? id,
    @JsonKey(name: 'name') UserUncheckedUpdateInput_name? name,
    @JsonKey(name: 'createdAt') UserUncheckedUpdateInput_createdAt? createdAt,
  }) = _UserUncheckedUpdateInput;
}

@freezed
class UserCreateManyInput
    with _$UserCreateManyInput
    implements _i1.JsonSerializable {
  factory UserCreateManyInput.fromJson(Map<String, dynamic> json) =>
      _$UserCreateManyInputFromJson(json);

  const factory UserCreateManyInput({
    @JsonKey(name: 'id')
        _i1.PrismaNullable<int> id,
    @JsonKey(name: 'name')
        required String name,
    @JsonKey(
      name: 'createdAt',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> createdAt,
  }) = _UserCreateManyInput;
}

@freezed
class UserUpdateManyMutationInput_name
    with _$UserUpdateManyMutationInput_name
    implements _i1.JsonSerializable {
  const factory UserUpdateManyMutationInput_name.withString(String value) =
      UserUpdateManyMutationInput_name_withString;

  const factory UserUpdateManyMutationInput_name.withStringFieldUpdateOperationsInput(
          StringFieldUpdateOperationsInput value) =
      UserUpdateManyMutationInput_name_withStringFieldUpdateOperationsInput;

  factory UserUpdateManyMutationInput_name.fromJson(
          Map<String, dynamic> json) =>
      _$UserUpdateManyMutationInput_nameFromJson(json);
}

@freezed
class UserUpdateManyMutationInput_createdAt
    with _$UserUpdateManyMutationInput_createdAt
    implements _i1.JsonSerializable {
  const factory UserUpdateManyMutationInput_createdAt.withDateTime(
          @JsonKey(toJson: dateTimeToJson) DateTime value) =
      UserUpdateManyMutationInput_createdAt_withDateTime;

  const factory UserUpdateManyMutationInput_createdAt.withDateTimeFieldUpdateOperationsInput(
          DateTimeFieldUpdateOperationsInput value) =
      UserUpdateManyMutationInput_createdAt_withDateTimeFieldUpdateOperationsInput;

  factory UserUpdateManyMutationInput_createdAt.fromJson(
          Map<String, dynamic> json) =>
      _$UserUpdateManyMutationInput_createdAtFromJson(json);
}

@freezed
class UserUpdateManyMutationInput
    with _$UserUpdateManyMutationInput
    implements _i1.JsonSerializable {
  factory UserUpdateManyMutationInput.fromJson(Map<String, dynamic> json) =>
      _$UserUpdateManyMutationInputFromJson(json);

  const factory UserUpdateManyMutationInput({
    @JsonKey(name: 'name') UserUpdateManyMutationInput_name? name,
    @JsonKey(name: 'createdAt')
        UserUpdateManyMutationInput_createdAt? createdAt,
  }) = _UserUpdateManyMutationInput;
}

@freezed
class UserUncheckedUpdateManyInput_id
    with _$UserUncheckedUpdateManyInput_id
    implements _i1.JsonSerializable {
  const factory UserUncheckedUpdateManyInput_id.withInt(int value) =
      UserUncheckedUpdateManyInput_id_withInt;

  const factory UserUncheckedUpdateManyInput_id.withIntFieldUpdateOperationsInput(
          IntFieldUpdateOperationsInput value) =
      UserUncheckedUpdateManyInput_id_withIntFieldUpdateOperationsInput;

  factory UserUncheckedUpdateManyInput_id.fromJson(Map<String, dynamic> json) =>
      _$UserUncheckedUpdateManyInput_idFromJson(json);
}

@freezed
class UserUncheckedUpdateManyInput_name
    with _$UserUncheckedUpdateManyInput_name
    implements _i1.JsonSerializable {
  const factory UserUncheckedUpdateManyInput_name.withString(String value) =
      UserUncheckedUpdateManyInput_name_withString;

  const factory UserUncheckedUpdateManyInput_name.withStringFieldUpdateOperationsInput(
          StringFieldUpdateOperationsInput value) =
      UserUncheckedUpdateManyInput_name_withStringFieldUpdateOperationsInput;

  factory UserUncheckedUpdateManyInput_name.fromJson(
          Map<String, dynamic> json) =>
      _$UserUncheckedUpdateManyInput_nameFromJson(json);
}

@freezed
class UserUncheckedUpdateManyInput_createdAt
    with _$UserUncheckedUpdateManyInput_createdAt
    implements _i1.JsonSerializable {
  const factory UserUncheckedUpdateManyInput_createdAt.withDateTime(
          @JsonKey(toJson: dateTimeToJson) DateTime value) =
      UserUncheckedUpdateManyInput_createdAt_withDateTime;

  const factory UserUncheckedUpdateManyInput_createdAt.withDateTimeFieldUpdateOperationsInput(
          DateTimeFieldUpdateOperationsInput value) =
      UserUncheckedUpdateManyInput_createdAt_withDateTimeFieldUpdateOperationsInput;

  factory UserUncheckedUpdateManyInput_createdAt.fromJson(
          Map<String, dynamic> json) =>
      _$UserUncheckedUpdateManyInput_createdAtFromJson(json);
}

@freezed
class UserUncheckedUpdateManyInput
    with _$UserUncheckedUpdateManyInput
    implements _i1.JsonSerializable {
  factory UserUncheckedUpdateManyInput.fromJson(Map<String, dynamic> json) =>
      _$UserUncheckedUpdateManyInputFromJson(json);

  const factory UserUncheckedUpdateManyInput({
    @JsonKey(name: 'id') UserUncheckedUpdateManyInput_id? id,
    @JsonKey(name: 'name') UserUncheckedUpdateManyInput_name? name,
    @JsonKey(name: 'createdAt')
        UserUncheckedUpdateManyInput_createdAt? createdAt,
  }) = _UserUncheckedUpdateManyInput;
}

@freezed
class IntFilter_not with _$IntFilter_not implements _i1.JsonSerializable {
  const factory IntFilter_not.withInt(int value) = IntFilter_not_withInt;

  const factory IntFilter_not.withNestedIntFilter(NestedIntFilter value) =
      IntFilter_not_withNestedIntFilter;

  factory IntFilter_not.fromJson(Map<String, dynamic> json) =>
      _$IntFilter_notFromJson(json);
}

@freezed
class IntFilter with _$IntFilter implements _i1.JsonSerializable {
  factory IntFilter.fromJson(Map<String, dynamic> json) =>
      _$IntFilterFromJson(json);

  const factory IntFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<int> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<int>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<int>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<int> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<int> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<int> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<int> gte,
    @JsonKey(name: 'not') IntFilter_not? not,
  }) = _IntFilter;
}

@freezed
class StringFilter_not with _$StringFilter_not implements _i1.JsonSerializable {
  const factory StringFilter_not.withString(String value) =
      StringFilter_not_withString;

  const factory StringFilter_not.withNestedStringFilter(
      NestedStringFilter value) = StringFilter_not_withNestedStringFilter;

  factory StringFilter_not.fromJson(Map<String, dynamic> json) =>
      _$StringFilter_notFromJson(json);
}

@freezed
class StringFilter with _$StringFilter implements _i1.JsonSerializable {
  factory StringFilter.fromJson(Map<String, dynamic> json) =>
      _$StringFilterFromJson(json);

  const factory StringFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<String> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<String>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<String>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<String> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<String> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<String> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<String> gte,
    @JsonKey(name: 'contains') _i1.PrismaNullable<String> contains,
    @JsonKey(name: 'startsWith') _i1.PrismaNullable<String> startsWith,
    @JsonKey(name: 'endsWith') _i1.PrismaNullable<String> endsWith,
    @JsonKey(name: 'mode') _i1.PrismaNullable<QueryMode> mode,
    @JsonKey(name: 'not') StringFilter_not? not,
  }) = _StringFilter;
}

@freezed
class DateTimeFilter_not
    with _$DateTimeFilter_not
    implements _i1.JsonSerializable {
  const factory DateTimeFilter_not.withDateTime(
          @JsonKey(toJson: dateTimeToJson) DateTime value) =
      DateTimeFilter_not_withDateTime;

  const factory DateTimeFilter_not.withNestedDateTimeFilter(
      NestedDateTimeFilter value) = DateTimeFilter_not_withNestedDateTimeFilter;

  factory DateTimeFilter_not.fromJson(Map<String, dynamic> json) =>
      _$DateTimeFilter_notFromJson(json);
}

@freezed
class DateTimeFilter with _$DateTimeFilter implements _i1.JsonSerializable {
  factory DateTimeFilter.fromJson(Map<String, dynamic> json) =>
      _$DateTimeFilterFromJson(json);

  const factory DateTimeFilter({
    @JsonKey(
      name: 'equals',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> equals,
    @JsonKey(
      name: 'in',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<List<DateTime>> dart__in,
    @JsonKey(
      name: 'notIn',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<List<DateTime>> notIn,
    @JsonKey(
      name: 'lt',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> lt,
    @JsonKey(
      name: 'lte',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> lte,
    @JsonKey(
      name: 'gt',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> gt,
    @JsonKey(
      name: 'gte',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> gte,
    @JsonKey(name: 'not')
        DateTimeFilter_not? not,
  }) = _DateTimeFilter;
}

@freezed
class UserCountOrderByAggregateInput
    with _$UserCountOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory UserCountOrderByAggregateInput.fromJson(Map<String, dynamic> json) =>
      _$UserCountOrderByAggregateInputFromJson(json);

  const factory UserCountOrderByAggregateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'name') _i1.PrismaNullable<SortOrder> name,
    @JsonKey(name: 'createdAt') _i1.PrismaNullable<SortOrder> createdAt,
  }) = _UserCountOrderByAggregateInput;
}

@freezed
class UserAvgOrderByAggregateInput
    with _$UserAvgOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory UserAvgOrderByAggregateInput.fromJson(Map<String, dynamic> json) =>
      _$UserAvgOrderByAggregateInputFromJson(json);

  const factory UserAvgOrderByAggregateInput(
          {@JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id}) =
      _UserAvgOrderByAggregateInput;
}

@freezed
class UserMaxOrderByAggregateInput
    with _$UserMaxOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory UserMaxOrderByAggregateInput.fromJson(Map<String, dynamic> json) =>
      _$UserMaxOrderByAggregateInputFromJson(json);

  const factory UserMaxOrderByAggregateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'name') _i1.PrismaNullable<SortOrder> name,
    @JsonKey(name: 'createdAt') _i1.PrismaNullable<SortOrder> createdAt,
  }) = _UserMaxOrderByAggregateInput;
}

@freezed
class UserMinOrderByAggregateInput
    with _$UserMinOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory UserMinOrderByAggregateInput.fromJson(Map<String, dynamic> json) =>
      _$UserMinOrderByAggregateInputFromJson(json);

  const factory UserMinOrderByAggregateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'name') _i1.PrismaNullable<SortOrder> name,
    @JsonKey(name: 'createdAt') _i1.PrismaNullable<SortOrder> createdAt,
  }) = _UserMinOrderByAggregateInput;
}

@freezed
class UserSumOrderByAggregateInput
    with _$UserSumOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory UserSumOrderByAggregateInput.fromJson(Map<String, dynamic> json) =>
      _$UserSumOrderByAggregateInputFromJson(json);

  const factory UserSumOrderByAggregateInput(
          {@JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id}) =
      _UserSumOrderByAggregateInput;
}

@freezed
class IntWithAggregatesFilter_not
    with _$IntWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory IntWithAggregatesFilter_not.withInt(int value) =
      IntWithAggregatesFilter_not_withInt;

  const factory IntWithAggregatesFilter_not.withNestedIntWithAggregatesFilter(
          NestedIntWithAggregatesFilter value) =
      IntWithAggregatesFilter_not_withNestedIntWithAggregatesFilter;

  factory IntWithAggregatesFilter_not.fromJson(Map<String, dynamic> json) =>
      _$IntWithAggregatesFilter_notFromJson(json);
}

@freezed
class IntWithAggregatesFilter
    with _$IntWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory IntWithAggregatesFilter.fromJson(Map<String, dynamic> json) =>
      _$IntWithAggregatesFilterFromJson(json);

  const factory IntWithAggregatesFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<int> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<int>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<int>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<int> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<int> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<int> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<int> gte,
    @JsonKey(name: 'not') IntWithAggregatesFilter_not? not,
    @JsonKey(name: '_count') _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_avg') _i1.PrismaNullable<NestedFloatFilter> prisma__avg,
    @JsonKey(name: '_sum') _i1.PrismaNullable<NestedIntFilter> prisma__sum,
    @JsonKey(name: '_min') _i1.PrismaNullable<NestedIntFilter> prisma__min,
    @JsonKey(name: '_max') _i1.PrismaNullable<NestedIntFilter> prisma__max,
  }) = _IntWithAggregatesFilter;
}

@freezed
class StringWithAggregatesFilter_not
    with _$StringWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory StringWithAggregatesFilter_not.withString(String value) =
      StringWithAggregatesFilter_not_withString;

  const factory StringWithAggregatesFilter_not.withNestedStringWithAggregatesFilter(
          NestedStringWithAggregatesFilter value) =
      StringWithAggregatesFilter_not_withNestedStringWithAggregatesFilter;

  factory StringWithAggregatesFilter_not.fromJson(Map<String, dynamic> json) =>
      _$StringWithAggregatesFilter_notFromJson(json);
}

@freezed
class StringWithAggregatesFilter
    with _$StringWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory StringWithAggregatesFilter.fromJson(Map<String, dynamic> json) =>
      _$StringWithAggregatesFilterFromJson(json);

  const factory StringWithAggregatesFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<String> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<String>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<String>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<String> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<String> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<String> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<String> gte,
    @JsonKey(name: 'contains') _i1.PrismaNullable<String> contains,
    @JsonKey(name: 'startsWith') _i1.PrismaNullable<String> startsWith,
    @JsonKey(name: 'endsWith') _i1.PrismaNullable<String> endsWith,
    @JsonKey(name: 'mode') _i1.PrismaNullable<QueryMode> mode,
    @JsonKey(name: 'not') StringWithAggregatesFilter_not? not,
    @JsonKey(name: '_count') _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_min') _i1.PrismaNullable<NestedStringFilter> prisma__min,
    @JsonKey(name: '_max') _i1.PrismaNullable<NestedStringFilter> prisma__max,
  }) = _StringWithAggregatesFilter;
}

@freezed
class DateTimeWithAggregatesFilter_not
    with _$DateTimeWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory DateTimeWithAggregatesFilter_not.withDateTime(
          @JsonKey(toJson: dateTimeToJson) DateTime value) =
      DateTimeWithAggregatesFilter_not_withDateTime;

  const factory DateTimeWithAggregatesFilter_not.withNestedDateTimeWithAggregatesFilter(
          NestedDateTimeWithAggregatesFilter value) =
      DateTimeWithAggregatesFilter_not_withNestedDateTimeWithAggregatesFilter;

  factory DateTimeWithAggregatesFilter_not.fromJson(
          Map<String, dynamic> json) =>
      _$DateTimeWithAggregatesFilter_notFromJson(json);
}

@freezed
class DateTimeWithAggregatesFilter
    with _$DateTimeWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory DateTimeWithAggregatesFilter.fromJson(Map<String, dynamic> json) =>
      _$DateTimeWithAggregatesFilterFromJson(json);

  const factory DateTimeWithAggregatesFilter({
    @JsonKey(
      name: 'equals',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> equals,
    @JsonKey(
      name: 'in',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<List<DateTime>> dart__in,
    @JsonKey(
      name: 'notIn',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<List<DateTime>> notIn,
    @JsonKey(
      name: 'lt',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> lt,
    @JsonKey(
      name: 'lte',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> lte,
    @JsonKey(
      name: 'gt',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> gt,
    @JsonKey(
      name: 'gte',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> gte,
    @JsonKey(name: 'not')
        DateTimeWithAggregatesFilter_not? not,
    @JsonKey(name: '_count')
        _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_min')
        _i1.PrismaNullable<NestedDateTimeFilter> prisma__min,
    @JsonKey(name: '_max')
        _i1.PrismaNullable<NestedDateTimeFilter> prisma__max,
  }) = _DateTimeWithAggregatesFilter;
}

@freezed
class StringFieldUpdateOperationsInput
    with _$StringFieldUpdateOperationsInput
    implements _i1.JsonSerializable {
  factory StringFieldUpdateOperationsInput.fromJson(
          Map<String, dynamic> json) =>
      _$StringFieldUpdateOperationsInputFromJson(json);

  const factory StringFieldUpdateOperationsInput(
          {@JsonKey(name: 'set') _i1.PrismaNullable<String> dart__set}) =
      _StringFieldUpdateOperationsInput;
}

@freezed
class DateTimeFieldUpdateOperationsInput
    with _$DateTimeFieldUpdateOperationsInput
    implements _i1.JsonSerializable {
  factory DateTimeFieldUpdateOperationsInput.fromJson(
          Map<String, dynamic> json) =>
      _$DateTimeFieldUpdateOperationsInputFromJson(json);

  const factory DateTimeFieldUpdateOperationsInput(
          {@JsonKey(
            name: 'set',
            toJson: dateTimeToJson,
          )
              _i1.PrismaNullable<DateTime> dart__set}) =
      _DateTimeFieldUpdateOperationsInput;
}

@freezed
class IntFieldUpdateOperationsInput
    with _$IntFieldUpdateOperationsInput
    implements _i1.JsonSerializable {
  factory IntFieldUpdateOperationsInput.fromJson(Map<String, dynamic> json) =>
      _$IntFieldUpdateOperationsInputFromJson(json);

  const factory IntFieldUpdateOperationsInput({
    @JsonKey(name: 'set') _i1.PrismaNullable<int> dart__set,
    @JsonKey(name: 'increment') _i1.PrismaNullable<int> increment,
    @JsonKey(name: 'decrement') _i1.PrismaNullable<int> decrement,
    @JsonKey(name: 'multiply') _i1.PrismaNullable<int> multiply,
    @JsonKey(name: 'divide') _i1.PrismaNullable<int> divide,
  }) = _IntFieldUpdateOperationsInput;
}

@freezed
class NestedIntFilter_not
    with _$NestedIntFilter_not
    implements _i1.JsonSerializable {
  const factory NestedIntFilter_not.withInt(int value) =
      NestedIntFilter_not_withInt;

  const factory NestedIntFilter_not.withNestedIntFilter(NestedIntFilter value) =
      NestedIntFilter_not_withNestedIntFilter;

  factory NestedIntFilter_not.fromJson(Map<String, dynamic> json) =>
      _$NestedIntFilter_notFromJson(json);
}

@freezed
class NestedIntFilter with _$NestedIntFilter implements _i1.JsonSerializable {
  factory NestedIntFilter.fromJson(Map<String, dynamic> json) =>
      _$NestedIntFilterFromJson(json);

  const factory NestedIntFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<int> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<int>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<int>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<int> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<int> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<int> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<int> gte,
    @JsonKey(name: 'not') NestedIntFilter_not? not,
  }) = _NestedIntFilter;
}

@freezed
class NestedStringFilter_not
    with _$NestedStringFilter_not
    implements _i1.JsonSerializable {
  const factory NestedStringFilter_not.withString(String value) =
      NestedStringFilter_not_withString;

  const factory NestedStringFilter_not.withNestedStringFilter(
      NestedStringFilter value) = NestedStringFilter_not_withNestedStringFilter;

  factory NestedStringFilter_not.fromJson(Map<String, dynamic> json) =>
      _$NestedStringFilter_notFromJson(json);
}

@freezed
class NestedStringFilter
    with _$NestedStringFilter
    implements _i1.JsonSerializable {
  factory NestedStringFilter.fromJson(Map<String, dynamic> json) =>
      _$NestedStringFilterFromJson(json);

  const factory NestedStringFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<String> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<String>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<String>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<String> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<String> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<String> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<String> gte,
    @JsonKey(name: 'contains') _i1.PrismaNullable<String> contains,
    @JsonKey(name: 'startsWith') _i1.PrismaNullable<String> startsWith,
    @JsonKey(name: 'endsWith') _i1.PrismaNullable<String> endsWith,
    @JsonKey(name: 'not') NestedStringFilter_not? not,
  }) = _NestedStringFilter;
}

@freezed
class NestedDateTimeFilter_not
    with _$NestedDateTimeFilter_not
    implements _i1.JsonSerializable {
  const factory NestedDateTimeFilter_not.withDateTime(
          @JsonKey(toJson: dateTimeToJson) DateTime value) =
      NestedDateTimeFilter_not_withDateTime;

  const factory NestedDateTimeFilter_not.withNestedDateTimeFilter(
          NestedDateTimeFilter value) =
      NestedDateTimeFilter_not_withNestedDateTimeFilter;

  factory NestedDateTimeFilter_not.fromJson(Map<String, dynamic> json) =>
      _$NestedDateTimeFilter_notFromJson(json);
}

@freezed
class NestedDateTimeFilter
    with _$NestedDateTimeFilter
    implements _i1.JsonSerializable {
  factory NestedDateTimeFilter.fromJson(Map<String, dynamic> json) =>
      _$NestedDateTimeFilterFromJson(json);

  const factory NestedDateTimeFilter({
    @JsonKey(
      name: 'equals',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> equals,
    @JsonKey(
      name: 'in',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<List<DateTime>> dart__in,
    @JsonKey(
      name: 'notIn',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<List<DateTime>> notIn,
    @JsonKey(
      name: 'lt',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> lt,
    @JsonKey(
      name: 'lte',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> lte,
    @JsonKey(
      name: 'gt',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> gt,
    @JsonKey(
      name: 'gte',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> gte,
    @JsonKey(name: 'not')
        NestedDateTimeFilter_not? not,
  }) = _NestedDateTimeFilter;
}

@freezed
class NestedIntWithAggregatesFilter_not
    with _$NestedIntWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory NestedIntWithAggregatesFilter_not.withInt(int value) =
      NestedIntWithAggregatesFilter_not_withInt;

  const factory NestedIntWithAggregatesFilter_not.withNestedIntWithAggregatesFilter(
          NestedIntWithAggregatesFilter value) =
      NestedIntWithAggregatesFilter_not_withNestedIntWithAggregatesFilter;

  factory NestedIntWithAggregatesFilter_not.fromJson(
          Map<String, dynamic> json) =>
      _$NestedIntWithAggregatesFilter_notFromJson(json);
}

@freezed
class NestedIntWithAggregatesFilter
    with _$NestedIntWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory NestedIntWithAggregatesFilter.fromJson(Map<String, dynamic> json) =>
      _$NestedIntWithAggregatesFilterFromJson(json);

  const factory NestedIntWithAggregatesFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<int> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<int>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<int>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<int> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<int> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<int> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<int> gte,
    @JsonKey(name: 'not') NestedIntWithAggregatesFilter_not? not,
    @JsonKey(name: '_count') _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_avg') _i1.PrismaNullable<NestedFloatFilter> prisma__avg,
    @JsonKey(name: '_sum') _i1.PrismaNullable<NestedIntFilter> prisma__sum,
    @JsonKey(name: '_min') _i1.PrismaNullable<NestedIntFilter> prisma__min,
    @JsonKey(name: '_max') _i1.PrismaNullable<NestedIntFilter> prisma__max,
  }) = _NestedIntWithAggregatesFilter;
}

@freezed
class NestedFloatFilter_not
    with _$NestedFloatFilter_not
    implements _i1.JsonSerializable {
  const factory NestedFloatFilter_not.withFloat(double value) =
      NestedFloatFilter_not_withFloat;

  const factory NestedFloatFilter_not.withNestedFloatFilter(
      NestedFloatFilter value) = NestedFloatFilter_not_withNestedFloatFilter;

  factory NestedFloatFilter_not.fromJson(Map<String, dynamic> json) =>
      _$NestedFloatFilter_notFromJson(json);
}

@freezed
class NestedFloatFilter
    with _$NestedFloatFilter
    implements _i1.JsonSerializable {
  factory NestedFloatFilter.fromJson(Map<String, dynamic> json) =>
      _$NestedFloatFilterFromJson(json);

  const factory NestedFloatFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<double> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<double>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<double>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<double> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<double> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<double> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<double> gte,
    @JsonKey(name: 'not') NestedFloatFilter_not? not,
  }) = _NestedFloatFilter;
}

@freezed
class NestedStringWithAggregatesFilter_not
    with _$NestedStringWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory NestedStringWithAggregatesFilter_not.withString(String value) =
      NestedStringWithAggregatesFilter_not_withString;

  const factory NestedStringWithAggregatesFilter_not.withNestedStringWithAggregatesFilter(
          NestedStringWithAggregatesFilter value) =
      NestedStringWithAggregatesFilter_not_withNestedStringWithAggregatesFilter;

  factory NestedStringWithAggregatesFilter_not.fromJson(
          Map<String, dynamic> json) =>
      _$NestedStringWithAggregatesFilter_notFromJson(json);
}

@freezed
class NestedStringWithAggregatesFilter
    with _$NestedStringWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory NestedStringWithAggregatesFilter.fromJson(
          Map<String, dynamic> json) =>
      _$NestedStringWithAggregatesFilterFromJson(json);

  const factory NestedStringWithAggregatesFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<String> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<String>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<String>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<String> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<String> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<String> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<String> gte,
    @JsonKey(name: 'contains') _i1.PrismaNullable<String> contains,
    @JsonKey(name: 'startsWith') _i1.PrismaNullable<String> startsWith,
    @JsonKey(name: 'endsWith') _i1.PrismaNullable<String> endsWith,
    @JsonKey(name: 'not') NestedStringWithAggregatesFilter_not? not,
    @JsonKey(name: '_count') _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_min') _i1.PrismaNullable<NestedStringFilter> prisma__min,
    @JsonKey(name: '_max') _i1.PrismaNullable<NestedStringFilter> prisma__max,
  }) = _NestedStringWithAggregatesFilter;
}

@freezed
class NestedDateTimeWithAggregatesFilter_not
    with _$NestedDateTimeWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory NestedDateTimeWithAggregatesFilter_not.withDateTime(
          @JsonKey(toJson: dateTimeToJson) DateTime value) =
      NestedDateTimeWithAggregatesFilter_not_withDateTime;

  const factory NestedDateTimeWithAggregatesFilter_not.withNestedDateTimeWithAggregatesFilter(
          NestedDateTimeWithAggregatesFilter value) =
      NestedDateTimeWithAggregatesFilter_not_withNestedDateTimeWithAggregatesFilter;

  factory NestedDateTimeWithAggregatesFilter_not.fromJson(
          Map<String, dynamic> json) =>
      _$NestedDateTimeWithAggregatesFilter_notFromJson(json);
}

@freezed
class NestedDateTimeWithAggregatesFilter
    with _$NestedDateTimeWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory NestedDateTimeWithAggregatesFilter.fromJson(
          Map<String, dynamic> json) =>
      _$NestedDateTimeWithAggregatesFilterFromJson(json);

  const factory NestedDateTimeWithAggregatesFilter({
    @JsonKey(
      name: 'equals',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> equals,
    @JsonKey(
      name: 'in',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<List<DateTime>> dart__in,
    @JsonKey(
      name: 'notIn',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<List<DateTime>> notIn,
    @JsonKey(
      name: 'lt',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> lt,
    @JsonKey(
      name: 'lte',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> lte,
    @JsonKey(
      name: 'gt',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> gt,
    @JsonKey(
      name: 'gte',
      toJson: dateTimeToJson,
    )
        _i1.PrismaNullable<DateTime> gte,
    @JsonKey(name: 'not')
        NestedDateTimeWithAggregatesFilter_not? not,
    @JsonKey(name: '_count')
        _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_min')
        _i1.PrismaNullable<NestedDateTimeFilter> prisma__min,
    @JsonKey(name: '_max')
        _i1.PrismaNullable<NestedDateTimeFilter> prisma__max,
  }) = _NestedDateTimeWithAggregatesFilter;
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateUser implements _i1.JsonSerializable {
  const AggregateUser({
    this.prisma__count,
    this.prisma__avg,
    this.prisma__sum,
    this.prisma__min,
    this.prisma__max,
  });

  factory AggregateUser.fromJson(Map<String, dynamic> json) =>
      _$AggregateUserFromJson(json);

  @JsonKey(name: '_count')
  final _i1.PrismaNullable<UserCountAggregateOutputType> prisma__count;

  @JsonKey(name: '_avg')
  final _i1.PrismaNullable<UserAvgAggregateOutputType> prisma__avg;

  @JsonKey(name: '_sum')
  final _i1.PrismaNullable<UserSumAggregateOutputType> prisma__sum;

  @JsonKey(name: '_min')
  final _i1.PrismaNullable<UserMinAggregateOutputType> prisma__min;

  @JsonKey(name: '_max')
  final _i1.PrismaNullable<UserMaxAggregateOutputType> prisma__max;

  @override
  Map<String, dynamic> toJson() => _$AggregateUserToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserGroupByOutputType implements _i1.JsonSerializable {
  const UserGroupByOutputType({
    required this.id,
    required this.name,
    required this.createdAt,
    this.prisma__count,
    this.prisma__avg,
    this.prisma__sum,
    this.prisma__min,
    this.prisma__max,
  });

  factory UserGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserGroupByOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final int id;

  @JsonKey(name: 'name')
  final String name;

  @JsonKey(
    name: 'createdAt',
    toJson: dateTimeToJson,
  )
  final DateTime createdAt;

  @JsonKey(name: '_count')
  final _i1.PrismaNullable<UserCountAggregateOutputType> prisma__count;

  @JsonKey(name: '_avg')
  final _i1.PrismaNullable<UserAvgAggregateOutputType> prisma__avg;

  @JsonKey(name: '_sum')
  final _i1.PrismaNullable<UserSumAggregateOutputType> prisma__sum;

  @JsonKey(name: '_min')
  final _i1.PrismaNullable<UserMinAggregateOutputType> prisma__min;

  @JsonKey(name: '_max')
  final _i1.PrismaNullable<UserMaxAggregateOutputType> prisma__max;

  @override
  Map<String, dynamic> toJson() => _$UserGroupByOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AffectedRowsOutput implements _i1.JsonSerializable {
  const AffectedRowsOutput({required this.count});

  factory AffectedRowsOutput.fromJson(Map<String, dynamic> json) =>
      _$AffectedRowsOutputFromJson(json);

  @JsonKey(name: 'count')
  final int count;

  @override
  Map<String, dynamic> toJson() => _$AffectedRowsOutputToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserCountAggregateOutputType implements _i1.JsonSerializable {
  const UserCountAggregateOutputType({
    required this.id,
    required this.name,
    required this.createdAt,
    required this.prisma__all,
  });

  factory UserCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserCountAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final int id;

  @JsonKey(name: 'name')
  final int name;

  @JsonKey(name: 'createdAt')
  final int createdAt;

  @JsonKey(name: '_all')
  final int prisma__all;

  @override
  Map<String, dynamic> toJson() => _$UserCountAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserAvgAggregateOutputType implements _i1.JsonSerializable {
  const UserAvgAggregateOutputType({this.id});

  factory UserAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserAvgAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final _i1.PrismaNullable<double> id;

  @override
  Map<String, dynamic> toJson() => _$UserAvgAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserSumAggregateOutputType implements _i1.JsonSerializable {
  const UserSumAggregateOutputType({this.id});

  factory UserSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserSumAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final _i1.PrismaNullable<int> id;

  @override
  Map<String, dynamic> toJson() => _$UserSumAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserMinAggregateOutputType implements _i1.JsonSerializable {
  const UserMinAggregateOutputType({
    this.id,
    this.name,
    this.createdAt,
  });

  factory UserMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserMinAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final _i1.PrismaNullable<int> id;

  @JsonKey(name: 'name')
  final _i1.PrismaNullable<String> name;

  @JsonKey(
    name: 'createdAt',
    toJson: dateTimeToJson,
  )
  final _i1.PrismaNullable<DateTime> createdAt;

  @override
  Map<String, dynamic> toJson() => _$UserMinAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserMaxAggregateOutputType implements _i1.JsonSerializable {
  const UserMaxAggregateOutputType({
    this.id,
    this.name,
    this.createdAt,
  });

  factory UserMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserMaxAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final _i1.PrismaNullable<int> id;

  @JsonKey(name: 'name')
  final _i1.PrismaNullable<String> name;

  @JsonKey(
    name: 'createdAt',
    toJson: dateTimeToJson,
  )
  final _i1.PrismaNullable<DateTime> createdAt;

  @override
  Map<String, dynamic> toJson() => _$UserMaxAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class User implements _i1.JsonSerializable {
  const User({
    required this.id,
    required this.name,
    required this.createdAt,
  });

  factory User.fromJson(Map<String, dynamic> json) => _$UserFromJson(json);

  @JsonKey(name: 'id')
  final int id;

  @JsonKey(name: 'name')
  final String name;

  @JsonKey(
    name: 'createdAt',
    toJson: dateTimeToJson,
  )
  final DateTime createdAt;

  @override
  Map<String, dynamic> toJson() => _$UserToJson(this);
}

@freezed
class FindFirstUserOrderBy
    with _$FindFirstUserOrderBy
    implements _i1.JsonSerializable {
  const factory FindFirstUserOrderBy.withUserOrderByWithRelationInputList(
          List<UserOrderByWithRelationInput> value) =
      _FindFirstUserOrderByWithUserOrderByWithRelationInputList;

  const factory FindFirstUserOrderBy.withUserOrderByWithRelationInput(
          UserOrderByWithRelationInput value) =
      _FindFirstUserOrderByWithUserOrderByWithRelationInput;

  factory FindFirstUserOrderBy.fromJson(Map<String, dynamic> json) =>
      _$FindFirstUserOrderByFromJson(json);
}

@freezed
class FindFirstUserOrThrowOrderBy
    with _$FindFirstUserOrThrowOrderBy
    implements _i1.JsonSerializable {
  const factory FindFirstUserOrThrowOrderBy.withUserOrderByWithRelationInputList(
          List<UserOrderByWithRelationInput> value) =
      _FindFirstUserOrThrowOrderByWithUserOrderByWithRelationInputList;

  const factory FindFirstUserOrThrowOrderBy.withUserOrderByWithRelationInput(
          UserOrderByWithRelationInput value) =
      _FindFirstUserOrThrowOrderByWithUserOrderByWithRelationInput;

  factory FindFirstUserOrThrowOrderBy.fromJson(Map<String, dynamic> json) =>
      _$FindFirstUserOrThrowOrderByFromJson(json);
}

@freezed
class FindManyUserOrderBy
    with _$FindManyUserOrderBy
    implements _i1.JsonSerializable {
  const factory FindManyUserOrderBy.withUserOrderByWithRelationInputList(
          List<UserOrderByWithRelationInput> value) =
      _FindManyUserOrderByWithUserOrderByWithRelationInputList;

  const factory FindManyUserOrderBy.withUserOrderByWithRelationInput(
          UserOrderByWithRelationInput value) =
      _FindManyUserOrderByWithUserOrderByWithRelationInput;

  factory FindManyUserOrderBy.fromJson(Map<String, dynamic> json) =>
      _$FindManyUserOrderByFromJson(json);
}

@freezed
class CreateOneUserData
    with _$CreateOneUserData
    implements _i1.JsonSerializable {
  const factory CreateOneUserData.withUserCreateInput(UserCreateInput value) =
      _CreateOneUserDataWithUserCreateInput;

  const factory CreateOneUserData.withUserUncheckedCreateInput(
          UserUncheckedCreateInput value) =
      _CreateOneUserDataWithUserUncheckedCreateInput;

  factory CreateOneUserData.fromJson(Map<String, dynamic> json) =>
      _$CreateOneUserDataFromJson(json);
}

@freezed
class UpdateOneUserData
    with _$UpdateOneUserData
    implements _i1.JsonSerializable {
  const factory UpdateOneUserData.withUserUpdateInput(UserUpdateInput value) =
      _UpdateOneUserDataWithUserUpdateInput;

  const factory UpdateOneUserData.withUserUncheckedUpdateInput(
          UserUncheckedUpdateInput value) =
      _UpdateOneUserDataWithUserUncheckedUpdateInput;

  factory UpdateOneUserData.fromJson(Map<String, dynamic> json) =>
      _$UpdateOneUserDataFromJson(json);
}

@freezed
class UpdateManyUserData
    with _$UpdateManyUserData
    implements _i1.JsonSerializable {
  const factory UpdateManyUserData.withUserUpdateManyMutationInput(
          UserUpdateManyMutationInput value) =
      _UpdateManyUserDataWithUserUpdateManyMutationInput;

  const factory UpdateManyUserData.withUserUncheckedUpdateManyInput(
          UserUncheckedUpdateManyInput value) =
      _UpdateManyUserDataWithUserUncheckedUpdateManyInput;

  factory UpdateManyUserData.fromJson(Map<String, dynamic> json) =>
      _$UpdateManyUserDataFromJson(json);
}

@freezed
class UpsertOneUserCreate
    with _$UpsertOneUserCreate
    implements _i1.JsonSerializable {
  const factory UpsertOneUserCreate.withUserCreateInput(UserCreateInput value) =
      _UpsertOneUserCreateWithUserCreateInput;

  const factory UpsertOneUserCreate.withUserUncheckedCreateInput(
          UserUncheckedCreateInput value) =
      _UpsertOneUserCreateWithUserUncheckedCreateInput;

  factory UpsertOneUserCreate.fromJson(Map<String, dynamic> json) =>
      _$UpsertOneUserCreateFromJson(json);
}

@freezed
class UpsertOneUserUpdate
    with _$UpsertOneUserUpdate
    implements _i1.JsonSerializable {
  const factory UpsertOneUserUpdate.withUserUpdateInput(UserUpdateInput value) =
      _UpsertOneUserUpdateWithUserUpdateInput;

  const factory UpsertOneUserUpdate.withUserUncheckedUpdateInput(
          UserUncheckedUpdateInput value) =
      _UpsertOneUserUpdateWithUserUncheckedUpdateInput;

  factory UpsertOneUserUpdate.fromJson(Map<String, dynamic> json) =>
      _$UpsertOneUserUpdateFromJson(json);
}

@freezed
class AggregateUserOrderBy
    with _$AggregateUserOrderBy
    implements _i1.JsonSerializable {
  const factory AggregateUserOrderBy.withUserOrderByWithRelationInputList(
          List<UserOrderByWithRelationInput> value) =
      _AggregateUserOrderByWithUserOrderByWithRelationInputList;

  const factory AggregateUserOrderBy.withUserOrderByWithRelationInput(
          UserOrderByWithRelationInput value) =
      _AggregateUserOrderByWithUserOrderByWithRelationInput;

  factory AggregateUserOrderBy.fromJson(Map<String, dynamic> json) =>
      _$AggregateUserOrderByFromJson(json);
}

@freezed
class GroupByUserOrderBy
    with _$GroupByUserOrderBy
    implements _i1.JsonSerializable {
  const factory GroupByUserOrderBy.withUserOrderByWithAggregationInputList(
          List<UserOrderByWithAggregationInput> value) =
      _GroupByUserOrderByWithUserOrderByWithAggregationInputList;

  const factory GroupByUserOrderBy.withUserOrderByWithAggregationInput(
          UserOrderByWithAggregationInput value) =
      _GroupByUserOrderByWithUserOrderByWithAggregationInput;

  factory GroupByUserOrderBy.fromJson(Map<String, dynamic> json) =>
      _$GroupByUserOrderByFromJson(json);
}

@freezed
class GroupByUserBy with _$GroupByUserBy implements _i1.JsonSerializable {
  const factory GroupByUserBy.withUserScalarFieldEnumList(
          List<UserScalarFieldEnum> value) =
      _GroupByUserByWithUserScalarFieldEnumList;

  const factory GroupByUserBy.withUserScalarFieldEnum(
      UserScalarFieldEnum value) = _GroupByUserByWithUserScalarFieldEnum;

  factory GroupByUserBy.fromJson(Map<String, dynamic> json) =>
      _$GroupByUserByFromJson(json);
}

class UserDelegate {
  const UserDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<User>> findUnique(
      {required UserWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniqueUser'] == null
        ? null
        : User.fromJson((result.data['findUniqueUser'] as Map).cast());
  }

  Future<User> findUniqueOrThrow({required UserWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueUserOrThrow',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return User.fromJson((result.data['findUniqueUserOrThrow'] as Map).cast());
  }

  Future<_i1.PrismaNullable<User>> findFirst({
    _i1.PrismaNullable<UserWhereInput> where,
    FindFirstUserOrderBy? orderBy,
    _i1.PrismaNullable<UserWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<UserScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstUser'] == null
        ? null
        : User.fromJson((result.data['findFirstUser'] as Map).cast());
  }

  Future<User> findFirstOrThrow({
    _i1.PrismaNullable<UserWhereInput> where,
    FindFirstUserOrThrowOrderBy? orderBy,
    _i1.PrismaNullable<UserWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<UserScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstUserOrThrow',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return User.fromJson((result.data['findFirstUserOrThrow'] as Map).cast());
  }

  Future<List<User>> findMany({
    _i1.PrismaNullable<UserWhereInput> where,
    FindManyUserOrderBy? orderBy,
    _i1.PrismaNullable<UserWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<UserScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManyUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyUser'] as List)
        .whereType<Map>()
        .map((Map e) => User.fromJson(e.cast()))
        .toList();
  }

  Future<User> create({required CreateOneUserData data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOneUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return User.fromJson((result.data['createOneUser'] as Map).cast());
  }

  Future<AffectedRowsOutput> createMany({
    required List<UserCreateManyInput> data,
    _i1.PrismaNullable<bool> skipDuplicates,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createManyUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'skipDuplicates',
              skipDuplicates,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['createManyUser'] as Map).cast());
  }

  Future<_i1.PrismaNullable<User>> update({
    required UpdateOneUserData data,
    required UserWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOneUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOneUser'] == null
        ? null
        : User.fromJson((result.data['updateOneUser'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required UpdateManyUserData data,
    _i1.PrismaNullable<UserWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManyUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyUser'] as Map).cast());
  }

  Future<User> upsert({
    required UserWhereUniqueInput where,
    required UpsertOneUserCreate create,
    required UpsertOneUserUpdate update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOneUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return User.fromJson((result.data['upsertOneUser'] as Map).cast());
  }

  Future<_i1.PrismaNullable<User>> delete(
      {required UserWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOneUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOneUser'] == null
        ? null
        : User.fromJson((result.data['deleteOneUser'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<UserWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManyUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyUser'] as Map).cast());
  }

  Future<AggregateUser> aggregate({
    _i1.PrismaNullable<UserWhereInput> where,
    AggregateUserOrderBy? orderBy,
    _i1.PrismaNullable<UserWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregateUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateUser.fromJson((result.data['aggregateUser'] as Map).cast());
  }

  Future<List<UserGroupByOutputType>> groupBy({
    _i1.PrismaNullable<UserWhereInput> where,
    GroupByUserOrderBy? orderBy,
    required GroupByUserBy by,
    _i1.PrismaNullable<UserScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupByUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByUser'] as List)
        .whereType<Map>()
        .map((Map e) => UserGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

final environment = Future<_i2.PrismaEnvironment>(() async =>
    _i2.PrismaEnvironment(includePlatformEnvironment: true)
        .call(_i3.configurePrisma));
final _i4.Document dmmf = _i4.Document.fromJson(<String, dynamic>{
  'datamodel': {
    'models': [
      {
        'name': 'User',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'name',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'name',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'createdAt',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'DateTime',
            'default': {
              'name': 'now',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'createdAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'DateTime',
              'default': {
                'name': 'now',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'User',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'name',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'createdAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'DateTime',
              'default': {
                'name': 'now',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      }
    ],
    'enums': [],
    'types': [],
  },
  'schema': {
    'rootQueryType': null,
    'rootMutationType': null,
    'inputObjectTypes': {
      'model': null,
      'prisma': [
        {
          'name': 'UserWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'UserScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCreateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'mode',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'QueryMode',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'DateTimeFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'mode',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'QueryMode',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'DateTimeWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'DateTimeFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'increment',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'decrement',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'multiply',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'divide',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedDateTimeFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedFloatFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedDateTimeWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
    },
    'outputObjectTypes': {
      'model': [
        {
          'name': 'User',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        }
      ],
      'prisma': [
        {
          'name': 'Query',
          'fields': [
            {
              'name': 'findFirstUser',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstUserOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyUser',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregateUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateUser',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByUser',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'UserGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueUser',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueUserOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'Mutation',
          'fields': [
            {
              'name': 'createOneUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOneUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createManyUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserCreateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skipDuplicates',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Boolean',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOneUser',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOneUser',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'executeRaw',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Json',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [
                {
                  'name': 'query',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'String',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'parameters',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Json',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'queryRaw',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Json',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [
                {
                  'name': 'query',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'String',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'parameters',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Json',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateUser',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AffectedRowsOutput',
          'fields': [
            {
              'name': 'count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
    },
    'enumTypes': {
      'model': null,
      'prisma': [
        {
          'name': 'QueryMode',
          'values': [
            'default',
            'insensitive',
          ],
        },
        {
          'name': 'SortOrder',
          'values': [
            'asc',
            'desc',
          ],
        },
        {
          'name': 'TransactionIsolationLevel',
          'values': [
            'ReadUncommitted',
            'ReadCommitted',
            'RepeatableRead',
            'Serializable',
          ],
        },
        {
          'name': 'UserScalarFieldEnum',
          'values': [
            'id',
            'name',
            'createdAt',
          ],
        },
      ],
    },
  },
  'mappings': {
    'modelOperations': [
      {
        'model': 'User',
        'findUnique': 'findUniqueUser',
        'findUniqueOrThrow': 'findUniqueUserOrThrow',
        'findFirst': 'findFirstUser',
        'findFirstOrThrow': 'findFirstUserOrThrow',
        'findMany': 'findManyUser',
        'create': 'createOneUser',
        'createMany': 'createManyUser',
        'update': 'updateOneUser',
        'updateMany': 'updateManyUser',
        'upsert': 'upsertOneUser',
        'delete': 'deleteOneUser',
        'deleteMany': 'deleteManyUser',
        'aggregate': 'aggregateUser',
        'groupBy': 'groupByUser',
        'findRaw': null,
        'aggregateRaw': null,
      }
    ],
    'otherOperations': {
      'read': [],
      'write': [
        'executeRaw',
        'queryRaw',
      ],
    },
  },
});
final String schema = _i5.utf8.decode(_i5.base64.decode(
    r'Ly8gVGhpcyBpcyB5b3VyIFByaXNtYSBzY2hlbWEgZmlsZSwKLy8gbGVhcm4gbW9yZSBhYm91dCBpdCBpbiB0aGUgZG9jczogaHR0cHM6Ly9wcmlzLmx5L2QvcHJpc21hLXNjaGVtYQoKZ2VuZXJhdG9yIGNsaWVudCB7CiAgcHJvdmlkZXIgPSAicHJpc21hLWNsaWVudC1kYXJ0Igp9CgpkYXRhc291cmNlIGRiIHsKICBwcm92aWRlciA9ICJwb3N0Z3Jlc3FsIgogIHVybCAgICAgID0gZW52KCJEQVRBQkFTRV9VUkwiKQp9Cgptb2RlbCBVc2VyIHsKICBpZCAgICAgICAgSW50ICAgICAgQGlkIEBkZWZhdWx0KGF1dG9pbmNyZW1lbnQoKSkKICBuYW1lICAgICAgU3RyaW5nCiAgY3JlYXRlZEF0IERhdGVUaW1lIEBkZWZhdWx0KG5vdygpKQp9Cg=='));

class Datasources {
  Datasources({this.db});

  final _i1.PrismaNullable<_i1.Datasource> db;

  Map<String, _i1.Datasource> _toOverwrites() {
    final $overwrites = <String, _i1.PrismaNullable<_i1.Datasource>>{'db': db}
      ..removeWhere((
        _,
        v,
      ) =>
          v == null);
    return $overwrites.cast();
  }
}

extension ModelDelegateOnPrismaClientExtension on _i1.PrismaClient {
  UserDelegate get user => UserDelegate._(
        $engine,
        $headers,
      );
}

_i1.PrismaClient createPrismaClient({
  Datasources? datasources,
  Iterable<_i1.PrismaLogDefinition>? log,
}) {
  final _i1.PrismaLogEmitter logEmitter = _i1.PrismaLogEmitter(log ?? []);
  final _i1.Engine engine = _i1.DataProxyEngine(
    datasources: datasources?._toOverwrites() ?? <String, _i1.Datasource>{},
    dmmf: dmmf,
    schema: schema,
    environment: environment,
    logEmitter: logEmitter,
    intenalDatasources: [const _i1.Datasource(url: 'DATABASE_URL')],
  );
  final _i1.PrismaClient client = _i1.PrismaClient.fromEngine(engine);
  return client;
}
